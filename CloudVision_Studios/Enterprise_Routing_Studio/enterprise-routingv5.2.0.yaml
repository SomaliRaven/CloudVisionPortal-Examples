- service: arista.studio.v1.StudioConfigService
  method: Set
  body:
    value:
      key:
        studio_id: studio-enterprise-routing
        workspace_id: ws-enterprise-routing
      display_name: Enterprise Routing
      description: >-
        Deploy and manage routed networks that can support MLAG, OSPF, IS-IS,
        BGP, and EVPN-VXLAN.
      template:
        type: TEMPLATE_TYPE_MAKO
        body: |
          <%
          from ipaddress import ip_address, IPv4Address
          import ipaddress
          import tagsearch_python.tagsearch_pb2_grpc as tsgr
          import tagsearch_python.tagsearch_pb2 as tspb
          from arista.tag.v2.tag_pb2 import TagKey, TagAssignmentKey
          from arista.tag.v2.services import TagConfigServiceStub, TagAssignmentConfigServiceStub
          from arista.tag.v2.services import TagConfigSetRequest, TagAssignmentConfigSetRequest

          class InterfaceConfig:
            def __init__(self):
              self.Port = ""
              self.IPAddress = ""
              self.Mask = ""
              self.IPv6Address = ""
              self.IPv6Mask = ""
              self.IPNetwork = ""
              self.Host = ""
              self.NeighborHostname = ""
              self.NeighborPort = ""
              self.ChannelGroup = ""
              self.Description = ""
              self.Speed = ""
              self.MTU = ""
              self.Asn = ""
              self.neighborIp = ""
              self.v6neighborIp = ""

          class Mlag:
            def __init__(self):
              self.ID = ""
              self.PeerLink = False
              self.Interfaces = []
              self.MlagIPAddr = ""
              self.MlagNetmask = ""
              self.MlagNetwork = ""
              self.MlagIPPeerAddr = ""
              self.MlagIPv6Addr = ""
              self.Mlagv6Netmask = ""
              self.Mlagv6Network = ""
              self.MlagIPv6PeerAddr = ""
              self.MlagPeerName = ""
              self.ReloadDelayMlag = ""
              self.ReloadDelayNonMlag = ""
              self.HeartBeatInterval = ""
              self.PeerAddressHeartBeat = ""
              self.DualPrimaryDetectionDelay = ""
              self.DualPrimaryRecoveryDelay = ""
              self.EnableIgpOnPeerLink = False

          class NeighborIntf:
            def __init__(self):
              self.IPAddress = ""
              self.Port = ""
              self.Host = ""

          class BGPPeerGroup:
            def __init__(self):
              self.Name = ""
              self.EVPN = False
              self.Peerer = False
              self.NeighborASN = ""
              self.NeighborIntfs = []

          class StaticRoutes:
            def __init__(self):
              self.Prefix = ""
              self.NextHop = ""
              self.Name = ""
              self.VRF = ""

          class PLName:
            def __init__(self):
              self.SeqNum = ""
              self.PermitDeny = ""
              self.Prefix = ""
              self.PrefixLength = ""
              self.MaskLength = ""

          class PrefixLists:
            def __init__(self):
              self.PLName = []
              self.Name = ""
              self.AddressFamily = ""

          class RouteMapIn:
            def __init__(self):
              self.SeqNum = ""
              self.PermitDeny = ""
              self.PrefixListIn = ""
              self.MatchCommunity = ""
              self.SetCommunity = ""
              self.LocalPref = ""
              self.PrependRepeat = ""
              self.MatchRouteType = ""
              self.SetIpNextHop = ""

          class RouteMapOut:
            def __init__(self):
              self.SeqNum = ""
              self.PermitDeny = ""
              self.PrefixListOut = ""
              self.MatchCommunity = ""
              self.SetCommunity = ""
              self.PrependRepeat = ""
              self.MatchRouteType = ""
              self.SetIpNextHop = ""

          class RedistRouteMap:
            def __init__(self):
              self.SeqNum = ""
              self.PermitDeny = ""
              self.PrefixList = ""
              self.MatchCommunity = ""
              self.SetTag = ""

          class PeerGroups:
            def __init__(self):
              self.PeerGroupName = ""
              self.PeerASN = ""
              self.Redis = False
              self.RedisStatic = False
              self.RedisConnected = False
              self.Description = ""
              self.EbgpAuthKey = ""
              self.AddressFamily = ""
              self.EvpnEncap = ""
              self.EvpnDefaultEncap = ""
              self.MplsEncapNextHopInterface = ""
              self.EvpnDomain = ""
              self.UpdateSource = ""
              self.Aggregates = []
              self.LocalAS = ""
              self.NextHopSelf = ""
              self.BFD = False
              self.Distance = ""
              self.EbgpMultiHopTtl = ""
              self.AllowAsIn = ""
              self.EvpnNextHopSelf = ""
              self.MaxAcceptedRoutes = ""
              self.RouteMapIn = []
              self.RouteMapOut = []
              self.OriginateDefault = ""
              self.BGPOriginateDefault = ""
              self.RedistVRF = ""
              self.RedistRouteMap = []

          class EbgpNeighbors:
            def __init__(self):
              self.NeighborIp = ""
              self.PeerASN = ""
              self.PeerGroup = ""
              self.Vrf = ""
              self.PeerGroup = ""
          class Aggregates:
            def __init__(self):
              self.Route = ""

          class ExtVlan:
            def __init__(self):
              self.Mask = ""
              self.Ospf = ""
              self.IPAddress = ""
              self.VlanID = ""
              self.Vrf = ""
              self.Description = ""

          class ExternalInterfaces:
            def __init__(self):
              self.InterfaceName = ""
              self.Description = ""
              self.Speed = ""
              self.MTU = ""
              self.IPAddress = ""
              self.SubnetMask = ""
              self.IPv6Address = ""
              self.IPv6SubnetMask = ""
              self.Vrf = ""
              self.Ospf = ""

          class SwitchConfig:
            def __init__(self):
              self.Model = ""
              self.EOSVersion = ""
              self.Role = ""
              self.Hostname = ""
              self.FabricNetwork = []
              self.FabricNetmask = ""
              self.Interfaces = []
              self.PortChannels = []
              self.MlagMembers = Mlag()
              self.Loopback0IP = ""
              self.Loopback0Network = ""
              self.MlagIPAddr = ""
              self.MlagIPPeerAddr = ""
              self.MlagNetmask =""
              self.MlagNetwork = ""
              self.MlagIPv6Addr = ""
              self.MlagIPv6PeerAddr = ""
              self.Mlagv6Netmask =""
              self.Mlagv6Network = ""
              self.MlagPeerName = ""
              self.LogicalVTEP = ""
              self.LogicalIpv6VTEP = ""
              self.VxlanVirtualRouterEncapMacAddress = ""
              self.ASN = ""
              self.BGPPeerGroups = []
              self.EbgpNeighbors = []
              self.StaticRoutes = []
              self.PrefixLists = []
              self.PeerGroups = []
              self.ExternalInterfaces = []
              self.SegmentIndex = ""

          def validIPAddress(ip: str) -> str:
            ip = ipaddress.ip_address(ip)
            if isinstance(ip, ipaddress.IPv4Address):
              return "IPv4"
            elif isinstance(ip, ipaddress.IPv6Address):
              return "IPv6"
            else:
              raise Exception('IP "%s" is not a valid IPv4 or IPv6 address' % (ip))

          def get_isis_addr(area_id, area_number, lo0):
            area_id_str = str(area_id)
            if len(area_id_str) != 2:
              area_id_str = '0'+area_id_str
            area_number_str = str(area_number)
            len_area_number_str = len(area_number_str)
            for i in range(0, 4 - len_area_number_str) :
              area_number_str = '0' + area_number_str
            octets = lo0.split('.')
            lo0_filled_with0 = ""
            for octet in octets :
              temp = octet
              for i in range(0, 3 - len(octet)):
                 temp =  '0' + temp
              lo0_filled_with0 = lo0_filled_with0 + temp
            sys_id = lo0_filled_with0[0:4] +'.'+lo0_filled_with0[4:8]+'.'+lo0_filled_with0[8:12]
            return area_id_str+'.'+area_number_str+'.'+sys_id+'.00'

          tagValues = {}
          myNetwork = None
          myRoleER = False
          myRoleRR = False
          myRoleCore = False
          mlagTagged = False
          networkLabel = 'Network'
          myDevice = ctx.getDevice()
          myDeviceID = myDevice.id
          erDomainLabel = 'Edge-Router-Domain'
          hostnameDeviceIDDict = {}
          deviceIDNodeNumDict = {}
          deviceIDSwitchConfigDict = {}
          myerDomain = ""
          erDomainToDeviceIDDict = {}
          deviceIDHostnameDict = {}
          highesterNumber = 0
          highestrrNumber = 0
          highestcoreNumber = 0
          lb0Label = 'router_bgp.router_id'
          asLabel = 'router_bgp.as'

          for dev in ctx.topology.getDevices():
            sc = deviceIDSwitchConfigDict.get(dev.id, SwitchConfig())
            sc.Hostname = dev.hostName
            sc.Model = dev.modelName
            deviceIDSwitchConfigDict[dev.id] = sc
            hostnameDeviceIDDict[dev.hostName] = dev.id
            deviceIDHostnameDict[dev.id] = dev.hostName
            if dev.id == myDeviceID:
              myHostname = dev.hostName
              myModel = dev.modelName

          tsclient = ctx.getApiClient(tsgr.TagSearchStub)
          tvs = tspb.TagValueSearchRequest(label=networkLabel, workspace_id=ctx.studio.workspaceId, topology_studio_request=True)
          tvsresp = tsclient.GetTagValueSuggestions(tvs)
          for tag in tvsresp.tags:
            query = '{}:\"{}\" AND device:{}'.format(tag.label, tag.value, myDeviceID)
            tagtmr = tspb.TagMatchRequestV2(query=query, workspace_id=ctx.studio.workspaceId, topology_studio_request=True)
            tagresp = tsclient.GetTagMatchesV2(tagtmr)
            for match in tagresp.matches:
              if match.device.device_id == myDeviceID:
                myNetwork = tag.value

          tvs = tspb.TagValueSearchRequest(label=erDomainLabel, workspace_id=ctx.studio.workspaceId, topology_studio_request=True)
          tvsresp = tsclient.GetTagValueSuggestions(tvs)
          for tag in tvsresp.tags:
            query = '{}:\"{}\"'.format(tag.label, tag.value)
            tagtmr = tspb.TagMatchRequestV2(query=query, workspace_id=ctx.studio.workspaceId, topology_studio_request=True)
            tagresp = tsclient.GetTagMatchesV2(tagtmr)
            for index, match in enumerate(tagresp.matches, 1):
              erDomainList = erDomainToDeviceIDDict.get(tag.value)
              if erDomainList is None :
                erDomainList = []
              erDomainList.append(match.device.device_id)
              erDomainToDeviceIDDict[tag.value] = erDomainList
              if match.device.device_id == myDeviceID:
                myerDomain = tag.value
              deviceIDNodeNumDict[match.device.device_id] = index
              sc = deviceIDSwitchConfigDict.get(match.device.device_id, SwitchConfig())
              sc.Role = "er"
              deviceIDSwitchConfigDict[match.device.device_id] = sc
              if match.device.device_id == myDeviceID:
                myRoleER = True

            tagtmr = tspb.TagMatchRequestV2(query="Role:Core" , workspace_id=ctx.studio.workspaceId, topology_studio_request=True)
            tagresp = tsclient.GetTagMatchesV2(tagtmr)
            for index, match in enumerate(tagresp.matches, 1):
              deviceIDNodeNumDict[match.device.device_id] = index
              sc = deviceIDSwitchConfigDict.get(match.device.device_id, SwitchConfig())
              assert sc.Role is not None, "Role is already set on {}. ".format(
                          device_id
                      )
              sc.Role = "core"
              deviceIDSwitchConfigDict[match.device.device_id] = sc
              if match.device.device_id == myDeviceID:
                myRoleCore = True

            tagtmr = tspb.TagMatchRequestV2(query="Role:RR" , workspace_id=ctx.studio.workspaceId, topology_studio_request=True)
            tagresp = tsclient.GetTagMatchesV2(tagtmr)
            for index, match in enumerate(tagresp.matches, 1):
              deviceIDNodeNumDict[match.device.device_id] = index
              sc = deviceIDSwitchConfigDict.get(match.device.device_id, SwitchConfig())
              assert sc.Role is not None, "Role is already set on {}. ".format(
                          device_id
                      )
              sc.Role = "rr"
              deviceIDSwitchConfigDict[match.device.device_id] = sc
              if match.device.device_id == myDeviceID:
                myRoleRR = True

          if not myNetwork:
            return

          def create_tag(tag_key):
            '''
            tag_key is a TagKey
            '''
            tcsr = TagConfigSetRequest()
            tcsr.value.key.workspace_id.value = tag_key.workspace_id.value
            tcsr.value.key.element_type = tag_key.element_type
            tcsr.value.key.label.value = tag_key.label.value
            tcsr.value.key.value.value = tag_key.value.value
            client = ctx.getApiClient(TagConfigServiceStub)
            client.Set(tcsr)

          def apply_tag(tag_assignment_key):
            '''
            tag_assignment_key is a TagAssignmentKey
            '''
            tacsr = TagAssignmentConfigSetRequest()
            tacsr.value.key.workspace_id.value = tag_assignment_key.workspace_id.value
            tacsr.value.key.element_type = tag_assignment_key.element_type
            tacsr.value.key.label.value = tag_assignment_key.label.value
            tacsr.value.key.value.value = tag_assignment_key.value.value
            tacsr.value.key.device_id.value = tag_assignment_key.device_id.value
            tacsr.value.key.interface_id.value = tag_assignment_key.interface_id.value
            tacsr.value.remove.value = False
            client = ctx.getApiClient(TagAssignmentConfigServiceStub)
            client.Set(tacsr)

          def remove_tag(tag_assignment_key):
            '''
            tag_assignment_key is a TagAssignmentKey
            '''
            tacsr = TagAssignmentConfigSetRequest()
            tacsr.value.key.workspace_id.value = tag_assignment_key.workspace_id.value
            tacsr.value.key.element_type = tag_assignment_key.element_type
            tacsr.value.key.label.value = tag_assignment_key.label.value
            tacsr.value.key.value.value = tag_assignment_key.value.value
            tacsr.value.key.device_id.value = tag_assignment_key.device_id.value
            tacsr.value.key.interface_id.value = tag_assignment_key.interface_id.value
            tacsr.value.remove.value = True
            client = ctx.getApiClient(TagAssignmentConfigServiceStub)
            client.Set(tacsr)

          def get_tag_values_applied_to_device(tag_assignment_key):
            label = tag_assignment_key.label.value
            device_id = tag_assignment_key.device_id.value
            workspace_id = tag_assignment_key.workspace_id.value
            # Create tagstub
            tsclient = ctx.getApiClient(tsgr.TagSearchStub)
            matching_tags = []
            # Create TagValueSearchRequest
            tvsr = tspb.TagValueSearchRequest(label=label, workspace_id=workspace_id, topology_studio_request=True)
            for tag in tsclient.GetTagValueSuggestions(tvsr).tags:
              query = '{}:\"{}\" AND device:{}'.format(tag.label, tag.value, device_id)
              tagmr = tspb.TagMatchRequestV2(query=query, workspace_id=workspace_id, topology_studio_request=True)
              tagmresp =  tsclient.GetTagMatchesV2(tagmr)
              for match in tagmresp.matches:
                if match.device.device_id == device_id:
                  matching_tags.append(tag)
            return matching_tags

          def update_device_tag(tag_assignment_key, multiple_values=False):
            """
            tag_assignment_key is a TagAssignmentKey that you want to update the device with
            """
            applied_tags = get_tag_values_applied_to_device(tag_assignment_key)
            already_assigned = False
            for tag in applied_tags:
              # tag_assignment_key.value.value.strip() == "" accounts for no tag value set
              if tag_assignment_key.value.value.strip() == "" or tag.value != tag_assignment_key.value.value:
                if multiple_values:
                  continue
                tak_to_remove = TagAssignmentKey()
                tak_to_remove.workspace_id.value = tag_assignment_key.workspace_id.value
                tak_to_remove.element_type = 1
                tak_to_remove.device_id.value =  tag_assignment_key.device_id.value
                tak_to_remove.label.value = tag_assignment_key.label.value
                tak_to_remove.value.value = tag.value
                remove_tag(tak_to_remove)
              else:
                already_assigned = True
            if already_assigned or tag_assignment_key.value.value.strip() == "":
              return
            #Create desired tag
            tag_key = TagKey()
            tag_key.workspace_id.value = tag_assignment_key.workspace_id.value
            tag_key.element_type = 1
            tag_key.label.value = tag_assignment_key.label.value
            tag_key.value.value = tag_assignment_key.value.value
            create_tag(tag_key)
            # Apply desired tag
            apply_tag(tag_assignment_key)

          def set_bgp_tags(ASN):
            tag_labels = {"router_bgp.as": ASN}
            for label, config_path in tag_labels.items():
              #Remove tags with same label that don't match proper value
              #Skip creating and assigning if it's already assigned
              tag_assignment_key = TagAssignmentKey()
              tag_assignment_key.workspace_id.value = ctx.studio.workspaceId
              tag_assignment_key.element_type = 1
              tag_assignment_key.device_id.value = ctx.getDevice().id
              tag_assignment_key.label.value = label
              tag_assignment_key.value.value = str(config_path)
              update_device_tag(tag_assignment_key)

          def set_Vtep_tags():
            tag_labels = {"Vtep": "True"}
            for label, config_path in tag_labels.items():
              #Remove tags with same label that don't match proper value
              #Skip creating and assigning if it's already assigned
              tag_assignment_key = TagAssignmentKey()
              tag_assignment_key.workspace_id.value = ctx.studio.workspaceId
              tag_assignment_key.element_type = 1
              tag_assignment_key.device_id.value = ctx.getDevice().id
              tag_assignment_key.label.value = label
              tag_assignment_key.value.value = str(config_path)
              update_device_tag(tag_assignment_key)

          def set_NetworkServicesL2_tags():
            tag_labels = {"NetworkServices": "L2"}
            for label, config_path in tag_labels.items():
              #Remove tags with same label that don't match proper value
              #Skip creating and assigning if it's already assigned
              tag_assignment_key = TagAssignmentKey()
              tag_assignment_key.workspace_id.value = ctx.studio.workspaceId
              tag_assignment_key.element_type = 1
              tag_assignment_key.device_id.value = ctx.getDevice().id
              tag_assignment_key.label.value = label
              tag_assignment_key.value.value = str(config_path)
              update_device_tag(tag_assignment_key, multiple_values=True)

          def set_NetworkServicesL3_tags():
            tag_labels = {"NetworkServices": "L3"}
            for label, config_path in tag_labels.items():
              #Remove tags with same label that don't match proper value
              #Skip creating and assigning if it's already assigned
              tag_assignment_key = TagAssignmentKey()
              tag_assignment_key.workspace_id.value = ctx.studio.workspaceId
              tag_assignment_key.element_type = 1
              tag_assignment_key.device_id.value = ctx.getDevice().id
              tag_assignment_key.label.value = label
              tag_assignment_key.value.value = str(config_path)
              update_device_tag(tag_assignment_key, multiple_values=True)

          def neighborv4IPs(IPAddress):
            # assuming a /31 subnet, which is the default value in the studio
            # if the last octet, the 4th position in the list
            # is even, then the neighbor address is odd, if odd the neighbor is even
            octetList = IPAddress.split(".")
            lastOctet = int(octetList[3])
            if (lastOctet % 2) == 0:
              octetList[3] = str(lastOctet + 1)
            else:
              octetList[3] = str(lastOctet - 1)
            neighborIp = ".".join(octetList)
            return neighborIp


          def neighborv6IPs(IPv6Address):
            # assuming a /127, which is the default in the studio
            # split the IPv6 address into a list and reverse the list so position 0 is always the end of the address
            # if the end of the address is even then the neighbor is odd, if odd then the neighbor is even
            v6octetList = IPv6Address.split(":")
            v6octetList.reverse()
            v6lastOctet = int(v6octetList[0])
            if (v6lastOctet % 2) == 0:
              v6octetList[0] = str(v6lastOctet + 1)
            else:
              v6octetList[0] = str(v6lastOctet - 1)
            v6octetList.reverse()
            v6neighborIp = ":".join(v6octetList)
            return v6neighborIp

          def config_rr():
            if rrInterface:
              for intf in myDevice.getInterfaces():
                intfName = intf.name
                val = rrInterface.resolve(intfName, strict=True)
                if not val:
                  continue
                peer_device, peer_interface = intf.getPeerInfo()
                intf = InterfaceConfig()
                intf.Port = intfName
                intf.NeighborHostname = deviceIDHostnameDict[peer_device.id]
                intf.NeighborPort = peer_interface.name
                neighborDeviceID = peer_device.id
                neighborNodeNum = deviceIDNodeNumDict.get(neighborDeviceID)
                assert neighborNodeNum, "neighbor missing: %s" % neighborDeviceID
                intf.Description = val["rrNeighborParams"]["description"]
                intf.IPAddress = val["rrNeighborParams"]["rripAddress"]
                intf.Mask = val["rrNeighborParams"]["rrsubnetMask"]
                intf.IPv6Address = val["rrNeighborParams"]["rrIpv6Address"]
                intf.IPv6Mask = val["rrNeighborParams"]["rrIpv6SubnetMask"]
                intf.Speed = val["rrNeighborParams"]["rrspeed"]
                intf.MTU = val["rrNeighborParams"]["rrmtu"]
                mySC.Interfaces.append(intf)
                neighborSC = deviceIDSwitchConfigDict[neighborDeviceID]
                neighborIntf = InterfaceConfig()
                neighborIntf.Port = intf.NeighborPort
                neighborIntf.NeighborPort = intf.Port
                neighborSC.Interfaces.append(neighborIntf)
                if not rrBGPDynamicNeighbors:
                  scList = asnBGPPeerDict.get(neighborSC.ASN, [])
                  scList.append(neighborSC)
                  asnBGPPeerDict[neighborSC.ASN] = scList

            for key in asnBGPPeerDict :
              scList = asnBGPPeerDict.get(key)
              vpnPeerGroup = BGPPeerGroup()
              vpnPeerGroup.EVPN  = True
              neighborLoopbacks = []
              neighborIntfs = []
              for sc in scList :
                evpnPeerIntf = NeighborIntf()
                evpnPeerIntf.Host = sc.Hostname
                evpnPeerIntf.Port = "Loopback0"
                evpnPeerIntf.IPAddress = sc.Loopback0IP
                neighborLoopbacks.append(evpnPeerIntf)
              vpnPeerGroup.NeighborIntfs = neighborLoopbacks
              mySC.BGPPeerGroups.append(vpnPeerGroup)

          def config_er():
            if mpls and (sr or srTe):
              g = erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["nodeSegmentIndexGroup"]["nodeSegmentIndex"]
              mySC.SegmentIndex = g


            mlagEnabled = False
            mlagSubnetMask = 31
            mlagv6SubnetMask = 64
            mlagGroup = networksInputs["pod"]["erDomains"].resolve()["erDomain"]["erDetails"].resolve()["erLinkDetails"]["mlagGroup"]
            mlagRole = mlagGroup["mlagRole"]
            mlagMember = 0
            if mlagRole == "Primary":
              mlagMember =  1
            elif mlagRole == "Secondary":
              mlagMember =  2
            mlag = Mlag()
            mySC.MlagNetwork = ipaddress.ip_network(networksInputs["pod"]["commonMlagConfig"]["mlagLinkSubnet"])
            mySC.Mlagv6Network = ipaddress.ip_network(networksInputs["pod"]["commonMlagConfig"]["ipv6MlagLinkSubnet"])
            mySC.MlagIPAddr = mySC.MlagNetwork[(mlagMember % 2) - 1]
            mySC.MlagNetmask = mlagSubnetMask
            mySC.MlagIPPeerAddr = mySC.MlagNetwork[mlagMember % 2]
            mySC.MlagIPv6Addr = mySC.Mlagv6Network[(mlagMember % 2) - 1]
            mySC.Mlagv6Netmask = mlagv6SubnetMask
            mySC.MlagIPv6PeerAddr = mySC.Mlagv6Network[mlagMember % 2]
            mlagIntf1 = InterfaceConfig()
            mlagIntf2 = InterfaceConfig()
            mlagInt = mlagGroup["mlagInterfaces"]
            mlagIP = mlagGroup["mlagOverrideGlobalSubnet"]
            if mlagInt and mlagRole != "None":
              mySC.ReloadDelayMlag = mlagGroup["reloadDelayMlag"]
              mySC.ReloadDelayNonMlag = mlagGroup["reloadDelayNonMlag"]
              mySC.HeartBeatInterval = mlagGroup["heartBeatInterval"]
              mySC.PeerAddressHeartBeat = mlagGroup["peerAddressHeartBeat"]
              mySC.DualPrimaryDetectionDelay = mlagGroup["dualPrimaryDetectionDelay"]
              mySC.DualPrimaryRecoveryDelay = mlagGroup["dualPrimaryRecoveryDelay"]
              mySC.EnableIgpOnPeerLink = mlagGroup["enableIgpOnPeerLink"]
              for intf in myDevice.getInterfaces():
                intfName = intf.name
                val = mlagInt.resolve(intfName, strict=True)
                if not val:
                  continue
                if mlagIntf1.Port:
                  mlagIntf2.Port = intfName
                  mlagIntf2.Description = val.mlagInterfacesGroup.mlagDescription
                  mlagIntf2.Speed = val.mlagInterfacesGroup.mlagSpeed
                  if mlagIP.mlagIpAddress:
                    mySC.MlagIPAddr = mlagIP.mlagIpAddress
                    mySC.MlagNetmask = mlagIP.mlagSubnetMask
                    mySC.MlagIPPeerAddr = mlagIP.mlagPeerAddress
                else:
                  mlagIntf1.Port = intfName
                  mlagIntf1.Description = val.mlagInterfacesGroup.mlagDescription
                  mlagIntf1.Speed = val.mlagInterfacesGroup.mlagSpeed
                  if mlagIP.mlagIpAddress:
                    mySC.MlagIPAddr = mlagIP.mlagIpAddress
                    mySC.MlagNetmask = mlagIP.mlagSubnetMask
                    mySC.MlagIPPeerAddr = mlagIP.mlagPeerAddress
            if mlagIntf1.Port != "" :
              mlag.Interfaces.append(mlagIntf1)
            if mlagIntf2.Port != "" :
              mlag.Interfaces.append(mlagIntf2)
            if mlagIntf1.Port !="" or mlagIntf2.Port != "":
              mySC.MlagMembers = mlag
              mlagEnabled = True
              mlagedDevices = erDomainToDeviceIDDict.get(myerDomain)
              if mlagedDevices is not None and len(mlagedDevices) == 2 :
                peerDeviceID = ""
                bgpPeerIntf  = NeighborIntf()
                if mlagedDevices[0] == myDeviceID:
                  peerDeviceID = mlagedDevices[1]
                elif mlagedDevices[1] == myDeviceID:
                  peerDeviceID = mlagedDevices[0]
                bgpPeerIntf.Host = deviceIDHostnameDict[peerDeviceID]
                mySC.MlagPeerName = deviceIDHostnameDict[peerDeviceID]
                bgpPeerIntf.Port = "MLAG"
                bgpPeerIntf.IPAddress = mySC.MlagIPPeerAddr
                bgpPeerGroup = BGPPeerGroup()
                bgpPeerGroup.Name = "Peer_ER"
                bgpPeerGroup.NeighborASN = mySC.ASN
                bgpPeerGroup.Peerer = True
                bgpPeerGroup.NeighborIntfs.append(bgpPeerIntf)
                mySC.BGPPeerGroups.append(bgpPeerGroup)


            if erDomains["erDomain"]["rrHostnames"]:
              scList = []
              for rr in erDomains["erDomain"]["rrHostnames"]:
                neighborDeviceID = hostnameDeviceIDDict[rr.rrHostname]
                neighborNodeNum = deviceIDNodeNumDict.get(neighborDeviceID)
                assert neighborNodeNum, "rr neighbor missing: %s" % neighborDeviceID
                neighborSC = deviceIDSwitchConfigDict[neighborDeviceID]
                scList.append(neighborSC)
              asnBGPPeerDict[neighborSC.ASN] = scList

            er2erLink = erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["erneighbors"]
            if er2erLink:
              for intf in myDevice.getInterfaces():
                intfName = intf.name
                val = er2erLink.resolve(intfName, strict=True)
                if not val:
                  continue
                peer_device, peer_interface = intf.getPeerInfo()
                assert peer_device is not None, "peer is missing on specified edge-router interface: %s" % intfName
                intf = InterfaceConfig()
                intf.Port = intfName
                intf.NeighborHostname = deviceIDHostnameDict[peer_device.id]
                intf.NeighborPort = peer_interface.name
                intf.Description = val["erneighborDetails"]["description"]
                intf.IPAddress = val["erneighborDetails"]["eripAddress"]
                intf.Mask = val["erneighborDetails"]["ersubnetMask"]
                intf.IPv6Address = val["erneighborDetails"]["erIpv6Address"]
                intf.IPv6Mask = val["erneighborDetails"]["erIpv6SubnetMask"]
                intf.Speed = val["erneighborDetails"]["erspeed"]
                intf.Asn = val["erneighborDetails"]["erAsn"]
                if intf.IPAddress:
                  intf.neighborIp = neighborv4IPs(intf.IPAddress)
                if intf.IPv6Address:
                  intf.v6neighborIp = neighborv6IPs(intf.IPv6Address)
                neighborDeviceID = peer_device.id
                neighborNodeNum = deviceIDNodeNumDict.get(neighborDeviceID)
                assert neighborNodeNum, "neighbor missing: %s" % neighborDeviceID
                mySC.Interfaces.append(intf)

            staticRoutes = erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["staticRoutes"]
            for route in staticRoutes:
              prefix = StaticRoutes()
              prefix.Prefix = route["prefix"]
              prefix.NextHop = route["nextHop"]
              prefix.Name = route["name"]
              prefix.VRF = route["srvrf"]
              mySC.StaticRoutes.append(prefix)

            prefixList = erDomains["erDomain"]["prefixLists"]
            for name in prefixList:
              pl = PrefixLists()
              pl.Name = name["prefixListName"]
              pl.AddressFamily = name["erAddressFamily"]
              pllist = name.get("seqNums", [])
              name = []
              for seq in pllist:
                pls = PLName()
                pls.SeqNum = seq.seqNum
                pls.PermitDeny = seq.permitDeny
                pls.Prefix = seq.prefix
                pls.PrefixLength = seq.prefixLength
                pls.MaskLength = seq.maskLength
                name.append(pls)
              pl.PLName = name
              mySC.PrefixLists.append(pl)

            peerGroups = erDomains["erDomain"]["peerGroups"]
            for name in peerGroups:
              pg = PeerGroups()
              pg.PeerGroupName = name["peerGroupName"]
              pg.Redis = name["bgpOptions"]["redistributeRoutes"]
              pg.RedisStatic = name["bgpOptions"]["redistributeStaticRoutes"]
              pg.RedisConnected = name["bgpOptions"]["redistributeConnectedRoutes"]
              pg.OriginateDefault = name["bgpOptions"]["ospfDefaultInformationOriginate"]
              pg.BGPOriginateDefault = name["bgpOptions"]["bgpDefaultInformationOriginate"]
              pg.RedistVRF = name["bgpOptions"]["redistributionVrf"]
              pg.UpdateSource = name["bgpOptions"]["updateSource"]
              pg.Description = name["description"]
              pg.AddressFamily = name["erAddressFamily"]
              pg.LocalAS = name["asnSettings"]["localAs"]
              pg.NextHopSelf = name["bgpOptions"]["nextHop"]
              pg.BFD = name["bgpOptions"]["bfd"]
              pg.EbgpMultiHopTtl = name["bgpOptions"]["eBgpMultiHopTtl"]
              pg.AllowAsIn = name["bgpOptions"]["allowAsIn"]
              pg.MaxAcceptedRoutes = name["bgpOptions"]["maximumAcceptedRoutes"]
              pg.Distance = name["bgpOptions"]["bgpDistance"]
              pg.EvpnNextHopSelf = name["dciOptions"]["addressFamilyEvpnNextHopSelf"]
              pg.EvpnDomain = name["dciOptions"]["evpnDomain"]
              pg.EvpnEncap = name["dciOptions"]["neighborEncapsulation"]
              pg.EvpnDefaultEncap = name["dciOptions"]["defaultEncapsulation"]
              pg.MplsEncapNextHopInterface = name["dciOptions"]["encapsulationMplsNextHop"]
              pg.EbgpAuthKey = name["eBgpAuthKey"]

              aggregateRoutes = []
              aggregates = name["aggregateRoutes"]
              for route in aggregates:
                details = Aggregates()
                details.Route = route["aggregateRoute"]
                aggregateRoutes.append(details)
              pg.Aggregates = aggregateRoutes

              routeMapIn = name["routeMapIn"]
              rmIn = []
              for seq in routeMapIn:
                rmis = RouteMapIn()
                rmis.SeqNum = seq.seqNum
                rmis.PermitDeny = seq.permitDeny
                rmis.PrefixListIn = seq.prefixList
                rmis.MatchCommunity = seq.matchCommunity
                rmis.SetCommunity = seq.setCommunity
                rmis.LocalPref = seq.localPref
                rmis.PrependRepeat = seq.asPathPrependRepeat
                rmis.MatchRouteType = seq.matchRouteType
                rmis.SetIpNextHop = seq.setIpNextHop
                rmIn.append(rmis)
              pg.RouteMapIn = rmIn

              routeMapOut = name["routeMapOut"]
              rmOut = []
              for seq in routeMapOut:
                rmos = RouteMapOut()
                rmos.SeqNum = seq.seqNum
                rmos.PermitDeny = seq.permitDeny
                rmos.PrefixListOut = seq.prefixList
                rmos.MatchCommunity = seq.matchCommunity
                rmos.SetCommunity = seq.setCommunity
                rmos.PrependRepeat = seq.asPathPrependRepeat
                rmos.MatchRouteType = seq.matchRouteType
                rmos.SetIpNextHop = seq.setIpNextHop
                rmOut.append(rmos)
              pg.RouteMapOut = rmOut

              edgeRedistRouteMap = name["RedistributionRouteMap"]
              reDistrm = []
              for seq in edgeRedistRouteMap:
                rdrms = RedistRouteMap()
                rdrms.SeqNum = seq.redistseqnum
                rdrms.PermitDeny = seq.redistpermitDeny
                rdrms.PrefixList = seq.redistprefixList
                rdrms.MatchCommunity = seq.redistmatchCommunity
                rdrms.SetTag = seq.redistsetTag
                reDistrm.append(rdrms)
              pg.RedistRouteMap = reDistrm
              mySC.PeerGroups.append(pg)

            neighbors = erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["eBgNeighbors"]
            for neighbor in neighbors:
              details = EbgpNeighbors()
              details.NeighborIp = neighbor["neighborIp"]
              details.PeerASN = neighbor["peerAsn"]
              details.Vrf = neighbor["vrf"]
              details.PeerGroup = neighbor["peerGroup"]
              mySC.EbgpNeighbors.append(details)

            externalInterfaces = erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["interfaces"]
            if externalInterfaces:
              for intf in externalInterfaces:
                intfName = intf.get("extinterfaceName")
                details = ExternalInterfaces()
                details.InterfaceName = intfName
                # check if sub interface notation is used
                details.VlanID = ""
                splitlist = []
                issubint = intfName.find(".")
                # separate interface name from sub interface and extract vlan id
                if issubint != -1:
                  splitlist = intfName.split(".")
                  vlan = ''.join(filter(str.isnumeric, splitlist[1]))
                  details.VlanID = vlan
                # strip subinterface part of input from interface name
                  details.InterfaceName = splitlist[0]
                details.Description = intf.get("extdescription")
                details.MTU = intf.get("extmtu")
                details.Speed = intf.get("extspeed")
                details.Mask = intf.get("extsubnetMask")
                details.IPAddress = intf.get("extipAddress")
                details.IPv6Address = intf.get("extIpv6Address")
                details.IPv6Mask = intf.get("extIpv6SubnetMask")
                details.Vrf = intf.get("extvrf")
                details.Ospf = intf.get("extospf")
                mySC.ExternalInterfaces.append(details)

            for key in asnBGPPeerDict :
              scList = asnBGPPeerDict.get(key)
              vpnPeerGroup = BGPPeerGroup()
              vpnPeerGroup.EVPN  = True
              vpnPeerGroup.Name = "RR"
              vpnPeerGroup.NeighborASN = key
              neighborLoopbacks = []
              neighborIntfs = []
              for sc in scList :
                evpnPeerIntf = NeighborIntf()
                evpnPeerIntf.Host = sc.Hostname
                evpnPeerIntf.Port = "Loopback0"
                evpnPeerIntf.IPAddress = sc.Loopback0IP
                neighborLoopbacks.append(evpnPeerIntf)
              vpnPeerGroup.NeighborIntfs = neighborLoopbacks
              mySC.BGPPeerGroups.append(vpnPeerGroup)

            return mlagEnabled

          def config_core():
            if mpls and (sr or srTe):
              g = networksInputs["pod"]["coreRouters"].resolve()["coreLinkDetails"]["corenodeSegmentIndexGroup"]["corenodeSegmentIndex"]
              mySC.SegmentIndex = g

            core2erLink = networksInputs["pod"]["coreRouters"].resolve()["coreLinkDetails"]["coreneighbor"]
            if core2erLink :
              for intf in myDevice.getInterfaces():
                intfName = intf.name
                val = core2erLink.resolve(intfName, strict=True)
                if val:
                  peer_device, peer_interface = intf.getPeerInfo()
                  intf = InterfaceConfig()
                  intf.Port = intfName
                  intf.NeighborHostname = deviceIDHostnameDict[peer_device.id]
                  intf.NeighborPort = peer_interface.name
                  intf.Description = val["coreneighborDetails"]["description"]
                  intf.IPAddress = val["coreneighborDetails"]["coreipAddress"]
                  intf.Mask = val["coreneighborDetails"]["coresubnetMask"]
                  intf.IPv6Address = val["coreneighborDetails"]["coreIpv6Address"]
                  intf.IPv6Mask = val["coreneighborDetails"]["coreIpv6SubnetMask"]
                  intf.Speed = val["coreneighborDetails"]["corespeed"]
                  intf.Asn = val["coreneighborDetails"]["coreAsn"]
                  if intf.IPAddress:
                    intf.neighborIp = neighborv4IPs(intf.IPAddress)
                  if intf.IPv6Address:
                    intf.v6neighborIp = neighborv6IPs(intf.IPv6Address)
                  neighborDeviceID = peer_device.id
                  neighborNodeNum = deviceIDNodeNumDict.get(neighborDeviceID)
                  assert neighborNodeNum, "core neighbor missing: %s" % neighborDeviceID
                  mySC.Interfaces.append(intf)

            corestaticRoutes = networksInputs["pod"]["coreRouters"].resolve()["coreLinkDetails"]["corestaticRoutes"]
            for route in corestaticRoutes:
              prefix = StaticRoutes()
              prefix.Prefix = route["coreprefix"]
              prefix.NextHop = route["corenextHop"]
              prefix.Name = route["corename"]
              mySC.StaticRoutes.append(prefix)

            coreprefixList = networksInputs["pod"]["coreRouters"].resolve()["coreLinkDetails"]["coreprefixLists"]
            for name in coreprefixList:
              pl = PrefixLists()
              pl.Name = name["coreprefixListName"]
              pl.AddressFamily = name["coreAddressFamily"]
              pllist = name.get("coreseqNums", [])
              name = []
              for seq in pllist:
                pls = PLName()
                pls.SeqNum = seq.coreseqNum
                pls.PermitDeny = seq.corepermitDeny
                pls.Prefix = seq.coreprefix
                pls.PrefixLength = seq.corematch
                pls.MaskLength = seq.coremaskLength
                name.append(pls)
              pl.PLName = name
              mySC.PrefixLists.append(pl)

            corepeerGroups = networksInputs["pod"]["coreRouters"].resolve()["coreLinkDetails"]["corepeerGroups"]
            for name in corepeerGroups:
              pg = PeerGroups()
              pg.PeerGroupName = name["corepeerGroupName"]
              pg.Redis = name["corebgpoptions"]["coreredistributeRoutes"]
              pg.RedisStatic = name["corebgpoptions"]["coreredistributeStaticRoutes"]
              pg.RedisConnected = name["corebgpoptions"]["coreredistributeConnectedRoutes"]
              pg.OriginateDefault = name["corebgpoptions"]["coreospfDefaultInformationOriginate"]
              pg.BGPOriginateDefault = name["corebgpoptions"]["corebgpDefaultInformationOriginate"]
              pg.Description = name["coredescription"]
              pg.AddressFamily = name["coreAddressFamily"]
              pg.LocalAS = name["coreasnSettings"]["corelocalAs"]
              pg.NextHopSelf = name["corebgpoptions"]["corenextHop"]
              pg.BFD = name["corebgpoptions"]["corebfd"]
              pg.EbgpMultiHopTtl = name["corebgpoptions"]["coreeBgpMultiHopTtl"]
              pg.AllowAsIn = name["corebgpoptions"]["coreallowAsIn"]
              pg.UpdateSource = name["corebgpoptions"]["coreupdateSource"]
              pg.MaxAcceptedRoutes = name["corebgpoptions"]["coremaximumAcceptedRoutes"]
              pg.Distance = name["corebgpoptions"]["corebgpDistance"]
              pg.EvpnNextHopSelf = name["coredciOptions"]["coreaddressFamilyEvpnNextHopSelf"]
              pg.EvpnDomain = name["coredciOptions"]["coreevpnDomain"]
              pg.EvpnEncap = name["coredciOptions"]["neighborEncapsulation"]
              pg.EvpnDefaultEncap = name["coredciOptions"]["defaultEncapsulation"]
              pg.MplsEncapNextHopInterface = name["coredciOptions"]["encapsulationMplsNextHop"]
              pg.EbgpAuthKey = name["coreEBgpAuthKey"]

              aggregateRoutes = []
              aggregates = name["coreaggregateRoutes"]
              for route in aggregates:
                details = Aggregates()
                details.Route = route["coreaggregateRoute"]
                aggregateRoutes.append(details)
              pg.Aggregates = aggregateRoutes

              routeMapIn = name["corerouteMapIn"]
              rmIn = []
              for seq in routeMapIn:
                rmis = RouteMapIn()
                rmis.SeqNum = seq.corermiseqNum
                rmis.PermitDeny = seq.corermipermitDeny
                rmis.PrefixListIn = seq.corermiprefixList
                rmis.MatchCommunity = seq.corermimatchCommunity
                rmis.SetCommunity = seq.corermisetCommunity
                rmis.LocalPref = seq.corermilocalPref
                rmis.PrependRepeat = seq.corermiasPathPrependRepeat
                rmis.MatchRouteType = seq.corematchRouteType
                rmis.SetIpNextHop = seq.coresetIpNextHop
                rmIn.append(rmis)
              pg.RouteMapIn = rmIn

              routeMapOut = name["corerouteMapOut"]
              rmOut = []
              for seq in routeMapOut:
                rmos = RouteMapOut()
                rmos.SeqNum = seq.corermoseqNum
                rmos.PermitDeny = seq.corermopermitDeny
                rmos.PrefixListOut = seq.corermoprefixList
                rmos.MatchCommunity = seq.corermomatchCommunity
                rmos.SetCommunity = seq.corermosetCommunity
                rmos.PrependRepeat = seq.corermoasPathPrependRepeat
                rmos.MatchRouteType = seq.corematchRouteType
                rmos.SetIpNextHop = seq.coresetIpNextHop
                rmOut.append(rmos)
              pg.RouteMapOut = rmOut

              coreRedistRouteMap = name["coreRedistributionRouteMap"]
              reDistrm = []
              for seq in coreRedistRouteMap:
                rdrms = RedistRouteMap()
                rdrms.SeqNum = seq.coreRedistseqNum
                rdrms.PermitDeny = seq.coreRedistpermitDeny
                rdrms.PrefixList = seq.coreRedistprefixListPolicy
                rdrms.MatchCommunity = seq.coreRedistmatchCommunity
                rdrms.SetTag = seq.coreRedistsetTag
                reDistrm.append(rdrms)
              pg.RedistRouteMap = reDistrm
              mySC.PeerGroups.append(pg)

            neighbors = networksInputs["pod"]["coreRouters"].resolve()["coreLinkDetails"]["coreeBgpNeighbors"]
            for neighbor in neighbors:
              details = EbgpNeighbors()
              details.NeighborIp = neighbor["coreneighborIp"]
              details.PeerASN = neighbor["corepeerAsn"]
              details.Vrf = neighbor["corevrf"]
              details.PeerGroup = neighbor["corepeerGroup"]
              mySC.EbgpNeighbors.append(details)

            coreexternalInterfaces = networksInputs["pod"]["coreRouters"].resolve()["coreLinkDetails"]["interfaces"]
            if coreexternalInterfaces:
              for intf in coreexternalInterfaces:
                intfName = intf.get("coreextinterfaceName")
                details = ExternalInterfaces()
                details.InterfaceName = intfName
                # check if sub interface notation is used
                details.VlanID = ""
                splitlist = []
                issubint = intfName.find(".")
                # separate interface name from sub interface and extract vlan id
                if issubint != -1:
                  splitlist = intfName.split(".")
                  vlan = ''.join(filter(str.isnumeric, splitlist[1]))
                  details.VlanID = vlan
                # strip subinterface part of input from interface name
                  details.InterfaceName = splitlist[0]
                details.Description = intf.get("coreextdescription")
                details.MTU = intf.get("coreextmtu")
                details.Speed = intf.get("coreextspeed")
                details.Mask = intf.get("coreextsubnetMask")
                details.IPAddress = intf.get("coreextipAddress")
                details.IPv6Address = intf.get("coreextIpv6Address")
                details.IPv6Mask = intf.get("coreextIpv6SubnetMask")
                details.Vrf = intf.get("coreextvrf")
                details.Ospf = intf.get("coreextospf")
                mySC.ExternalInterfaces.append(details)

          if not pods:
            return
          networksInputs = pods.resolve()
          if not networksInputs or not networksInputs.get('pod'):
            return
          igp = networksInputs["pod"]["underlayRoutingGroup"]["igp"]

          redisConnected = networksInputs["pod"]["underlayRoutingGroup"]["redistributeConnected"]
          redisStatic = networksInputs["pod"]["underlayRoutingGroup"]["redistributeStatic"]
          maxLSA = networksInputs["pod"]["underlayRoutingGroup"]["maxLsa"]
          authKey = networksInputs["pod"]["underlayRoutingGroup"]["authKey"]

          vlans = []
          vxlan = False
          mpls = False
          evpnEnabled = False
          ldp = False
          sr = False
          srTe = False
          rsvp = False
          iBGPAuthKey =  networksInputs["pod"]["commonBGPConfig"]["iBgpAuthKey"]
          evpnEnabled = networksInputs["pod"]["commonBGPConfig"]["evpnAndVxlan"]
          overlayEncap = networksInputs["pod"]["commonBGPConfig"]["overlayType"]
          if overlayEncap == "VXLAN":
            vxlan = True
          elif overlayEncap == "MPLS":
            mpls = True
          mplsLabelProtocol = networksInputs["pod"]["commonBGPConfig"]["mplsLabelDistributionProtocol"]
          if mplsLabelProtocol == "SR":
              sr = True
          elif mplsLabelProtocol == "SR-TE":
              srTe = True
          elif mplsLabelProtocol == "LDP":
              ldp = True
          elif mplsLabelProtocol == "RSVP":
              rsvp = True

          if mpls:
            if igp == "ISIS":
              srTe = True
            elif igp in ("OSPF", "OSPFv3"):
              rsvp = True

          segmentRoutingFastReroute = False
          tiFla = networksInputs["pod"]["commonBGPConfig"]["srTiFla"]
          if tiFla == "Enabled":
            segmentRoutingFastReroute = True
          vxlanEncap = networksInputs["pod"]["commonBGPConfig"]["vxlanEncapType"]
          vxlanSourceInterface = networksInputs["pod"]["commonBGPConfig"]["vxlanSourceInterface"]

          internalVlan = networksInputs["pod"]["commonMlagConfig"]["internalVlan"]
          mlagPortChannelId = networksInputs["pod"]["commonMlagConfig"]["mlagPortChannelId"]
          virtualRouterMac = networksInputs["pod"]["commonMlagConfig"]["virtualRouterMac"]
          lacpmode = networksInputs["pod"]["commonMlagConfig"]["lacpMode"]
          vxlanMlagSourceInterface = networksInputs["pod"]["commonMlagConfig"]["vxlanMlagSourceInterface"]

          erDomains = networksInputs["pod"]["erDomains"].resolve()

          for key in deviceIDSwitchConfigDict:
            sc = deviceIDSwitchConfigDict[key]
            tvsr = tspb.TagValueSearchRequest(label=lb0Label, workspace_id=ctx.studio.workspaceId, topology_studio_request=True)
            for tag in tsclient.GetTagValueSuggestions(tvsr).tags:
              query = '{}:\"{}\" AND device:{}'.format(tag.label, tag.value, key)
              tagmr = tspb.TagMatchRequestV2(query=query, workspace_id=ctx.studio.workspaceId, topology_studio_request=True)
              tagmresp =  tsclient.GetTagMatchesV2(tagmr)
              if len(tagmresp.matches) > 0:
                sc.Loopback0IP = tag.value

          for sc in deviceIDSwitchConfigDict.values():
            sc.ASN = networksInputs["pod"]["commonBGPConfig"]["globalAS"]

          for key in deviceIDSwitchConfigDict:
            sc = deviceIDSwitchConfigDict[key]
            tvsr = tspb.TagValueSearchRequest(label=asLabel, workspace_id=ctx.studio.workspaceId, topology_studio_request=True)
            for tag in tsclient.GetTagValueSuggestions(tvsr).tags:
              query = '{}:\"{}\" AND device:{}'.format(tag.label, tag.value, key)
              tagmr = tspb.TagMatchRequestV2(query=query, workspace_id=ctx.studio.workspaceId, topology_studio_request=True)
              tagmresp =  tsclient.GetTagMatchesV2(tagmr)
              if len(tagmresp.matches) > 0:
                sc.ASN = tag.value

          for sc in deviceIDSwitchConfigDict.values():
            if myRoleER:
              sc.LogicalVTEP = erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["loopback1"]["loopback1Ipv4Address"]
              sc.LogicalIpv6VTEP = erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["loopback1"]["loopback1IPv6Address"]
              sc.VxlanVirtualRouterEncapMacAddress = erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["loopback1"]["vxlanVirtualRouterEncapMacAddress"]

          rrs = networksInputs["pod"]["rrs"].resolve()
          rrInterface = rrs["rrInterfaceParams"]["rrDownlink"]
          mySC = deviceIDSwitchConfigDict[myDeviceID]
          rrBGPDynamicNeighbors = "Yes"
          asnBGPPeerDict = {}
          mySCList = []
          if myRoleRR:
            config_rr()
          if myRoleER:
            mlagEnabled = config_er()
            if vxlan:
              set_Vtep_tags()
              set_NetworkServicesL2_tags()
              set_NetworkServicesL3_tags()
          if myRoleCore:
            config_core()

          isisNet = get_isis_addr(49, 1, mySC.Loopback0IP)

          if mySC.ASN:
            set_bgp_tags(mySC.ASN)

          %>
          %if evpnEnabled:
          service routing protocols model multi-agent
          %endif
          !
          ## INTERFACES CONFIG
          %for intf in mySC.Interfaces:
          interface ${intf.Port}
          %    if intf.Description:
            description ${intf.Description}
          %    endif
          %    if intf.MTU:
            mtu ${intf.MTU}
          %    endif
          %    if intf.Speed:
            speed ${intf.Speed}
          %    endif
            no switchport
          %    if intf.IPAddress:
            ip address ${intf.IPAddress}/${intf.Mask}
          %    endif
          %    if intf.IPv6Address:
            ipv6 address ${intf.IPv6Address}/${intf.IPv6Mask}
          %    endif
          %    if igp == 'OSPF':
            ip ospf network point-to-point
            ip ospf area 0
          %      if authKey:
            ip ospf authentication message-digest
            ip ospf message-digest-key 1 md5 0 ${authKey}
          %      endif
            exit
          %    elif igp == 'OSPFv3':
            ospfv3 network point-to-point
            ospfv3 ipv4 area 0
            ospfv3 ipv6 area 0
            exit
          %    elif igp == 'ISIS':
            isis enable 1
            isis network point-to-point
          %      if authKey:
            isis authentication mode md5
            isis authentication key 0 ${authKey}
          %      endif
            exit
          %    elif igp == 'BGP':
          !
          %      if mySC.ASN:
          router bgp ${mySC.ASN}
          %        if intf.neighborIp:
            neighbor ${intf.neighborIp} peer group Enterprise-Routing-Underlay-BGP
            neighbor ${intf.neighborIp} remote-as ${intf.Asn}
          %        endif
          %        if intf.v6neighborIp:
            neighbor ${intf.v6neighborIp} peer group Enterprise-Routing-Underlay-BGP
            neighbor ${intf.v6neighborIp} remote-as ${intf.Asn}
          %        endif
          %      endif
            exit
          !
          %    else:
            exit
          %    endif
          %endfor
          !
          %    if igp == 'BGP':
          %      if mySC.ASN:
          router bgp ${mySC.ASN}
            neighbor Enterprise-Routing-Underlay-BGP peer group
          %        if authKey:
            neighbor Enterprise-Routing-Underlay-BGP password 0 ${authKey}
          %        endif
            redistribute connected route-map Loopbacks-to-Underlay
          %        if mySC.Loopback0IP:
            router-id ${mySC.Loopback0IP}
          %        endif
            address-family ipv4
              neighbor Enterprise-Routing-Underlay-BGP activate
            address-family ipv6
              neighbor Enterprise-Routing-Underlay-BGP activate
          %      endif
              exit
          !
          ip prefix-list Loopbacks-to-Underlay
            seq 10 permit ${mySC.Loopback0IP}/32
          %      if mySC.LogicalVTEP:
            seq 20 permit ${mySC.LogicalVTEP}/32
          %      endif
            exit
          %    endif
          !
          %if mySC.Loopback0IP:
          interface Loopback0
            ip address ${mySC.Loopback0IP}/32
          %  if igp == 'OSPF':
            ip ospf area 0
          %  elif igp == 'OSPFv3':
            ospfv3 ipv4 passive-interface
            ospfv3 ipv4 area 0
            ospfv3 ipv6 area 0
          %  elif igp == 'ISIS':
            isis enable 1
            isis passive
          %  endif
            exit
          !
          %endif
          %if mySC.LogicalVTEP or mySC.LogicalIpv6VTEP:
          interface Loopback1
          %  if mySC.LogicalVTEP:
            ip address ${mySC.LogicalVTEP}/32
          %  endif
          %  if mySC.LogicalIpv6VTEP:
            ipv6 address ${mySC.LogicalIpv6VTEP}/128
          %  endif
          %  if igp == 'OSPF':
            ip ospf area 0
          %  elif igp == 'OSPFv3':
            ospfv3 ipv4 passive-interface
            ospfv3 ipv4 area 0
            ospfv3 ipv6 area 0
          %  elif igp == 'ISIS':
            isis enable 1
            isis passive
          %  endif
            exit
          !
          %endif
          ip routing
          !
          ${igpConfig()}
          %if myRoleER:
            %if mlagEnabled:
          ${mlagConfig()}
            %endif
          %  if myRoleER:
          ${vxlanConfig()}
          %  endif
          ${eriBGPConfig()}
          %endif
          !
          %if myRoleER or myRoleCore:
          %if mpls:
              ${mplsConfig()}
          %endif
          ${StaticRouteConfig()}
          ${PrefixListConfig()}
          ${RouteMapConfig()}
          ${EbgpNeighborsConfig()}
          ${externalInterfacesConfig()}
          %endif
          %if myRoleRR:
          ${rriBGPConfig()}
          %endif

          ## MLAG CONFIG
          <%def name="mlagConfig()">
          no spanning-tree vlan-id ${internalVlan}
          %for mlag in mySC.MlagMembers.Interfaces:
          interface ${mlag.Port}
          % if mlag.Description:
            description ${mlag.Description}
          %  endif
          % if mlag.Speed:
            speed ${mlag.Speed}
          %  endif
          % if lacpmode == "On":
            channel-group ${mlagPortChannelId} mode on
          %  else:
            channel-group ${mlagPortChannelId} mode active
          %  endif
            exit
          !
          %endfor
            exit
          interface Port-Channel ${mlagPortChannelId}
            description MLAG peer link
            switchport
            switchport mode trunk
            switchport trunk group MLAG-PEER
            exit
          !
          interface Vlan ${internalVlan}
            no autostate
          %    if mySC.MlagIPAddr:
            ip address ${mySC.MlagIPAddr}/${mySC.MlagNetmask}
          %    endif
          %    if mySC.MlagIPv6Addr:
            ipv6 address ${mySC.MlagIPv6Addr}/${mySC.Mlagv6Netmask} link-local
          %    endif
          %    if igp == 'OSPF' and mySC.EnableIgpOnPeerLink:
            ip ospf network point-to-point
            ip ospf area 0
          %    elif igp == 'OSPFv3' and mySC.EnableIgpOnPeerLink:
            ospfv3 network point-to-point
            ospfv3 ipv4 area 0
            ospfv3 ipv6 area 0
          %    elif igp == 'ISIS' and mySC.EnableIgpOnPeerLink:
            isis enable 1
            isis network point-to-point
          %    elif igp == 'BGP' and mySC.EnableIgpOnPeerLink:
          %      if mySC.ASN:
          !
          router bgp ${mySC.ASN}
            neighbor ${mySC.MlagIPPeerAddr} peer group Enterprise-Routing-Underlay-BGP
            neighbor ${mySC.MlagIPPeerAddr} remote-as ${mySC.ASN}
            neighbor Enterprise-Routing-Underlay-BGP peer group
          %        if authKey:
            neighbor Enterprise-Routing-Underlay-BGP password 0 ${authKey}
          %        endif
            redistribute connected route-map Loopbacks-to-Underlay
          %        if mySC.Loopback0IP:
            router-id ${mySC.Loopback0IP}
          %        endif
            address-family ipv4
              neighbor Enterprise-Routing-Underlay-BGP activate
          %      endif
              exit
          !
          ip prefix-list Loopbacks-to-Underlay
            seq 10 permit ${mySC.Loopback0IP}/32
          %      if mySC.LogicalVTEP:
            seq 20 permit ${mySC.LogicalVTEP}/32
          %      endif
            exit
            !
          %    endif
            exit
          !
          vlan ${internalVlan}
            name MLAG-PEER-VLAN
            trunk group MLAG-PEER
            exit
          !
          mlag configuration
            domain-id MLAG
            local-interface Vlan${internalVlan}
            peer-address ${mySC.MlagIPPeerAddr}
            peer-link Port-Channel${mlagPortChannelId}
          %if mySC.ReloadDelayMlag:
            reload-delay mlag ${mySC.ReloadDelayMlag}
          %endif
          %if mySC.ReloadDelayNonMlag:
            reload-delay non-mlag ${mySC.ReloadDelayNonMlag}
          %endif
          %if mySC.HeartBeatInterval:
            heartbeat-interval ${mySC.HeartBeatInterval}
          %endif
          %if mySC.PeerAddressHeartBeat:
            peer-address heartbeat ${mySC.PeerAddressHeartBeat}
          %endif
          %if mySC.DualPrimaryDetectionDelay:
            dual-primary detection delay ${mySC.DualPrimaryDetectionDelay}
          %endif
          %if mySC.DualPrimaryRecoveryDelay:
            dual-primary recovery delay mlag ${mySC.DualPrimaryRecoveryDelay} non-mlag ${mySC.DualPrimaryRecoveryDelay}
          %endif
            exit
          !
          </%def>
          ## IGP CONFIG
          <%def name="igpConfig()">
          %if igp == 'OSPF':
          router ospf 1
          %  if mySC.Loopback0IP:
            router-id ${mySC.Loopback0IP}
          %  endif
            bfd default
          %  if redisConnected:
            redistribute connected
          %  endif
          %  if redisStatic:
            redistribute static
          %  endif
          %  if maxLSA:
            max-lsa ${maxLSA}
          %  endif
            exit
          %elif igp == 'OSPFv3':
          ipv6 unicast-routing
          !
          router ospfv3
          %  if mySC.Loopback0IP:
            router-id ${mySC.Loopback0IP}
          %  endif
            bfd default
          %  if authKey:
            area 0.0.0.0 authentication ipsec spi 34 md5 0 ${authKey}
          %  endif
          %  if redisConnected or redisStatic:
            address-family ipv4
          %    if redisConnected:
              redistribute connected
          %    endif
          %    if  redisStatic:
              redistribute static
          %    endif
            address-family ipv6
          %    if redisConnected:
              redistribute connected
          %    endif
          %    if  redisStatic:
              redistribute static
          %    endif
          %  endif
          %  if maxLSA:
            address-family ipv4
              lsa limit ${maxLSA}
            address-family ipv6
              lsa limit ${maxLSA}
          %  endif
            exit
          %elif igp == 'ISIS':
          %  if isisNet != "49.0001.000...00":
          ipv6 unicast-routing
          !
          router isis 1
            net ${isisNet}
            is-type level-2
            advertise passive-only
          %    if redisConnected:
            redistribute connected
          %    endif
          %    if redisStatic:
            redistribute static
          %    endif
          %    if authKey:
            authentication mode md5
            authentication key 0 ${authKey}
          %    endif
            address-family ipv4 unicast
              bfd all-interfaces
              exit
            address-family ipv6 unicast
              bfd all-interfaces
              multi-topology
              exit
          %  endif
          %endif
          </%def>

          ## VXLAN CONFIG
          <%def name="vxlanConfig()">
          %if  mySC.LogicalVTEP and vxlanSourceInterface:
          interface vxlan 1
            vxlan source-interface ${vxlanSourceInterface}
            vxlan udp-port 4789
          %  if mlagEnabled and vxlanMlagSourceInterface:
            vxlan mlag source-interface ${vxlanMlagSourceInterface}
          %  endif
          %  if mlagEnabled:
            vxlan virtual-router encapsulation mac-address mlag-system-id
          %  elif mySC.VxlanVirtualRouterEncapMacAddress:
            vxlan virtual-router encapsulation mac-address ${mySC.VxlanVirtualRouterEncapMacAddress}
          %  endif
          %  if vxlanEncap == "ipv4":
            vxlan encap ipv4
          %  elif vxlanEncap == "ipv6":
            vxlan encap ipv6
          %  elif vxlanEncap == "dual-stack":
            vxlan encap ipv4 ipv6
          %  endif
            exit
          !
          %endif
          </%def>
          ## EVPN IBGP CONTROL PLANE
          <%def name="eriBGPConfig()">
          %if evpnEnabled:
          %  if mySC.ASN:
          router bgp ${mySC.ASN}
          %    if mySC.Loopback0IP:
            router-id ${mySC.Loopback0IP}
          %    endif
            maximum-paths 4 ecmp 4
          %    if mySC.Model != "vEOS" and mySC.Model != "vEOS-lab" and mySC.Model != "cEOSLab":
            update wait-for-convergence
            update wait-install
          %    endif
          %    for peerGroup in mySC.BGPPeerGroups:
          %      if peerGroup.EVPN:
          %        if evpnEnabled:
            neighbor ${peerGroup.Name} peer group
            neighbor ${peerGroup.Name} remote-as ${peerGroup.NeighborASN }
            neighbor ${peerGroup.Name} update-source Loopback0
            neighbor ${peerGroup.Name} send-community extended
            neighbor ${peerGroup.Name} maximum-routes  0 warning-limit 12000
          %          if iBGPAuthKey:
            neighbor ${peerGroup.Name} password 0 ${iBGPAuthKey}
          %          endif
          %        endif
          %      endif
          %    endfor
          %    for peerGroup in mySC.BGPPeerGroups:
          %      for intf in peerGroup.NeighborIntfs:
          %        if peerGroup.EVPN:
            neighbor ${intf.IPAddress} peer group ${peerGroup.Name}
            neighbor ${intf.IPAddress} description Route-Reflector
          %        endif
          %      endfor
          %    endfor
          %    if evpnEnabled:
            address-family evpn
          %      if mpls and (sr or srTe or ldp or rsvp):
              neighbor default encapsulation mpls next-hop-self source-interface Loopback0
            %endif
          %      for peerGroup in mySC.BGPPeerGroups:
          %        if peerGroup.EVPN:
              neighbor ${peerGroup.Name} activate
          %        endif
          %      endfor
              exit
            address-family ipv4
          %      for peerGroup in mySC.BGPPeerGroups:
          %        if peerGroup.EVPN:
              no neighbor ${peerGroup.Name} activate
          %        endif
          %      endfor
              exit
            address-family ipv6
          %      for peerGroup in mySC.BGPPeerGroups:
          %        if peerGroup.EVPN:
              no neighbor ${peerGroup.Name} activate
          %        endif
          %      endfor
              exit
          %    endif
            exit
          %  endif
          %endif
          </%def>
          ## IBGP ROUTE REFLECTORS
          <%def name="rriBGPConfig()">
          !
          %if evpnEnabled:
          %  if rrBGPDynamicNeighbors:
          peer-filter AS-Range
            10 match as-range 1-65535 result accept
          !
          router bgp ${mySC.ASN}
          %    if mySC.Loopback0IP:
            router-id ${mySC.Loopback0IP}
            bgp cluster-id ${mySC.Loopback0IP}
          %    endif
          %    if mySC.Model != "vEOS" and mySC.Model != "vEOS-lab" and mySC.Model != "cEOSLab":
            update wait-for-convergence
            update wait-install
          %    endif
            bgp log-neighbor-changes
          %    if evpnEnabled:
            neighbor iBGP peer group
            neighbor iBGP send-community extended
            neighbor iBGP maximum-routes 0 warning-limit 12000
            neighbor iBGP update-source Loopback0
            neighbor iBGP route-reflector-client
            bgp route-reflector preserve-attributes always
          %      if iBGPAuthKey:
            neighbor iBGP password 0 ${iBGPAuthKey}
          %      endif
          %    endif
          %    if evpnEnabled:
            bgp listen range 0.0.0.0/0 peer-group iBGP peer-filter AS-Range
          %    endif
          %    if evpnEnabled:
            address-family evpn
          %      if mpls and myRoleCore:
              neighbor iBGP encapsulation mpls next-hop-self source-interface Loopback0
          %      endif
              neighbor iBGP activate
              next-hop resolution disabled
              exit
            address-family ipv4
              no neighbor iBGP activate
              exit
            address-family ipv6
              no neighbor iBGP activate
              exit
          %    endif
            exit
          %  else:
          router bgp ${mySC.ASN}
            router-id ${mySC.Loopback0IP}
          %    if  evpnEnabled:
            neighbor iBGP peer group
            neighbor iBGP route-reflector-client
            neighbor iBGP update-source Loopback0
            neighbor iBGP send-community extended
            neighbor iBGP maximum-routes 0 warning-limit 12000
          %      if iBGPAuthKey:
            neighbor iBGP password 0 ${iBGPAuthKey}
          %      endif
          %    endif
          %    for peerGroup in mySC.BGPPeerGroups:
          %      if peerGroup.EVPN:
          %        if evpnEnabled:
            neighbor iBGP remote-as ${peerGroup.NeighborASN}
          %          for intf in peerGroup.NeighborIntfs:
            neighbor ${intf.IPAddress} peer group iBGP
          %          endfor
          %        endif
          %      endif
          %    endfor
          %    if evpnEnabled:
            address-family evpn
              neighbor iBGP activate
              next-hop resolution disabled
              exit
            address-family ipv4
              no neighbor iBGP activate
              exit
          %    endif
            exit
          %  endif
          %endif
          !
          </%def>
          ## STATIC ROUTES
          <%def name="StaticRouteConfig()">
          % for prefix in mySC.StaticRoutes:
          %   if prefix.VRF:
          vrf instance ${prefix.VRF}
          ip routing vrf ${prefix.VRF}
          %     if prefix.Name:
          ip route vrf ${prefix.VRF} ${prefix.Prefix} ${prefix.NextHop} name ${prefix.Name}
          %     else:
          ip route vrf ${prefix.VRF} ${prefix.Prefix} ${prefix.NextHop}
          %     endif
          %   else:
          %     if prefix.Name:
          ip route ${prefix.Prefix} ${prefix.NextHop} name ${prefix.Name}
          %     else:
          ip route ${prefix.Prefix} ${prefix.NextHop}
          %     endif
          %   endif
          %endfor
          !
          </%def>
          ## PREFIX LISTS
          <%def name="PrefixListConfig()">
          %for name in mySC.PrefixLists:
          %  if name.AddressFamily == "ipv4":
          ip prefix-list ${name.Name}
          %  elif name.AddressFamily == "ipv6":
          ipv6 prefix-list ${name.Name}
          %  endif
          %  for seq in name.PLName:
          %    if seq.PrefixLength != "exact-route":
            seq ${seq.SeqNum} ${seq.PermitDeny} ${seq.Prefix} ${seq.PrefixLength} ${seq.MaskLength}
          %    else:
            seq ${seq.SeqNum} ${seq.PermitDeny} ${seq.Prefix}
          %    endif
          %  endfor
            exit
          !
          %endfor
          !
          </%def>
          ## ROUTE MAPS
          <%def name="RouteMapConfig()">
          %for peergroup in mySC.PeerGroups:
          %  for routemapi in peergroup.RouteMapIn:
          route-map ${peergroup.PeerGroupName}-in ${routemapi.PermitDeny} ${routemapi.SeqNum}
          %    if routemapi.PrefixListIn:
            match ip address prefix-list ${routemapi.PrefixListIn}
          %    endif
          %    if routemapi.MatchCommunity:
            match community ${routemapi.MatchCommunity}
          %    endif
          %    if routemapi.MatchRouteType:
            match route-type ${routemapi.MatchRouteType}
          %    endif
          %    if routemapi.SetCommunity:
            set community ${routemapi.SetCommunity}
          %    endif
          %    if routemapi.SetIpNextHop:
            set ip next-hop ${routemapi.SetIpNextHop}
          %    endif
          %    if routemapi.LocalPref:
            set local-preference ${routemapi.LocalPref}
          %    endif
          %    if routemapi.PrependRepeat:
            set as-path prepend auto repeat ${routemapi.PrependRepeat}
          %    endif
            exit
          !
          %  endfor
          %  for routemapo in peergroup.RouteMapOut:
          route-map ${peergroup.PeerGroupName}-out ${routemapo.PermitDeny} ${routemapo.SeqNum}
          %   if routemapo.PrefixListOut:
            match ip address prefix-list ${routemapo.PrefixListOut}
          %   endif
          %   if routemapo.MatchCommunity:
            match community ${routemapo.MatchCommunity}
          %   endif
          %    if routemapo.MatchRouteType:
            match route-type ${routemapo.MatchRouteType}
          %    endif
          %   if routemapo.SetCommunity:
            set community ${routemapo.SetCommunity}
          %   endif
          %    if routemapo.SetIpNextHop:
            set ip next-hop ${routemapo.SetIpNextHop}
          %    endif
          %   if routemapo.PrependRepeat:
            set as-path prepend auto repeat ${routemapo.PrependRepeat}
          %   endif
            exit
          !
          %  endfor
          %  for redistroutemap in peergroup.RedistRouteMap:
          route-map ReDist-${peergroup.PeerGroupName}-out ${redistroutemap.PermitDeny} ${redistroutemap.SeqNum}
          %   if redistroutemap.PrefixList:
            match ip address prefix-list ${redistroutemap.PrefixList}
          %   endif
          %   if redistroutemap.MatchCommunity:
            match community ${redistroutemap.MatchCommunity}
          %   endif
          %   if redistroutemap.SetTag:
            set tag ${redistroutemap.SetTag}
          %   endif
            exit
          !
          %  endfor
          %endfor
          !
          </%def>
          ## EBGP PEER GROUPS AND REDISTRIBUTION
          <%def name="EbgpNeighborsConfig()">
          %if mySC.PeerGroups or mySC.EbgpNeighbors:
          %for neighbor in mySC.EbgpNeighbors:
          router bgp ${mySC.ASN}
          %  if mySC.Loopback0IP:
            router-id ${mySC.Loopback0IP}
          %  endif
          %  if not neighbor.PeerGroup:
          %    if neighbor.Vrf:
            vrf ${neighbor.Vrf}
          %      if neighbor.PeerGroup and neighbor.NeighborIp:
              neighbor ${neighbor.NeighborIp} peer group ${neighbor.PeerGroup}
          %      endif
          %      if neighbor.PeerASN and neighbor.NeighborIp:
              neighbor ${neighbor.NeighborIp} remote-as ${neighbor.PeerASN}
          %      endif
              exit
          %    else:
          %      if neighbor.PeerGroup and neighbor.NeighborIp:
            neighbor ${neighbor.NeighborIp} peer group ${neighbor.PeerGroup}
          %      endif
          %      if neighbor.PeerASN and neighbor.NeighborIp:
            neighbor ${neighbor.NeighborIp} remote-as ${neighbor.PeerASN}
          %      endif
          %    endif
            exit
          %  endif
          <% processId = 2 %>
          %  for peer_group in mySC.PeerGroups:
          %    if neighbor.PeerGroup == peer_group.PeerGroupName:
          <% redistribute = False %>
          <% originateDefault = False %>
          %    if peer_group.Distance:
            distance bgp ${peer_group.Distance}
          %    endif
          %    if peer_group.Description:
            neighbor ${peer_group.PeerGroupName} description ${peer_group.Description}
          %    endif
          %    if myRoleRR:
            neighbor ${peer_group.PeerGroupName} route-reflector-client
          %    endif
            neighbor ${peer_group.PeerGroupName} peer group
          %    if peer_group.PeerASN:
            neighbor ${peer_group.PeerGroupName} remote-as ${peer_group.PeerASN}
          %    endif
          %    if peer_group.EbgpAuthKey:
            neighbor ${peer_group.PeerGroupName} password 0 ${peer_group.EbgpAuthKey}
          %    endif
          %    if peer_group.LocalAS:
            neighbor ${peer_group.PeerGroupName} local-as ${peer_group.LocalAS} no-prepend replace-as
          %    endif
          %    if peer_group.NextHopSelf == "Self":
            neighbor ${peer_group.PeerGroupName} next-hop-self
          %    elif peer_group.NextHopSelf == "Unchanged":
            neighbor ${peer_group.PeerGroupName} next-hop-unchanged
          %    endif
          %    if peer_group.UpdateSource == "Loopback0":
            neighbor ${peer_group.PeerGroupName} update-source ${peer_group.UpdateSource}
          %    endif
          %    if peer_group.BFD:
            neighbor ${peer_group.PeerGroupName} bfd
          %    endif
          %    if peer_group.EbgpMultiHopTtl:
            neighbor ${peer_group.PeerGroupName} ebgp-multihop ${peer_group.EbgpMultiHopTtl}
          %    endif
          %    if peer_group.AllowAsIn:
            neighbor ${peer_group.PeerGroupName} allowas-in ${peer_group.AllowAsIn}
          %    endif
            neighbor ${peer_group.PeerGroupName} send-community extended
          %    if peer_group.MaxAcceptedRoutes:
            neighbor ${peer_group.PeerGroupName} maximum-accepted-routes ${peer_group.MaxAcceptedRoutes}
          %    endif
          %    if peer_group.RouteMapIn:
            neighbor ${peer_group.PeerGroupName} route-map ${peer_group.PeerGroupName}-in in
          %    endif
          %    if peer_group.RouteMapOut:
            neighbor ${peer_group.PeerGroupName} route-map ${peer_group.PeerGroupName}-out out
          %    endif
          %    if peer_group.BGPOriginateDefault == "Enabled":
            neighbor ${peer_group.PeerGroupName} default-originate
          %    endif
          %    if peer_group.Redis:
          <% redistribute = True %>
          %    endif
          %    if neighbor.Vrf:
            vrf ${neighbor.Vrf}
          %      if neighbor.PeerGroup and neighbor.NeighborIp:
              neighbor ${neighbor.NeighborIp} peer group ${neighbor.PeerGroup}
          %      endif
          %      if neighbor.PeerASN and neighbor.NeighborIp:
              neighbor ${neighbor.NeighborIp} remote-as ${neighbor.PeerASN}
          %      endif
              exit
          %    else:
          %      if neighbor.PeerGroup and neighbor.NeighborIp:
            neighbor ${neighbor.NeighborIp} peer group ${neighbor.PeerGroup}
          %      endif
          %      if neighbor.PeerASN and neighbor.NeighborIp:
            neighbor ${neighbor.NeighborIp} remote-as ${neighbor.PeerASN}
          %      endif
          %    endif
          %    if peer_group.AddressFamily == "ipv4":
            address-family ipv4
          %    elif peer_group.AddressFamily == "ipv6":
            address-family ipv6
          %    elif peer_group.AddressFamily == "evpn":
            address-family ipv4
              no neighbor ${peer_group.PeerGroupName} activate
              exit
            address-family ipv6
              no neighbor ${peer_group.PeerGroupName} activate
              exit
            address-family evpn
          %      if peer_group.EvpnEncap == "MPLS" and peer_group.MplsEncapNextHopInterface:
              neighbor ${peer_group.PeerGroupName} encapsulation mpls next-hop-self source-interface ${peer_group.MplsEncapNextHopInterface}
          %      elif  peer_group.EvpnEncap == "MPLS":
              neighbor ${peer_group.PeerGroupName} encapsulation mpls
          %      elif peer_group.EvpnEncap == "VXLAN":
              neighbor ${peer_group.PeerGroupName} encapsulation vxlan
          %      endif
          %      if peer_group.EvpnDefaultEncap == "MPLS" and peer_group.MplsEncapNextHopInterface:
              neighbor default encapsulation mpls next-hop-self source-interface ${peer_group.MplsEncapNextHopInterface}
          %      elif  peer_group.EvpnDefaultEncap == "MPLS":
              neighbor default encapsulation mpls
          %      elif peer_group.EvpnDefaultEncap == "VXLAN":
              neighbor default encapsulation vxlan
          %      endif
          %      if peer_group.EvpnNextHopSelf == 'Inter-Domain':
              neighbor ${peer_group.PeerGroupName} next-hop-self received-evpn-routes route-type ip-prefix inter-domain
          %      elif peer_group.EvpnNextHopSelf == 'Enabled':
              neighbor ${peer_group.PeerGroupName} next-hop-self received-evpn-routes route-type ip-prefix
          %      endif
          %      if peer_group.EvpnDomain == "remote":
              neighbor ${peer_group.PeerGroupName} domain remote
          %      endif
          %    endif
              neighbor ${peer_group.PeerGroupName} activate
          %    if peer_group.Aggregates:
          %      for route in peer_group.Aggregates:
              aggregate-address ${route.Route} summary-only
          %      endfor
          %    endif
          %    if peer_group.OriginateDefault != "Disabled":
          <% originateDefault = True %>
          %    endif
          %    if not (redistribute or peer_group.RedisStatic or peer_group.RedisConnected):
              exit
          %    endif
          %    if redistribute or peer_group.RedisStatic or peer_group.RedisConnected:
          %      if peer_group.RedistVRF:
            vrf ${peer_group.RedistVRF}
          %        if igp == 'OSPF' and redistribute:
              redistribute ospf match internal
              redistribute ospf match external
              redistribute ospf match nssa-external
          %        elif igp == 'OSPFv3' and redistribute:
              redistribute ospfv3 match internal
              redistribute ospfv3 match external
              redistribute ospfv3 match nssa-external
          %        endif
          %        if peer_group.RedisStatic:
              redistribute static
          %        endif
          %        if peer_group.RedisConnected:
              redistribute connected
          %        endif
              exit
            exit
          %      elif not peer_group.RedistVRF:
          %        if igp == 'OSPF' and redistribute:
              redistribute ospf match internal
              redistribute ospf match external
              redistribute ospf match nssa-external
          %        elif igp == 'OSPFv3' and redistribute:
              redistribute ospfv3 match internal
              redistribute ospfv3 match external
              redistribute ospfv3 match nssa-external
          %        elif igp == 'ISIS' and redistribute:
              redistribute isis level-2
          %        endif
          %        if peer_group.RedisStatic and peer_group.RedistRouteMap:
              redistribute static route-map ReDist-${peer_group.PeerGroupName}-out
          %        elif peer_group.RedisStatic:
              redistribute static
          %        endif
          %        if peer_group.RedisConnected and peer_group.RedistRouteMap:
              redistribute connected route-map ReDist-${peer_group.PeerGroupName}-out
          %        elif peer_group.RedisConnected:
              redistribute connected
          %        endif
              exit
            exit
          %      endif
          %      if igp == 'OSPF' and redistribute:
          %        if peer_group.RedistVRF:
          router ospf ${processId} vrf ${peer_group.RedistVRF}
            router-id ${mySC.Loopback0IP}
          %          if peer_group.RedistRouteMap:
            redistribute bgp route-map ReDist-${peer_group.PeerGroupName}-out
          %          else:
            redistribute bgp
          %          endif
          %        else:
          router ospf 1
            router-id ${mySC.Loopback0IP}
          %          if peer_group.RedistRouteMap:
            redistribute bgp route-map ReDist-${peer_group.PeerGroupName}-out
          %          else:
            redistribute bgp
          %          endif
          %        endif
            exit
          %      elif igp == 'OSPFv3' and redistribute:
          %        if peer_group.RedistVRF:
          router ospfv3 vrf ${peer_group.RedistVRF}
            router-id ${mySC.Loopback0IP}
          %          if peer_group.RedistRouteMap:
            address-family ipv4
              redistribute bgp route-map ReDist-${peer_group.PeerGroupName}-out
              exit
            address-family ipv6
              redistribute bgp route-map ReDist-${peer_group.PeerGroupName}-out
              exit
          %          else:
            address-family ipv4
              redistribute bgp
              exit
            address-family ipv6
              redistribute bgp
              exit
          %          endif
            exit
          %        else:
          router ospfv3
            router-id ${mySC.Loopback0IP}
          %          if peer_group.RedistRouteMap:
            address-family ipv4
              redistribute bgp route-map ReDist-${peer_group.PeerGroupName}-out
              exit
            address-family ipv6
              redistribute bgp route-map ReDist-${peer_group.PeerGroupName}-out
              exit
          %          else:
            address-family ipv4
              redistribute bgp
              exit
            address-family ipv6
              redistribute bgp
              exit
          %          endif
          %        endif
            exit
          %      elif igp == 'ISIS' and redistribute:
          router isis 1
          %        if peer_group.RedistRouteMap:
            redistribute bgp route-map ReDist-${peer_group.PeerGroupName}-out
          %        else:
            redistribute bgp
          %        endif
          %      endif
          %    else:
            exit
          %    endif
          %    if originateDefault and igp == 'OSPF':
          %      if peer_group.RedistVRF:
          router ospf ${processId} vrf ${peer_group.RedistVRF}
          <% processId = processId + 1 %>
            router-id ${mySC.Loopback0IP}
          %        if peer_group.OriginateDefault == "Enabled":
            default-information originate
          %        elif peer_group.OriginateDefault == "Always-Send":
            default-information originate always
          %        endif
          %      else:
          router ospf 1
          %        if peer_group.OriginateDefault == "Enabled":
            default-information originate
          %        elif peer_group.OriginateDefault == "Always-Send":
            default-information originate always
          %        endif
          %      endif
            exit
          %    elif originateDefault and igp == 'OSPFv3':
          %      if peer_group.RedistVRF:
          router ospfv3 vrf ${peer_group.RedistVRF}
            router-id ${mySC.Loopback0IP}
          %        if peer_group.OriginateDefault == "Enabled":
            address-family ipv4
              default-information originate
            address-family ipv6
              default-information originate
          %        elif peer_group.OriginateDefault == "Always-Send":
            address-family ipv4
              default-information originate always
            address-family ipv6
              default-information originate always
          %        endif
          %      else:
          router ospfv3
          %        if peer_group.OriginateDefault == "Enabled":
            address-family ipv4
              default-information originate
            address-family ipv6
              default-information originate
          %        elif peer_group.OriginateDefault == "Always-Send":
            address-family ipv4
              default-information originate always
            address-family ipv6
              default-information originate always
          %        endif
          %      endif
            exit
          %    endif
          %    endif
          <% processId = processId + 1 %>
          %  endfor
          %endfor
          %endif
          </%def>
          ## EXTERNAL INTERFACES
          <%def name="externalInterfacesConfig()">
          %for interface in mySC.ExternalInterfaces:
          %    if interface.Vrf:
          vrf instance ${interface.Vrf}
          %      if interface.IPAddress:
          ip routing vrf ${interface.Vrf}
          %      endif
          %      if interface.IPv6Address:
          ipv6 unicast-routing vrf ${interface.Vrf}
          %      endif
          %    else:
          %      if interface.IPv6Address:
          ipv6 unicast-routing
          %      endif
          %    endif
          interface ${interface.InterfaceName}
            no switchport
          %    if interface.MTU:
            mtu ${interface.MTU}
          %    endif
          %    if interface.Speed:
            speed ${interface.Speed}
          %    endif
          %    if interface.VlanID:
          interface ${interface.InterfaceName}.${interface.VlanID}
            encapsulation dot1q vlan ${interface.VlanID}
          %    endif
          %    if interface.Description:
            description ${interface.Description}
          %    endif
          %    if interface.Vrf:
            vrf ${interface.Vrf}
          %     endif

          %      if interface.IPAddress:
            ip address ${interface.IPAddress}/${interface.Mask}
          %      endif
          %      if interface.IPv6Address:
            ipv6 address ${interface.IPv6Address}/${interface.IPv6Mask}
          %      endif
          %    if interface.Ospf == "OSPF":
            ip ospf network point-to-point
            ip ospf area 0
          %      if authKey:
            ip ospf authentication message-digest
            ip ospf message-digest-key 1 md5 7 ${authKey}
          %      endif
          %    elif interface.Ospf == "OSPFv3":
            ospfv3 network point-to-point
            ospfv3 ipv4 area 0
            ospfv3 ipv6 area 0
          %    endif
            exit
          !
          % endfor
          </%def>
          ## MPLS CONFIG
          <%def name="mplsConfig()">
          interface Loopback0
          %    if mpls and (sr or srTe):
            node-segment ipv4 index ${mySC.SegmentIndex}
          %    endif
            exit
          mpls ip
          !
          %if ldp:
          mpls ldp
            router-id interface Loopback0
            no shutdown
            exit
          !
          %elif rsvp:
          mpls rsvp
            no shutdown
            exit
          !
          %endif
          %if igp == 'ISIS':
          %  if isisNet != "49.0001.000...00":
          router isis 1
          %    if myRoleER or myRoleCore:
          %      if mpls and (sr or srTe):
          %        if segmentRoutingFastReroute:
              address-family ipv4 unicast
                  fast-reroute ti-lfa mode link-protection level-2
          %        endif
          %        if segmentRoutingFastReroute:
              address-family ipv6 unicast
                  fast-reroute ti-lfa mode link-protection level-2
          %        endif
          %        if mpls:
              segment-routing mpls
                  no shutdown
                  exit
          %        endif
          %        if mpls and srTe:
              router traffic-engineering
                  segment-routing
                      rib system-colored-tunnel-rib
                      exit
                  exit
          %        endif
          %      endif
          %    endif
          %  endif
          %endif
          </%def>
      input_schema:
        fields:
          values:
            mlagLinkSubnet:
              id: mlagLinkSubnet
              name: mlagLinkSubnet
              label: IPv4 Subnet of the MLAG Peer Link
              description: The IPv4 Subnet of every MLAG peer link
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: 169.254.0.0/31
                is_secret: false
                static_options: null
                format: cidrv4
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            internalVlan:
              id: internalVlan
              name: internalVlan
              label: VLAN for the MLAG peer link
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: '4094'
                range: 0..4095
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            mlagPortChannelId:
              id: mlagPortChannelId
              name: mlagPortChannelId
              label: MLAG Port-Channel ID
              description: Number of MLAG Port Channel
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: '2000'
                range: 1..999999
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            virtualRouterMac:
              id: virtualRouterMac
              name: virtualRouterMac
              label: Virtual Router MAC
              description: The virtual MAC address for other hosts or switches to connect to for redundancy
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: 00:1c:73:00:00:99
                is_secret: false
                static_options: null
                format: mac
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            lacpMode:
              id: lacpMode
              name: lacpMode
              label: LACP Mode
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: Active
                is_secret: false
                static_options:
                  values:
                    - Active
                    - 'On'
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            ipv6MlagLinkSubnet:
              id: ipv6MlagLinkSubnet
              name: ipv6MlagLinkSubnet
              label: IPv6 Subnet of the MLAG Peer Link
              description: The IPv6 Subnet of every MLAG peer link
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: fe80::/127
                is_secret: false
                static_options: null
                format: cidrv6
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            vxlanMlagSourceInterface:
              id: vxlanMlagSourceInterface
              name: vxlanMlagSourceInterface
              label: VXLAN  MLAG Source Interface
              description: Loopback Interface
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - Loopback0
                    - Loopback1
                    - Loopback2
                    - Loopback3
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            commonMlagConfig:
              id: commonMlagConfig
              name: commonMlagConfig
              label: Global MLAG Configuration
              description: Configure the network's MLAG format.
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - mlagLinkSubnet
                    - internalVlan
                    - mlagPortChannelId
                    - virtualRouterMac
                    - lacpMode
                    - ipv6MlagLinkSubnet
                    - vxlanMlagSourceInterface
            rrBGPDynamicNeighbors:
              id: rrBGPDynamicNeighbors
              name: rrBGPDynamicNeighbors
              label: RR BGP Dynamic Neighbors
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_BOOLEAN
              boolean_props:
                default_value: true
            globalAS:
              id: globalAS
              name: globalAS
              label: ASN
              description: Required for iBGP EVPN
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            evpnAndVxlan:
              id: evpnAndVxlan
              name: evpnAndVxlan
              label: IBGP EVPN Control Plane
              description: Requires Route Reflectors to also be configured. eBGP EVPN can be configured under Edge Router Domain Peer Groups.
              required: false
              type: INPUT_FIELD_TYPE_BOOLEAN
              boolean_props:
                default_value: false
            vxlanEncapType:
              id: vxlanEncapType
              name: vxlanEncapType
              label: VXLAN Encap Type
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - ipv4
                    - ipv6
                    - dual-stack
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            overlayType:
              id: overlayType
              name: overlayType
              label: Overlay Encap
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - VXLAN
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: true
            mplsLabelDistributionProtocol:
              id: mplsLabelDistributionProtocol
              name: mplsLabelDistributionProtocol
              label: MPLS Label Distribution Protocol
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - LDP
                    - SR
                    - SR-TE
                    - RSVP
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            srTiFla:
              id: srTiFla
              name: srTiFla
              label: SR Fast Reroute
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - Enabled
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            vxlanSourceInterface:
              id: vxlanSourceInterface
              name: vxlanSourceInterface
              label: VXLAN Source Interface
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - Loopback0
                    - Loopback1
                    - Loopback2
                    - None
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            iBgpAuthKey:
              id: iBgpAuthKey
              name: iBgpAuthKey
              label: iBGP Auth Key
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: true
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            commonBGPConfig:
              id: commonBGPConfig
              name: commonBGPConfig
              label: Global Overlay Settings
              description: Assign a overlay settings if an overlay is used.
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - rrBGPDynamicNeighbors
                    - globalAS
                    - evpnAndVxlan
                    - vxlanEncapType
                    - overlayType
                    - mplsLabelDistributionProtocol
                    - srTiFla
                    - vxlanSourceInterface
                    - iBgpAuthKey
            rripAddress:
              id: rripAddress
              name: rripAddress
              label: Local IPv4 Address
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: ipv4
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            rrDescripption:
              id: rrDescripption
              name: description
              label: Description
              description: null
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            rrSpeed:
              id: rrSpeed
              name: rrspeed
              label: Speed
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - auto
                    - 50g-1
                    - 50g-2
                    - 25g
                    - 200g-2
                    - 200g-4
                    - 40g
                    - 400g-4
                    - 400g-8
                    - 1g
                    - 10g
                    - 100g
                    - 100g-1
                    - 100g-2
                    - 100g-4
                    - 100full
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            rrSubnetMask:
              id: rrSubnetMask
              name: rrsubnetMask
              label: Local Subnet Mask
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: '31'
                range: 1..31
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            rrMtu:
              id: rrMtu
              name: rrmtu
              label: MTU
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            rrIpv6Address:
              id: rrIpv6Address
              name: rrIpv6Address
              label: Local IPv6 Address
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: ipv6
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            rrIpv6SubnetMask:
              id: rrIpv6SubnetMask
              name: rrIpv6SubnetMask
              label: IPv6 Subnet Mask
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: '127'
                range: 1..128
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            rrNeighborParams:
              id: rrNeighborParams
              name: rrNeighborParams
              label: Neighbor Parameters
              description: null
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - rripAddress
                    - rrDescripption
                    - rrSpeed
                    - rrSubnetMask
                    - rrMtu
                    - rrIpv6Address
                    - rrIpv6SubnetMask
            rrDownlink:
              id: rrDownlink
              name: rrDownlink
              label: Underlay Connections
              description: Configure neighbor connections for this route reflector.
              required: false
              type: INPUT_FIELD_TYPE_RESOLVER
              resolver_props:
                base_field_id: rrNeighborParams
                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_INTERFACE_TAG
                input_tag_label: interface
                tag_filter_query: null
            rrInterfaceParams:
              id: rrInterfaceParams
              name: rrInterfaceParams
              label: Fabric link Interface Parameters
              description: null
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - rrDownlink
            rrs:
              id: rrs
              name: rrs
              label: Route Reflector Devices
              description: Select and configure route reflector devices, which are used for overlay networks when EVPN-VXLAN is enabled.
              required: false
              type: INPUT_FIELD_TYPE_RESOLVER
              resolver_props:
                base_field_id: rrInterfaceParams
                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_DEVICE_TAG
                input_tag_label: device
                tag_filter_query: 'Role:RR '
            eripAddress:
              id: eripAddress
              name: eripAddress
              label: Local IPv4 Address
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: ipv4
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            erDescription:
              id: erDescription
              name: description
              label: Description
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            erSpeed:
              id: erSpeed
              name: erspeed
              label: Speed
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - auto
                    - 50g-1
                    - 50g-2
                    - 25g
                    - 200g-2
                    - 200g-4
                    - 40g
                    - 400g-4
                    - 400g-8
                    - 1g
                    - 10g
                    - 100g
                    - 100g-1
                    - 100g-2
                    - 100g-4
                    - 100full
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            erSubnetMask:
              id: erSubnetMask
              name: ersubnetMask
              label: Subnet Mask
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: '31'
                range: 1..31
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            erIpv6Address:
              id: erIpv6Address
              name: erIpv6Address
              label: Local IPv6 Address
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: ipv6
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            erIpv6SubnetMask:
              id: erIpv6SubnetMask
              name: erIpv6SubnetMask
              label: IPv6 Subnet Mask
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: '127'
                range: 1..128
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            erAsn:
              id: erAsn
              name: erAsn
              label: ASN
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            erNeighborDetails:
              id: erNeighborDetails
              name: erneighborDetails
              label: Neighbor Details
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - eripAddress
                    - erDescription
                    - erSpeed
                    - erSubnetMask
                    - erIpv6Address
                    - erIpv6SubnetMask
                    - erAsn
            erNeighbors:
              id: erNeighbors
              name: erneighbors
              label: Underlay Neighbors
              description: Define IGP interface connections to any neighboring edge or core devices.
              required: false
              type: INPUT_FIELD_TYPE_RESOLVER
              resolver_props:
                base_field_id: erNeighborDetails
                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_INTERFACE_TAG
                input_tag_label: interface
                tag_filter_query: null
            staticprefix:
              id: staticprefix
              name: prefix
              label: IPv4 Prefix
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: cidrv4
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            staticnextHop:
              id: staticnextHop
              name: nextHop
              label: IPv4 Next Hop
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: ipv4
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            staticname:
              id: staticname
              name: name
              label: Name
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            srvrf:
              id: srvrf
              name: srvrf
              label: VRF
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options:
                  values:
                    - '{"fieldId":"pgVrf"}'
                extra_values_allowed: true
            staticRouteGroup:
              id: staticRouteGroup
              name: staticRouteGroup
              label: Static Route Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - staticprefix
                    - staticnextHop
                    - staticname
                    - srvrf
            staticRoutes:
              id: staticRoutes
              name: staticRoutes
              label: Static Routes
              description: Define prefixes and next hops for static routes.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: staticRouteGroup
                key: staticname
            extInterfaceName:
              id: extInterfaceName
              name: extinterfaceName
              label: Interface Name
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            extVrf:
              id: extVrf
              name: extvrf
              label: VRF
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            extipAddress:
              id: extipAddress
              name: extipAddress
              label: IPv4 Address
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: ipv4
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            extSubnetMask:
              id: extSubnetMask
              name: extsubnetMask
              label: Subnet Mask
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: '31'
                range: 1..31
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            extvlandescription:
              id: extvlandescription
              name: extdescription
              label: Description
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            extSpeed:
              id: extSpeed
              name: extspeed
              label: Speed
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            extMtu:
              id: extMtu
              name: extmtu
              label: MTU
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            extIpv6Address:
              id: extIpv6Address
              name: extIpv6Address
              label: IPv6 Address
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: ipv6
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            extIpv6SubnetMask:
              id: extIpv6SubnetMask
              name: extIpv6SubnetMask
              label: Subnet Mask
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: '64'
                range: 1..128
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            extospf:
              id: extospf
              name: extospf
              label: OSPF
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: Disabled
                is_secret: false
                static_options:
                  values:
                    - Disabled
                    - OSPF
                    - OSPFv3
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            externalInterfaceGroup:
              id: externalInterfaceGroup
              name: externalInterfaceGroup
              label: Interfaces Group
              description: Config routed port or routed port + subinterface
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - extInterfaceName
                    - extVrf
                    - extipAddress
                    - extSubnetMask
                    - extvlandescription
                    - extSpeed
                    - extMtu
                    - extIpv6Address
                    - extIpv6SubnetMask
                    - extospf
            interfacesCollection:
              id: interfacesCollection
              name: interfaces
              label: External Interfaces
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: externalInterfaceGroup
                key: extInterfaceName
            mlagSpeed:
              id: mlagSpeed
              name: mlagSpeed
              label: Speed
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - auto
                    - 100full
                    - 100g
                    - 100half
                    - 10full
                    - 10g
                    - 10half
                    - 1g
                    - 200g
                    - 25g
                    - 400g
                    - 40g
                    - 50g
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            mlagDescription:
              id: mlagDescription
              name: mlagDescription
              label: Description
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            mlagInterfacesInterfacesGroup:
              id: mlagInterfacesInterfacesGroup
              name: mlagInterfacesGroup
              label: MLAG Interfaces Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - mlagSpeed
                    - mlagDescription
            mlagInterfaces:
              id: mlagInterfaces
              name: mlagInterfaces
              label: MLAG Interfaces
              description: Define the MLAG interfaces for this device.
              required: false
              type: INPUT_FIELD_TYPE_RESOLVER
              resolver_props:
                base_field_id: mlagInterfacesInterfacesGroup
                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_INTERFACE_TAG
                input_tag_label: interface
                tag_filter_query: null
            mlagIpAddress:
              id: mlagIpAddress
              name: mlagIpAddress
              label: IPv4 Address
              description: Optional. This field overrides the global mlag subnet setting.
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: ipv4
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            mlagPeerAddress:
              id: mlagPeerAddress
              name: mlagPeerAddress
              label: Peer IPv4 Address
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: ipv4
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            mlagSubnetMask:
              id: mlagSubnetMask
              name: mlagSubnetMask
              label: Subnet Mask
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: '31'
                range: 1..31
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            mlagOverrideGlobalSubnet:
              id: mlagOverrideGlobalSubnet
              name: mlagOverrideGlobalSubnet
              label: Override Global MLAG Configuration
              description: If the device has an MLAG role, you can override parameters of the network's global MLAG format.
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - mlagIpAddress
                    - mlagPeerAddress
                    - mlagSubnetMask
            mlagRole:
              id: mlagRole
              name: mlagRole
              label: MLAG Role
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: None
                is_secret: false
                static_options:
                  values:
                    - None
                    - Primary
                    - Secondary
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            reloadDelayMlag:
              id: reloadDelayMlag
              name: reloadDelayMlag
              label: Reload Delay Mlag
              description: infinity - link is not enabled after reboot. 0 to 86400 - disabled link interval (seconds). Default varies by switch platform.
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            reloadDelayNonMlag:
              id: reloadDelayNonMlag
              name: reloadDelayNonMlag
              label: Reload Delay Non-Mlag
              description: infinity - link is not enabled after reboot. 0 to 86400 - disabled link interval (seconds). Default varies by switch platform.
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            heartBeatInterval:
              id: heartBeatInterval
              name: heartBeatInterval
              label: Heart Beat Interval
              description: milliseconds
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: 1000..30000
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            peerAddressHeartBeat:
              id: peerAddressHeartBeat
              name: peerAddressHeartBeat
              label: Heart Beat Peer Address
              description: seconds
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: ipv4
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            dualPrimaryDetectionDelay:
              id: dualPrimaryDetectionDelay
              name: dualPrimaryDetectionDelay
              label: Dual Primary Detection Delay
              description: seconds
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: 0..86400
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            dualPrimaryRecoveryDelay:
              id: dualPrimaryRecoveryDelay
              name: dualPrimaryRecoveryDelay
              label: Dual Primary Recovery Delay
              description: MLAG and Non MLAG in seconds
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: 0..86400
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            enableIgpOnPeerLink:
              id: enableIgpOnPeerLink
              name: enableIgpOnPeerLink
              label: Enable IGP on Peer Link
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_BOOLEAN
              boolean_props:
                default_value: true
            mlagInterfacesGroup:
              id: mlagInterfacesGroup
              name: mlagGroup
              label: MLAG Configuration
              description: Set the MLAG Role of the device, where None excludes the device from MLAG configuration, and define MLAG parameters.
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - mlagInterfaces
                    - mlagOverrideGlobalSubnet
                    - mlagRole
                    - reloadDelayMlag
                    - reloadDelayNonMlag
                    - heartBeatInterval
                    - peerAddressHeartBeat
                    - dualPrimaryDetectionDelay
                    - dualPrimaryRecoveryDelay
                    - enableIgpOnPeerLink
            loopback1Ipv4Address:
              id: loopback1Ipv4Address
              name: loopback1Ipv4Address
              label: Loopback1 IPv4 Address
              description: Configure a IPv4 VXLAN VTEP address.
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: ipv4
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            loopback1IPv6Address:
              id: loopback1IPv6Address
              name: loopback1IPv6Address
              label: Loopback1 IPv6 Address
              description: Configure a IPv6 VXLAN VTEP address.
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: ipv6
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            vxlanVirtualRouterEncapMacAddress:
              id: vxlanVirtualRouterEncapMacAddress
              name: vxlanVirtualRouterEncapMacAddress
              label: VXLAN Virtual Router Encap Mac Address
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: mac
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            loopback1Group:
              id: loopback1Group
              name: loopback1
              label: Loopback 1
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - loopback1Ipv4Address
                    - loopback1IPv6Address
                    - vxlanVirtualRouterEncapMacAddress
            ebgpCoreNeighborsNeighborIp:
              id: ebgpCoreNeighborsNeighborIp
              name: neighborIp
              label: Neighbor IP
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: ip
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            pgVrf:
              id: pgVrf
              name: vrf
              label: VRF
              description: Select a VRF that has been predefined under external interfaces.
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options:
                  values:
                    - '{"fieldId":"extVrf"}'
                extra_values_allowed: true
            eBgpNeighborsPeerAsn:
              id: eBgpNeighborsPeerAsn
              name: peerAsn
              label: Peer ASN
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            erPeerGroup:
              id: erPeerGroup
              name: peerGroup
              label: Peer Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options:
                  values:
                    - '{"fieldId":"peerGroupName"}'
                extra_values_allowed: false
            erPeerGroupDescription:
              id: erPeerGroupDescription
              name: description
              label: Description
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            eBgpNeighborsGroup:
              id: eBgpNeighborsGroup
              name: eBgcoreneighborsGroup
              label: eBGP Neighbors Group
              description: Configure the connections between this BGP peer group and any eBGP neighbors.
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - ebgpCoreNeighborsNeighborIp
                    - pgVrf
                    - eBgpNeighborsPeerAsn
                    - erPeerGroup
                    - erPeerGroupDescription
            eBgpNeighbors:
              id: eBgpNeighbors
              name: eBgNeighbors
              label: eBGP Neighbors
              description: Define eBGP neighbors connected to the device's external interfaces. To deploy the Peer Group only  leave the neighbor address blank.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: eBgpNeighborsGroup
                key: ebgpCoreNeighborsNeighborIp
            nodeSegmentIndex:
              id: nodeSegmentIndex
              name: nodeSegmentIndex
              label: Node Segment Index
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: 0..65535
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            erNodeSegmentIndex:
              id: erNodeSegmentIndex
              name: nodeSegmentIndexGroup
              label: Node Segment Index
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - nodeSegmentIndex
            mlagYesNo:
              id: mlagYesNo
              name: mlag
              label: MLAG
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_BOOLEAN
              boolean_props:
                default_value: false
            erLinkDetails:
              id: erLinkDetails
              name: erLinkDetails
              label: Link Details
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - erNeighbors
                    - staticRoutes
                    - interfacesCollection
                    - mlagInterfacesGroup
                    - loopback1Group
                    - eBgpNeighbors
                    - erNodeSegmentIndex
                    - mlagYesNo
            erDetails:
              id: erDetails
              name: erDetails
              label: Edge Router Domain Members
              description: Add or select a device to configure its connections.
              required: false
              type: INPUT_FIELD_TYPE_RESOLVER
              resolver_props:
                base_field_id: erLinkDetails
                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_DEVICE_TAG
                input_tag_label: device
                tag_filter_query: null
            peerGroupName:
              id: peerGroupName
              name: peerGroupName
              label: Peer Group Name
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            peerGroupdescription:
              id: peerGroupdescription
              name: description
              label: Description
              description: Provide a description for this peer group.
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            peerGroupRouteMapIndescription:
              id: peerGroupRouteMapIndescription
              name: description
              label: Description
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            peerGroupRouteMapInpermitDenyg:
              id: peerGroupRouteMapInpermitDenyg
              name: permitDeny
              label: Permit Deny
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: permit
                is_secret: false
                static_options:
                  values:
                    - permit
                    - deny
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            peerGroupRouteMapInprefixList:
              id: peerGroupRouteMapInprefixList
              name: prefixList
              label: Prefix List Policy
              description: Add a policy using its sequence number in the prefix list
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options:
                  values:
                    - '{"fieldId":"prefixListsPrefixListName"}'
                extra_values_allowed: false
            peerGroupRouteMapInMatchCommunity:
              id: peerGroupRouteMapInMatchCommunity
              name: matchCommunity
              label: Match Community
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            peerGroupRouteMapInSetCommunity:
              id: peerGroupRouteMapInSetCommunity
              name: setCommunity
              label: Set Community
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            peerGroupRouteMapInLocalPref:
              id: peerGroupRouteMapInLocalPref
              name: localPref
              label: Local Pref
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            peerGroupRouteMapInAsPathPrependRepeat:
              id: peerGroupRouteMapInAsPathPrependRepeat
              name: asPathPrependRepeat
              label: ASN Path Prepend Repeat
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            peerGroupRouteMapInseqNum:
              id: peerGroupRouteMapInseqNum
              name: seqNum
              label: Sequence Number
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            peerGroupRouteMapIncorematchRouteType:
              id: peerGroupRouteMapIncorematchRouteType
              name: matchRouteType
              label: Match Route Type
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - external
                    - internal
                    - local
                    - vpn
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            peerGroupRouteMapInSetIpNextHop:
              id: peerGroupRouteMapInSetIpNextHop
              name: setIpNextHop
              label: Set IPv4 Next Hop
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - peer-address
                    - unchanged
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            peerGroupRouteMapInrouteMapInGroup:
              id: peerGroupRouteMapInrouteMapInGroup
              name: routeMapInGroup
              label: Route Map In Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - peerGroupRouteMapIndescription
                    - peerGroupRouteMapInpermitDenyg
                    - peerGroupRouteMapInprefixList
                    - peerGroupRouteMapInMatchCommunity
                    - peerGroupRouteMapInSetCommunity
                    - peerGroupRouteMapInLocalPref
                    - peerGroupRouteMapInAsPathPrependRepeat
                    - peerGroupRouteMapInseqNum
                    - peerGroupRouteMapIncorematchRouteType
                    - peerGroupRouteMapInSetIpNextHop
            peerGroupRouteMapIn:
              id: peerGroupRouteMapIn
              name: routeMapIn
              label: Route Map In
              description: Assign policies defined in a prefix list and set the match rules.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: peerGroupRouteMapInrouteMapInGroup
                key: peerGroupRouteMapInseqNum
            peerGroupRouteMapOutPermitDeny:
              id: peerGroupRouteMapOutPermitDeny
              name: permitDeny
              label: Permit Deny
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: permit
                is_secret: false
                static_options:
                  values:
                    - permit
                    - deny
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            peerGroupRouteMapOutPrefixList:
              id: peerGroupRouteMapOutPrefixList
              name: prefixList
              label: Prefix List Policy
              description: Add a policy using its sequence number in the prefix list
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options:
                  values:
                    - '{"fieldId":"prefixListsPrefixListName"}'
                extra_values_allowed: false
            peerGroupRouteMapOutMatchCommunity:
              id: peerGroupRouteMapOutMatchCommunity
              name: matchCommunity
              label: Match Community
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            peerGroupRouteMapOutSetCommunity:
              id: peerGroupRouteMapOutSetCommunity
              name: setCommunity
              label: Set Community
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            peerGroupRouteMapOutasPathPrependRepeat:
              id: peerGroupRouteMapOutasPathPrependRepeat
              name: asPathPrependRepeat
              label: ASN Path Prepend Repeat
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            peerGroupRouteMapOutDescription:
              id: peerGroupRouteMapOutDescription
              name: description
              label: Description
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            peerGroupRouteMapOutSeqNum:
              id: peerGroupRouteMapOutSeqNum
              name: seqNum
              label: Sequence Number
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            peerGroupRouteMapOutMatchRouteType:
              id: peerGroupRouteMapOutMatchRouteType
              name: matchRouteType
              label: Match Route Type
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - external
                    - internal
                    - local
                    - vpn
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            peerGroupRouteMapOutSetIpNextHop:
              id: peerGroupRouteMapOutSetIpNextHop
              name: setIpNextHop
              label: Set IP Next Hop
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - peer-address
                    - unchanged
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            peerGroupRouteMapOutGroup:
              id: peerGroupRouteMapOutGroup
              name: routeMapOutGroup
              label: Route Map Out Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - peerGroupRouteMapOutPermitDeny
                    - peerGroupRouteMapOutPrefixList
                    - peerGroupRouteMapOutMatchCommunity
                    - peerGroupRouteMapOutSetCommunity
                    - peerGroupRouteMapOutasPathPrependRepeat
                    - peerGroupRouteMapOutDescription
                    - peerGroupRouteMapOutSeqNum
                    - peerGroupRouteMapOutMatchRouteType
                    - peerGroupRouteMapOutSetIpNextHop
            peerGroupRouteMapOut:
              id: peerGroupRouteMapOut
              name: routeMapOut
              label: Route Map Out
              description: Assign policies defined in a prefix list and set the match rules.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: peerGroupRouteMapOutGroup
                key: peerGroupRouteMapOutSeqNum
            pgAggregateRoute:
              id: pgAggregateRoute
              name: aggregateRoute
              label: Aggregate Route
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            pgAggregateRoutesValue:
              id: pgAggregateRoutesValue
              name: value
              label: Aggregate Routes Group
              description: Group of members for Aggregate Routes
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - pgAggregateRoute
            pgAggregateRoutes:
              id: pgAggregateRoutes
              name: aggregateRoutes
              label: Aggregate Routes
              description: Enter an IP address in CIDR notation to create a summary of related routes.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: pgAggregateRoutesValue
                key: ''
            pgLocalAs:
              id: pgLocalAs
              name: localAs
              label: Local AS
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            asnSettings:
              id: asnSettings
              name: asnSettings
              label: ASN Settings
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - pgLocalAs
            peerGroupMaximumAcceptedRoutes:
              id: peerGroupMaximumAcceptedRoutes
              name: maximumAcceptedRoutes
              label: Maximum Accepted Routes
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            erOspfDefaultInformationOriginate:
              id: erOspfDefaultInformationOriginate
              name: ospfDefaultInformationOriginate
              label: OSPF Default Information Originate
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: Disabled
                is_secret: false
                static_options:
                  values:
                    - Disabled
                    - Enabled
                    - Always-Send
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            bfd:
              id: bfd
              name: bfd
              label: BFD
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_BOOLEAN
              boolean_props:
                default_value: false
            redistributeRoutes:
              id: redistributeRoutes
              name: redistributeRoutes
              label: Redistribute IGP Routes
              description: Enable mutual redistribution BGP and OSPF or OSPFv3.
              required: false
              type: INPUT_FIELD_TYPE_BOOLEAN
              boolean_props:
                default_value: false
            redistributionVrf:
              id: redistributionVrf
              name: redistributionVrf
              label: Redistribution VRF
              description: Assign which VRF to redistribute routes and Default Information Originate. Select a VRF that has been predefined under external interfaces.
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options:
                  values:
                    - '{"fieldId":"extVrf"}'
                extra_values_allowed: false
            bgpDefaultInformationOriginate:
              id: bgpDefaultInformationOriginate
              name: bgpDefaultInformationOriginate
              label: BGP Default Originate
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: Disabled
                is_secret: false
                static_options:
                  values:
                    - Disabled
                    - Enabled
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            redistributeStaticRoutes:
              id: redistributeStaticRoutes
              name: redistributeStaticRoutes
              label: Redistribute Static Routes
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_BOOLEAN
              boolean_props:
                default_value: false
            redistributeConnectedRoutes:
              id: redistributeConnectedRoutes
              name: redistributeConnectedRoutes
              label: Redistribute Connected Routes
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_BOOLEAN
              boolean_props:
                default_value: false
            updateSource:
              id: updateSource
              name: updateSource
              label: Update Source
              description: Optional. Forces BGP session to be sourced from Loopback0.
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - Loopback0
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            bgpDistance:
              id: bgpDistance
              name: bgpDistance
              label: BGP Distance
              description: external internal local
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: 200 200 200
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            bgpNextHopType:
              id: bgpNextHopType
              name: nextHop
              label: Next Hop
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - Self
                    - Unchanged
                    - Unconfigured
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            allowAsIn:
              id: allowAsIn
              name: allowAsIn
              label: Allow AS In
              description: 1-10
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: 1..10
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            eBgpMultiHopTtl:
              id: eBgpMultiHopTtl
              name: eBgpMultiHopTtl
              label: eBGP Multihop TTL
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: 0..254
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            bgpOptions:
              id: bgpOptions
              name: bgpOptions
              label: BGP Configuration
              description: Configure the device's BGP details.
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - peerGroupMaximumAcceptedRoutes
                    - erOspfDefaultInformationOriginate
                    - bfd
                    - redistributeRoutes
                    - redistributionVrf
                    - bgpDefaultInformationOriginate
                    - redistributeStaticRoutes
                    - redistributeConnectedRoutes
                    - updateSource
                    - bgpDistance
                    - bgpNextHopType
                    - allowAsIn
                    - eBgpMultiHopTtl
            redistDescription:
              id: redistDescription
              name: redistdescription
              label: Description
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            redistPermitDeny:
              id: redistPermitDeny
              name: redistpermitDeny
              label: Permit Deny
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: permit
                is_secret: false
                static_options:
                  values:
                    - permit
                    - deny
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            redistPrefixList:
              id: redistPrefixList
              name: redistprefixList
              label: Prefix List Policy
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options:
                  values:
                    - '{"fieldId":"prefixListsPrefixListName"}'
                extra_values_allowed: false
            redistMatchCommunity:
              id: redistMatchCommunity
              name: redistmatchCommunity
              label: Match Community
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            redistSetTag:
              id: redistSetTag
              name: redistsetTag
              label: Set Tag
              description: Tag number or "auto"
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            redistSeqnum:
              id: redistSeqnum
              name: redistseqnum
              label: Sequence Number
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            redistRmGroup:
              id: redistRmGroup
              name: redistRmGroup
              label: redist RM Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - redistDescription
                    - redistPermitDeny
                    - redistPrefixList
                    - redistMatchCommunity
                    - redistSetTag
                    - redistSeqnum
            redistributionRouteMap:
              id: redistributionRouteMap
              name: RedistributionRouteMap
              label: Redistribution Route Map
              description: Assign policies defined in a prefix list and set the match rules for redistribution into OSPF.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: redistRmGroup
                key: redistSeqnum
            pgErAddressFamily:
              id: pgErAddressFamily
              name: erAddressFamily
              label: Address Family
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: ipv4
                is_secret: false
                static_options:
                  values:
                    - ipv4
                    - ipv6
                    - evpn
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            addressFamilyEvpnNextHopSelf:
              id: addressFamilyEvpnNextHopSelf
              name: addressFamilyEvpnNextHopSelf
              label: Address Family EVPN Next Hop Self
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - Enabled
                    - Inter-Domain
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            neighborEncapsulation:
              id: neighborEncapsulation
              name: neighborEncapsulation
              label: Neighbor  Encapsulation
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - VXLAN
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            encapsulationMplsNextHop:
              id: encapsulationMplsNextHop
              name: encapsulationMplsNextHop
              label: Encapsulation Next Hop Interface
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - Loopback0
                    - Loopback1
                    - Loopback2
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            evpnDomain:
              id: evpnDomain
              name: evpnDomain
              label: EVPN Domain
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - remote
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            defaultEncapsulation:
              id: defaultEncapsulation
              name: defaultEncapsulation
              label: Default Encapsulation
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - VXLAN
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: true
            dciOptions:
              id: dciOptions
              name: dciOptions
              label: EVPN Options
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - addressFamilyEvpnNextHopSelf
                    - neighborEncapsulation
                    - encapsulationMplsNextHop
                    - evpnDomain
                    - defaultEncapsulation
            erEbgpAuth:
              id: erEbgpAuth
              name: eBgpAuthKey
              label: eBGP Auth Key
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: true
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            peerGroup:
              id: peerGroup
              name: peerGroup
              label: Peer Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - peerGroupName
                    - peerGroupdescription
                    - peerGroupRouteMapIn
                    - peerGroupRouteMapOut
                    - pgAggregateRoutes
                    - asnSettings
                    - bgpOptions
                    - redistributionRouteMap
                    - pgErAddressFamily
                    - dciOptions
                    - erEbgpAuth
            ebgpCoreNeighborsPeerGroups:
              id: ebgpCoreNeighborsPeerGroups
              name: peerGroups
              label: eBGP Peer Groups
              description: Define eBGP peers neighbors and routing  policies.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: peerGroup
                key: peerGroupName
            prefixListsPrefixListName:
              id: prefixListsPrefixListName
              name: prefixListName
              label: List Name
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            erAddressFamily:
              id: erAddressFamily
              name: erAddressFamily
              label: Address Family
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: ipv4
                is_secret: false
                static_options:
                  values:
                    - ipv4
                    - ipv6
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            prefixListsSeqPrefix:
              id: prefixListsSeqPrefix
              name: prefix
              label: Prefix
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: cidr
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            prefixListsSeqPrefixLength:
              id: prefixListsSeqPrefixLength
              name: prefixLength
              label: Match Rule
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: exact-route
                is_secret: false
                static_options:
                  values:
                    - eq
                    - ge
                    - le
                    - exact-route
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            prefixListsSeqPermitDeny:
              id: prefixListsSeqPermitDeny
              name: permitDeny
              label: Permit Deny
              description: This is an optional field used for reference. The actual permit or deny rule is applied when assigning policy to the routes in or out of a BGP peer group.
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: permit
                is_secret: false
                static_options:
                  values:
                    - permit
                    - deny
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            prefixListsSeqNumber:
              id: prefixListsSeqNumber
              name: seqNum
              label: Sequence Number
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            prefixListsMaskLength:
              id: prefixListsMaskLength
              name: maskLength
              label: Mask Length
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: 1..128
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            prefixListsSeqNumsValue:
              id: prefixListsSeqNumsValue
              name: value
              label: Sequence Number Group
              description: Group of members for Sequence Number
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - prefixListsSeqPrefix
                    - prefixListsSeqPrefixLength
                    - prefixListsSeqPermitDeny
                    - prefixListsSeqNumber
                    - prefixListsMaskLength
            prefixListsSeqNums:
              id: prefixListsSeqNums
              name: seqNums
              label: Prefix List
              description: Add policies to this prefix list, which can be applied to BGP routes in and out.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: prefixListsSeqNumsValue
                key: prefixListsSeqNumber
            prefixListsvalue:
              id: prefixListsvalue
              name: value
              label: Prefix Lists Group
              description: Group of members for Prefix Lists
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - prefixListsPrefixListName
                    - erAddressFamily
                    - prefixListsSeqNums
            prefixLists:
              id: prefixLists
              name: prefixLists
              label: Prefix Lists
              description: Set policies for prefixes, which are assigned to BGP peer groups.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: prefixListsvalue
                key: prefixListsPrefixListName
            rrHostname:
              id: rrHostname
              name: rrHostname
              label: Hostname
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            rrHostnameGroup:
              id: rrHostnameGroup
              name: rrHostnameGroup
              label: RR Hostname Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - rrHostname
            rrHostnames:
              id: rrHostnames
              name: rrHostnames
              label: Route Reflector Hostnames
              description: Configure one or more RRs.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: rrHostnameGroup
                key: rrHostname
            erDomain:
              id: erDomain
              name: erDomain
              label: Edge Router Domain
              description: Assign a single device or a pair of edge devices to each domain. Assigning a pair of devices enables the creation of an MLAG pair.
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - erDetails
                    - ebgpCoreNeighborsPeerGroups
                    - prefixLists
                    - rrHostnames
            erDomains:
              id: erDomains
              name: erDomains
              label: Edge Router Domains
              description: Assign a single device or a pair of devices to each domain.
              required: false
              type: INPUT_FIELD_TYPE_RESOLVER
              resolver_props:
                base_field_id: erDomain
                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_DEVICE_TAG
                input_tag_label: Edge-Router-Domain
                tag_filter_query: null
            ipAddress:
              id: ipAddress
              name: coreipAddress
              label: Local IPv4 Address
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: ipv4
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreNeighborSpeed:
              id: coreNeighborSpeed
              name: corespeed
              label: Speed
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - auto
                    - 50g-1
                    - 50g-2
                    - 25g
                    - 200g-2
                    - 200g-4
                    - 40g
                    - 400g-4
                    - 400g-8
                    - 1g
                    - 10g
                    - 100g
                    - 100g-1
                    - 100g-2
                    - 100g-4
                    - 100full
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreSubnetMask:
              id: coreSubnetMask
              name: coresubnetMask
              label: Subnet Mask
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: '31'
                range: 1..31
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            coreIpv6Address:
              id: coreIpv6Address
              name: coreIpv6Address
              label: Local IPv6 IP Address
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: ipv6
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreIpv6SubnetMask:
              id: coreIpv6SubnetMask
              name: coreIpv6SubnetMask
              label: Subnet Mask
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: '127'
                range: 1..128
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            coreNeighborDescription:
              id: coreNeighborDescription
              name: description
              label: Description
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            dcoreAsn:
              id: dcoreAsn
              name: coreAsn
              label: ASN
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreNeighborDetails:
              id: coreNeighborDetails
              name: coreneighborDetails
              label: Neighbor Details
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - ipAddress
                    - coreNeighborSpeed
                    - coreSubnetMask
                    - coreIpv6Address
                    - coreIpv6SubnetMask
                    - coreNeighborDescription
                    - dcoreAsn
            coreNeighbor:
              id: coreNeighbor
              name: coreneighbor
              label: Underlay Neighbors
              description: Define IGP interface connections to any neighboring edge or core devices.
              required: false
              type: INPUT_FIELD_TYPE_RESOLVER
              resolver_props:
                base_field_id: coreNeighborDetails
                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_INTERFACE_TAG
                input_tag_label: interface
                tag_filter_query: null
            coreprefixListName:
              id: coreprefixListName
              name: coreprefixListName
              label: List Name
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            corePrefixListAddressFamily0:
              id: corePrefixListAddressFamily0
              name: coreAddressFamily
              label: Address Family
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: ipv4
                is_secret: false
                static_options:
                  values:
                    - ipv4
                    - ipv6
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreplpermitDeny:
              id: coreplpermitDeny
              name: corepermitDeny
              label: Permit Deny
              description: This is an optional field used for reference. The actual permit or deny rule is applied when assigning policy to the routes in or out of a BGP peer group.
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: permit
                is_secret: false
                static_options:
                  values:
                    - permit
                    - deny
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreplprefix:
              id: coreplprefix
              name: coreprefix
              label: Prefix
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: cidr
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreplmatch:
              id: coreplmatch
              name: corematch
              label: Match Rule
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: exact-route
                is_secret: false
                static_options:
                  values:
                    - eq
                    - le
                    - ge
                    - exact-route
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            plcoreseqNum:
              id: plcoreseqNum
              name: coreseqNum
              label: Sequence Number
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            coreMaskLength:
              id: coreMaskLength
              name: coremaskLength
              label: Mask Length
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            coreSeqNumGroup:
              id: coreSeqNumGroup
              name: coreseqNumGroup
              label: Sequence Number Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - coreplpermitDeny
                    - coreplprefix
                    - coreplmatch
                    - plcoreseqNum
                    - coreMaskLength
            coreSeqNums:
              id: coreSeqNums
              name: coreseqNums
              label: Sequence Numbers
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: coreSeqNumGroup
                key: plcoreseqNum
            corePrefixListGroup:
              id: corePrefixListGroup
              name: coreprefixListGroup
              label: Prefix List Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - coreprefixListName
                    - corePrefixListAddressFamily0
                    - coreSeqNums
            corePrefixLists:
              id: corePrefixLists
              name: coreprefixLists
              label: Prefix List
              description: Add policies to this prefix list, which can be applied to BGP routes in and out.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: corePrefixListGroup
                key: coreprefixListName
            corePeerGroupName:
              id: corePeerGroupName
              name: corepeerGroupName
              label: Peer Group Name
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            corepgDescription:
              id: corepgDescription
              name: coredescription
              label: Description
              description: Enter a description for the BGP peer group.
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreLocalAs:
              id: coreLocalAs
              name: corelocalAs
              label: Local ASN
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            coreAsnSettings:
              id: coreAsnSettings
              name: coreasnSettings
              label: ASN Settings
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - coreLocalAs
            coreAggregateRoute:
              id: coreAggregateRoute
              name: coreaggregateRoute
              label: Aggregate Route
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreAggregateRoutesGroup:
              id: coreAggregateRoutesGroup
              name: coreaggregateRoutesGroup
              label: Aggregate Routes Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - coreAggregateRoute
            coreAggregateRoutes:
              id: coreAggregateRoutes
              name: coreaggregateRoutes
              label: Aggregate Routes
              description: Enter an IP address in CIDR notation to create a summary of related routes.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: coreAggregateRoutesGroup
                key: ''
            corermiDescription:
              id: corermiDescription
              name: corermidescription
              label: Description
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            corermiPermitDeny:
              id: corermiPermitDeny
              name: corermipermitDeny
              label: Permit Deny
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: permit
                is_secret: false
                static_options:
                  values:
                    - permit
                    - deny
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            corermiPrefixList:
              id: corermiPrefixList
              name: corermiprefixList
              label: Prefix List Policy
              description: Add a policy using its sequence number in the prefix list
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options:
                  values:
                    - '{"fieldId":"coreprefixListName"}'
                extra_values_allowed: false
            corermiMatchCommunity:
              id: corermiMatchCommunity
              name: corermimatchCommunity
              label: Match Community
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            corermiSetCommunity:
              id: corermiSetCommunity
              name: corermisetCommunity
              label: Set Community
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            corermiLocalPref:
              id: corermiLocalPref
              name: corermilocalPref
              label: Local Pref
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            corermiasPathPrependRepeat:
              id: corermiasPathPrependRepeat
              name: corermiasPathPrependRepeat
              label: ASN Path Prepend Repeat
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            corermiSeqNum:
              id: corermiSeqNum
              name: corermiseqNum
              label: Sequence Number
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            corermicoreMatchRouteType:
              id: corermicoreMatchRouteType
              name: corematchRouteType
              label: MatchRouteType
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - external
                    - internal
                    - local
                    - vpn
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            corermiCoreSetIpNextHop:
              id: corermiCoreSetIpNextHop
              name: coresetIpNextHop
              label: Set IPv4 Next Hop
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - peer-address
                    - unchanged
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreRouteMapInGroup:
              id: coreRouteMapInGroup
              name: corerouteMapInGroup
              label: Route Map In Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - corermiDescription
                    - corermiPermitDeny
                    - corermiPrefixList
                    - corermiMatchCommunity
                    - corermiSetCommunity
                    - corermiLocalPref
                    - corermiasPathPrependRepeat
                    - corermiSeqNum
                    - corermicoreMatchRouteType
                    - corermiCoreSetIpNextHop
            coreRouteMapIn:
              id: coreRouteMapIn
              name: corerouteMapIn
              label: Route Map In
              description: Assign policies defined in a prefix list and set the match rules.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: coreRouteMapInGroup
                key: corermiSeqNum
            corermoDescription:
              id: corermoDescription
              name: corermodescription
              label: Description
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            corermoPermitDeny:
              id: corermoPermitDeny
              name: corermopermitDeny
              label: Permit Deny
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: permit
                is_secret: false
                static_options:
                  values:
                    - permit
                    - deny
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            corermoPrefixList:
              id: corermoPrefixList
              name: corermoprefixList
              label: Prefix List Policy
              description: Add a policy using its sequence number in the prefix list
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options:
                  values:
                    - '{"fieldId":"coreprefixListName"}'
                extra_values_allowed: false
            corermoMatchCommunity:
              id: corermoMatchCommunity
              name: corermomatchCommunity
              label: Match Community
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            corermoSetCommunity:
              id: corermoSetCommunity
              name: corermosetCommunity
              label: Set Community
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            corermoasPathPrependRepeat:
              id: corermoasPathPrependRepeat
              name: corermoasPathPrependRepeat
              label: ASN Path Prepend Repeat
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            corermoSeqNum:
              id: corermoSeqNum
              name: corermoseqNum
              label: Sequence Number
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            corematchRouteType:
              id: corematchRouteType
              name: corematchRouteType
              label: Match Route Type
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - external
                    - internal
                    - local
                    - vpn
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coresetIpNextHop:
              id: coresetIpNextHop
              name: coresetIpNextHop
              label: Set IPv4 Next Hop
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - peer-address
                    - unchanged
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreRouteMapOutGroup:
              id: coreRouteMapOutGroup
              name: corerouteMapOutGroup
              label: Route Map Out Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - corermoDescription
                    - corermoPermitDeny
                    - corermoPrefixList
                    - corermoMatchCommunity
                    - corermoSetCommunity
                    - corermoasPathPrependRepeat
                    - corermoSeqNum
                    - corematchRouteType
                    - coresetIpNextHop
            coreRouteMapOut:
              id: coreRouteMapOut
              name: corerouteMapOut
              label: Route Map Out
              description: Assign policies defined in a prefix list and set the match rules.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: coreRouteMapOutGroup
                key: corermoSeqNum
            coreMaximumAcceptedRoutes:
              id: coreMaximumAcceptedRoutes
              name: coremaximumAcceptedRoutes
              label: Maximum Accepted Routes
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreOspfDefaultInformationOriginate:
              id: coreOspfDefaultInformationOriginate
              name: coreospfDefaultInformationOriginate
              label: OSPF Default Information Originate
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: Disabled
                is_secret: false
                static_options:
                  values:
                    - Disabled
                    - Enabled
                    - Always-Send
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreRedistributeRoutes:
              id: coreRedistributeRoutes
              name: coreredistributeRoutes
              label: Redistribute IGP Routes
              description: Enable mutual redistribution BGP and OSPF or OSPFv3
              required: false
              type: INPUT_FIELD_TYPE_BOOLEAN
              boolean_props:
                default_value: false
            coreBfd:
              id: coreBfd
              name: corebfd
              label: BFD
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_BOOLEAN
              boolean_props:
                default_value: false
            coreBgpDefaultInformationOriginate:
              id: coreBgpDefaultInformationOriginate
              name: corebgpDefaultInformationOriginate
              label: BGP Default Originate
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: Disabled
                is_secret: false
                static_options:
                  values:
                    - Disabled
                    - Enabled
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreRedistributeStaticRoutes:
              id: coreRedistributeStaticRoutes
              name: coreredistributeStaticRoutes
              label: Redistribute Static Routes
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_BOOLEAN
              boolean_props:
                default_value: false
            coreRedistributeConnectedRoutes:
              id: coreRedistributeConnectedRoutes
              name: coreredistributeConnectedRoutes
              label: Redistribute Connected Routes
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_BOOLEAN
              boolean_props:
                default_value: false
            coreBgpDistance:
              id: coreBgpDistance
              name: corebgpDistance
              label: BGP Distance
              description: external internal local
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: 200 200 200
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreupdateSource:
              id: coreupdateSource
              name: coreupdateSource
              label: Update Source
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - Loopback0
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreBgpNextHopType:
              id: coreBgpNextHopType
              name: corenextHop
              label: Next Hop
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - Self
                    - Unchanged
                    - Unconfigured
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreallowAsIn:
              id: coreallowAsIn
              name: coreallowAsIn
              label: Allow AS In
              description: 1-10
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: 1..10
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            coreeBgpMultiHopTtl:
              id: coreeBgpMultiHopTtl
              name: coreeBgpMultiHopTtl
              label: eBGP Multihop TTL
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: 0..254
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            coreBgpOptions:
              id: coreBgpOptions
              name: corebgpoptions
              label: BGP Configuration
              description: Set the configuration details for the BGP peer group.
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - coreMaximumAcceptedRoutes
                    - coreOspfDefaultInformationOriginate
                    - coreRedistributeRoutes
                    - coreBfd
                    - coreBgpDefaultInformationOriginate
                    - coreRedistributeStaticRoutes
                    - coreRedistributeConnectedRoutes
                    - coreBgpDistance
                    - coreupdateSource
                    - coreBgpNextHopType
                    - coreallowAsIn
                    - coreeBgpMultiHopTtl
            coreRedistDescription:
              id: coreRedistDescription
              name: coreRedistdescription
              label: Description
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreRedistPermitDeny:
              id: coreRedistPermitDeny
              name: coreRedistpermitDeny
              label: Permit Deny
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: permit
                is_secret: false
                static_options:
                  values:
                    - permit
                    - deny
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreRedistPrefixListPolicy:
              id: coreRedistPrefixListPolicy
              name: coreRedistprefixListPolicy
              label: Prefix List Policy
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options:
                  values:
                    - '{"fieldId":"coreprefixListName"}'
                extra_values_allowed: false
            coreRedistMatchCommunity:
              id: coreRedistMatchCommunity
              name: coreRedistmatchCommunity
              label: Match Community
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreRedistSetTag:
              id: coreRedistSetTag
              name: coreRedistsetTag
              label: Set Tag
              description: Tag number or "auto"
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreRedistSeqNum:
              id: coreRedistSeqNum
              name: coreRedistseqNum
              label: Sequence Number
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            coreRedistRmGroup:
              id: coreRedistRmGroup
              name: coreRedistRmGroup
              label: redist RM Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - coreRedistDescription
                    - coreRedistPermitDeny
                    - coreRedistPrefixListPolicy
                    - coreRedistMatchCommunity
                    - coreRedistSetTag
                    - coreRedistSeqNum
            coreRedistributionRouteMap:
              id: coreRedistributionRouteMap
              name: coreRedistributionRouteMap
              label: Redistribution Route Map
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: coreRedistRmGroup
                key: ''
            corePeerGroupAddressFamily:
              id: corePeerGroupAddressFamily
              name: coreAddressFamily
              label: Address Family
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: ipv4
                is_secret: false
                static_options:
                  values:
                    - ipv4
                    - ipv6
                    - evpn
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreaddressFamilyEvpnNextHopSelf:
              id: coreaddressFamilyEvpnNextHopSelf
              name: coreaddressFamilyEvpnNextHopSelf
              label: Address Family EVPN Next Hop Self
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - Enabled
                    - Inter-Domain
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreNeighborEncapsulation:
              id: coreNeighborEncapsulation
              name: neighborEncapsulation
              label: Neighbor Encapsulation
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - VXLAN
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreEncapsulationMplsNextHop:
              id: coreEncapsulationMplsNextHop
              name: encapsulationMplsNextHop
              label: Encapsulation  Next Hop Interface
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - Loopback0
                    - Loopback1
                    - Loopback2
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreevpnDomain:
              id: coreevpnDomain
              name: coreevpnDomain
              label: EVPN Domain
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreDefaultEncapsulation:
              id: coreDefaultEncapsulation
              name: defaultEncapsulation
              label: Default Encapsulation
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - VXLAN
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coredciOptions:
              id: coredciOptions
              name: coredciOptions
              label: EVPN Options
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - coreaddressFamilyEvpnNextHopSelf
                    - coreNeighborEncapsulation
                    - coreEncapsulationMplsNextHop
                    - coreevpnDomain
                    - coreDefaultEncapsulation
            coreEBgpAuthKey:
              id: coreEBgpAuthKey
              name: coreEBgpAuthKey
              label: eBGP Auth Key
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: true
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            corePeerGroup:
              id: corePeerGroup
              name: corepeerGroup
              label: Peer Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - corePeerGroupName
                    - corepgDescription
                    - coreAsnSettings
                    - coreAggregateRoutes
                    - coreRouteMapIn
                    - coreRouteMapOut
                    - coreBgpOptions
                    - coreRedistributionRouteMap
                    - corePeerGroupAddressFamily
                    - coredciOptions
                    - coreEBgpAuthKey
            corePeerGroups:
              id: corePeerGroups
              name: corepeerGroups
              label: BGP Peer Groups
              description: Create and configure BGP peer groups.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: corePeerGroup
                key: corePeerGroupName
            coreextMtu:
              id: coreextMtu
              name: coreextmtu
              label: MTU
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: 68..65535
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            coreextVrf:
              id: coreextVrf
              name: coreextvrf
              label: VRF
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreextSubnetMask:
              id: coreextSubnetMask
              name: coreextsubnetMask
              label: Subnet Mask
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: '31'
                range: 1..31
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            coreextipAddress:
              id: coreextipAddress
              name: coreextipAddress
              label: IPv4 Address
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: ipv4
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreextSpeed:
              id: coreextSpeed
              name: coreextspeed
              label: Speed
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreExtDescription:
              id: coreExtDescription
              name: coreextdescription
              label: Description
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreExtInterfaceName:
              id: coreExtInterfaceName
              name: coreextinterfaceName
              label: Interface Name
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreextIpv6Address:
              id: coreextIpv6Address
              name: coreextIpv6Address
              label: IPv6 Address
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: ipv6
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreextIpv6SubnetMask:
              id: coreextIpv6SubnetMask
              name: coreextIpv6SubnetMask
              label: IPv6 Subnet Mask
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: '64'
                range: 1..128
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            coreextospf:
              id: coreextospf
              name: coreextospf
              label: OSPF
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: Disabled
                is_secret: false
                static_options:
                  values:
                    - Disabled
                    - OSPF
                    - OSPFv3
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreExternalInterfacesGroup:
              id: coreExternalInterfacesGroup
              name: externalInterfacesGroup
              label: External Interfaces Group
              description: Configure a routed port or routed port + subinterface
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - coreextMtu
                    - coreextVrf
                    - coreextSubnetMask
                    - coreextipAddress
                    - coreextSpeed
                    - coreExtDescription
                    - coreExtInterfaceName
                    - coreextIpv6Address
                    - coreextIpv6SubnetMask
                    - coreextospf
            coreInterfacesCollection:
              id: coreInterfacesCollection
              name: interfaces
              label: External Interfaces
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: coreExternalInterfacesGroup
                key: ''
            coreNeighborIp:
              id: coreNeighborIp
              name: coreneighborIp
              label: Neighbor IP
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: ip
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreVrf:
              id: coreVrf
              name: corevrf
              label: VRF
              description: Select a VRF that has been predefined under external interfaces.
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options:
                  values:
                    - '{"fieldId":"coreextVrf"}'
                extra_values_allowed: true
            corePeerAsn:
              id: corePeerAsn
              name: corepeerAsn
              label: Peer ASN
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            corePerGroup:
              id: corePerGroup
              name: corepeerGroup
              label: Peer Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options:
                  values:
                    - '{"fieldId":"corePeerGroupName"}'
                extra_values_allowed: false
            corePeerGroupDescription:
              id: corePeerGroupDescription
              name: description
              label: Description
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coreeBgpNeighborsGroup:
              id: coreeBgpNeighborsGroup
              name: coreeBgpNeighborsGroup
              label: eBGP Neighbors Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - coreNeighborIp
                    - coreVrf
                    - corePeerAsn
                    - corePerGroup
                    - corePeerGroupDescription
            coreeBgpNeighbors:
              id: coreeBgpNeighbors
              name: coreeBgpNeighbors
              label: eBGP Neighbors
              description: Define eBGP neighbors connected to the device's external interfaces.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: coreeBgpNeighborsGroup
                key: ''
            coresrprefix:
              id: coresrprefix
              name: coreprefix
              label: IPv4 Prefix
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: cidrv4
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coresrnextHop:
              id: coresrnextHop
              name: corenextHop
              label: Next Hop
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: ipv4
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            coresrname:
              id: coresrname
              name: corename
              label: Name
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            corestaticRouteGroup:
              id: corestaticRouteGroup
              name: corestaticRouteGroup
              label: Static Route Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - coresrprefix
                    - coresrnextHop
                    - coresrname
            coreStaticRoutes:
              id: coreStaticRoutes
              name: corestaticRoutes
              label: Static Routes
              description: Define prefixes and next hops for static routes.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: corestaticRouteGroup
                key: coresrprefix
            corenodeSegmentIndex:
              id: corenodeSegmentIndex
              name: corenodeSegmentIndex
              label: Node Segment Index
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: 0..65535
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            coreNodesegmentIndex:
              id: coreNodesegmentIndex
              name: corenodeSegmentIndexGroup
              label: Node segment Index
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - corenodeSegmentIndex
            coreLinkDetails:
              id: coreLinkDetails
              name: coreLinkDetails
              label: Core Link Details
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - coreNeighbor
                    - corePrefixLists
                    - corePeerGroups
                    - coreInterfacesCollection
                    - coreeBgpNeighbors
                    - coreStaticRoutes
                    - coreNodesegmentIndex
            coreRouters:
              id: coreRouters
              name: coreRouters
              label: Core Devices
              description: 'Configure devices that have been assigned the Role: Core tag.'
              required: false
              type: INPUT_FIELD_TYPE_RESOLVER
              resolver_props:
                base_field_id: coreLinkDetails
                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_DEVICE_TAG
                input_tag_label: device
                tag_filter_query: 'Role:Core '
            maxLsa:
              id: maxLsa
              name: maxLsa
              label: OSPF Max LSA
              description: Maximum number of LSAs allowed in the OSPF link state database. <0-100000>
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: 0..100000
                static_options: null
                dynamic_options: null
                extra_values_allowed: false
            igpAuthKey:
              id: igpAuthKey
              name: authKey
              label: Auth Key
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: true
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            igp:
              id: igp
              name: igp
              label: Underlay Routing
              description: Select an underlay routing protocol for the network.
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                is_secret: false
                static_options:
                  values:
                    - OSPF
                    - OSPFv3
                    - ISIS
                    - BGP
                format: null
                length: null
                pattern: null
                dynamic_options: null
                extra_values_allowed: false
            igpRedistributeConnected:
              id: igpRedistributeConnected
              name: redistributeConnected
              label: Redistribute Connected
              description: Enable or disable redistribution of connected routes into the IGP..
              required: false
              type: INPUT_FIELD_TYPE_BOOLEAN
              boolean_props:
                default_value: false
            igpRedistributeStatic:
              id: igpRedistributeStatic
              name: redistributeStatic
              label: Redistribute Static
              description: Enable or disable redistribution of static routes into the IGP.
              required: false
              type: INPUT_FIELD_TYPE_BOOLEAN
              boolean_props:
                default_value: false
            underlayRoutingGroup:
              id: underlayRoutingGroup
              name: underlayRoutingGroup
              label: Underlay Routing
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - maxLsa
                    - igpAuthKey
                    - igp
                    - igpRedistributeConnected
                    - igpRedistributeStatic
            enableOverlayYesorNo:
              id: enableOverlayYesorNo
              name: enableOverlay
              label: Enable Overlay
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_BOOLEAN
              boolean_props:
                default_value: false
            pod:
              id: pod
              name: pod
              label: Network Name
              description: Enter a network name that matches the value of a Network tag
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - commonMlagConfig
                    - commonBGPConfig
                    - rrs
                    - erDomains
                    - coreRouters
                    - underlayRoutingGroup
                    - enableOverlayYesorNo
            pods:
              id: pods
              name: pods
              label: Network
              description: Create or manage a new routing network.
              required: false
              type: INPUT_FIELD_TYPE_RESOLVER
              resolver_props:
                base_field_id: pod
                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_DEVICE_TAG
                input_tag_label: Network
                tag_filter_query: null
            root:
              id: root
              name: ''
              label: ''
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - pods
        layout:
          value: |
            {
               "pod": {
                  "key": "pod",
                  "type": "INPUT",
                  "order": [
                     "enableOverlayYesorNo",
                     "commonBGPConfig",
                     "underlayRoutingGroup",
                     "erDomains",
                     "roleTagger",
                     "coreRouters",
                     "rrs",
                     "commonMlagConfig"
                  ]
               },
               "rrBGPDynamicNeighbors": {
                  "key": "rrBGPDynamicNeighbors",
                  "dependency": {
                     "enableOverlayYesorNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     }
                  },
                  "type": "INPUT",
                  "dependencyType": "AND"
               },
               "globalAS": {
                  "key": "globalAS",
                  "dependency": {
                     "enableOverlayYesorNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     }
                  },
                  "type": "INPUT",
                  "dependencyType": "AND"
               },
               "evpnAndVxlan": {
                  "key": "evpnAndVxlan",
                  "dependency": {
                     "enableOverlayYesorNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     }
                  },
                  "type": "INPUT",
                  "dependencyType": "AND"
               },
               "vxlanEncapType": {
                  "key": "vxlanEncapType",
                  "dependency": {
                     "enableOverlayYesorNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     }
                  },
                  "type": "INPUT",
                  "dependencyType": "AND"
               },
               "overlayType": {
                  "key": "overlayType",
                  "dependency": {
                     "enableOverlayYesorNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     }
                  },
                  "type": "INPUT",
                  "dependencyType": "AND"
               },
               "mplsLabelDistributionProtocol": {
                  "key": "mplsLabelDistributionProtocol",
                  "dependency": {
                     "enableOverlayYesorNo": {
                        "value": [
                           true,
                           false
                        ],
                        "mode": "HIDE"
                     }
                  },
                  "dependencyType": "AND",
                  "type": "INPUT"
               },
               "srTiFla": {
                  "key": "srTiFla",
                  "dependency": {
                     "enableOverlayYesorNo": {
                        "value": [
                           true,
                           false
                        ],
                        "mode": "HIDE"
                     }
                  },
                  "dependencyType": "AND",
                  "type": "INPUT"
               },
               "vxlanSourceInterface": {
                  "key": "vxlanSourceInterface",
                  "dependency": {
                     "enableOverlayYesorNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     }
                  },
                  "type": "INPUT",
                  "dependencyType": "AND"
               },
               "iBgpAuthKey": {
                  "key": "iBgpAuthKey",
                  "dependency": {
                     "enableOverlayYesorNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     }
                  },
                  "type": "INPUT",
                  "dependencyType": "AND"
               },
               "rripAddress": {
                  "key": "rripAddress",
                  "type": "INPUT",
                  "dependency": {
                     "enableOverlayYesorNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "rrDescripption": {
                  "key": "rrDescripption",
                  "type": "INPUT",
                  "dependency": {
                     "enableOverlayYesorNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "rrSpeed": {
                  "key": "rrSpeed",
                  "type": "INPUT",
                  "dependency": {
                     "enableOverlayYesorNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "rrSubnetMask": {
                  "key": "rrSubnetMask",
                  "type": "INPUT",
                  "dependency": {
                     "enableOverlayYesorNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "rrMtu": {
                  "key": "rrMtu",
                  "type": "INPUT",
                  "dependency": {
                     "enableOverlayYesorNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "rrIpv6Address": {
                  "key": "rrIpv6Address",
                  "type": "INPUT",
                  "dependency": {
                     "enableOverlayYesorNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "rrIpv6SubnetMask": {
                  "key": "rrIpv6SubnetMask",
                  "type": "INPUT",
                  "dependency": {
                     "enableOverlayYesorNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "underlayRoutingGroup": {
                  "key": "underlayRoutingGroup",
                  "type": "INPUT",
                  "order": [
                     "igp",
                     "maxLsa",
                     "igpAuthKey",
                     "igpRedistributeConnected",
                     "igpRedistributeStatic"
                  ]
               },
               "rrs": {
                  "key": "rrs",
                  "type": "INPUT",
                  "showDefaultRow": false
               },
               "erDomains": {
                  "key": "erDomains",
                  "type": "INPUT",
                  "showDefaultRow": false
               },
               "coreRouters": {
                  "key": "coreRouters",
                  "type": "INPUT",
                  "showDefaultRow": false
               },
               "erNeighbors": {
                  "key": "erNeighbors",
                  "type": "INPUT",
                  "showDefaultRow": false
               },
               "erLinkDetails": {
                  "key": "erLinkDetails",
                  "type": "INPUT",
                  "order": [
                     "erNeighbors",
                     "erRiTagger",
                     "loopback1Group",
                     "erNodeSegmentIndex",
                     "eBgpNeighbors",
                     "mlagYesNo",
                     "mlagInterfacesGroup",
                     "interfacesCollection",
                     "staticRoutes"
                  ]
               },
               "rrHostname": {
                  "key": "rrHostname",
                  "type": "INPUT",
                  "dependency": {
                     "enableOverlayYesorNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "erAsnTagger6": {
                  "type": "TAGGER",
                  "parentKey": "asnSettings",
                  "key": "erAsnTagger6",
                  "name": "Device ASN",
                  "assignmentType": "SINGLE",
                  "prepopulate": true,
                  "tagType": "DEVICE",
                  "description": "Shows previously set ASN tag for a device, create ASN tag if no global ASN is set, or override Studio Global ASN.",
                  "columns": [
                     {
                        "tagLabel": "router_bgp.as",
                        "suggestedValues": []
                     }
                  ]
               },
               "coreAsnTagger": {
                  "type": "TAGGER",
                  "parentKey": "coreAsnSettings",
                  "key": "coreAsnTagger",
                  "name": "Device ASN",
                  "assignmentType": "SINGLE",
                  "prepopulate": true,
                  "tagType": "DEVICE",
                  "description": "Shows previously set ASN tag for a device, create ASN tag if no global ASN is set, or override Studio Global ASN.",
                  "columns": [
                     {
                        "tagLabel": "router_bgp.as",
                        "suggestedValues": []
                     }
                  ]
               },
               "erRiTagger": {
                  "type": "TAGGER",
                  "parentKey": "erLinkDetails",
                  "key": "erRiTagger",
                  "name": "Loopback 0",
                  "assignmentType": "SINGLE",
                  "prepopulate": true,
                  "tagType": "DEVICE",
                  "description": "Assign Router ID tag to assign Loopback 0 address",
                  "columns": [
                     {
                        "tagLabel": "router_bgp.router_id",
                        "suggestedValues": []
                     }
                  ]
               },
               "coreLinkDetails": {
                  "key": "coreLinkDetails",
                  "type": "INPUT",
                  "order": [
                     "coreNeighbor",
                     "coreRiTagger",
                     "coreNodesegmentIndex",
                     "coreeBgpNeighbors",
                     "corePeerGroups",
                     "corePrefixLists",
                     "coreInterfacesCollection",
                     "coreStaticRoutes"
                  ]
               },
               "coreRiTagger": {
                  "type": "TAGGER",
                  "parentKey": "coreLinkDetails",
                  "key": "coreRiTagger",
                  "name": "Loopback 0",
                  "assignmentType": "SINGLE",
                  "prepopulate": true,
                  "tagType": "DEVICE",
                  "description": "Assign Router ID tag to assign Loopback 0 address",
                  "columns": [
                     {
                        "tagLabel": "router_bgp.router_id",
                        "suggestedValues": []
                     }
                  ]
               },
               "rrRiTagger": {
                  "type": "TAGGER",
                  "parentKey": "rrInterfaceParams",
                  "key": "rrRiTagger",
                  "name": "Loopback0",
                  "assignmentType": "SINGLE",
                  "prepopulate": true,
                  "tagType": "DEVICE",
                  "description": "Assign Router ID tag to assign Loopback 0 address",
                  "columns": [
                     {
                        "tagLabel": "router_bgp.router_id",
                        "suggestedValues": []
                     }
                  ],
                  "dependency": {
                     "enableOverlayYesorNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "roleTagger": {
                  "type": "TAGGER",
                  "parentKey": "pod",
                  "key": "roleTagger",
                  "name": "Role Tags",
                  "assignmentType": "MULTIPLE",
                  "prepopulate": true,
                  "tagType": "DEVICE",
                  "description": "Assign Core, Edge-Router or RR tags to devices.",
                  "columns": [
                     {
                        "tagLabel": "Role",
                        "suggestedValues": [
                           "Core",
                           "RR",
                           "Edge-Router"
                        ]
                     }
                  ]
               },
               "erDetails": {
                  "key": "erDetails",
                  "type": "INPUT",
                  "showDefaultRow": false
               },
               "coreNeighbor": {
                  "key": "coreNeighbor",
                  "type": "INPUT",
                  "showDefaultRow": false
               },
               "coreNeighborDetails": {
                  "key": "coreNeighborDetails",
                  "type": "INPUT",
                  "order": [
                     "coreNeighborDescription",
                     "ipAddress",
                     "coreSubnetMask",
                     "coreIpv6Address",
                     "coreIpv6SubnetMask",
                     "coreNeighborSpeed",
                     "dcoreAsn"
                  ]
               },
               "erNeighborDetails": {
                  "key": "erNeighborDetails",
                  "type": "INPUT",
                  "order": [
                     "erDescription",
                     "eripAddress",
                     "erSubnetMask",
                     "erIpv6Address",
                     "erIpv6SubnetMask",
                     "erSpeed",
                     "erAsn"
                  ]
               },
               "pods": {
                  "key": "pods",
                  "type": "INPUT",
                  "showDefaultRow": false
               },
               "coreeBgpNeighbors": {
                  "key": "coreeBgpNeighbors",
                  "type": "INPUT",
                  "isPageLayout": false
               },
               "corePeerGroups": {
                  "key": "corePeerGroups",
                  "type": "INPUT",
                  "isPageLayout": true
               },
               "ebgpCoreNeighborsPeerGroups": {
                  "key": "ebgpCoreNeighborsPeerGroups",
                  "type": "INPUT",
                  "isPageLayout": true
               },
               "peerGroup": {
                  "key": "peerGroup",
                  "type": "INPUT",
                  "order": [
                     "peerGroupName",
                     "peerGroupdescription",
                     "erEbgpAuth",
                     "asnSettings",
                     "pgErAddressFamily",
                     "dciOptions",
                     "peerGroupRouteMapIn",
                     "peerGroupRouteMapOut",
                     "pgAggregateRoutes",
                     "bgpOptions",
                     "redistributionRouteMap"
                  ]
               },
               "corePeerGroup": {
                  "key": "corePeerGroup",
                  "type": "INPUT",
                  "order": [
                     "corePeerGroupName",
                     "corepgDescription",
                     "coreEBgpAuthKey",
                     "coreAsnSettings",
                     "corePeerGroupAddressFamily",
                     "coredciOptions",
                     "coreAggregateRoutes",
                     "coreRouteMapIn",
                     "coreRouteMapOut",
                     "coreBgpOptions",
                     "coreRedistributionRouteMap"
                  ]
               },
               "nodeSegmentIndex": {
                  "key": "nodeSegmentIndex",
                  "type": "INPUT",
                  "dependency": {
                     "igp": {
                        "value": [
                           "ISIS"
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "corenodeSegmentIndex": {
                  "key": "corenodeSegmentIndex",
                  "type": "INPUT",
                  "dependency": {
                     "igp": {
                        "value": [
                           "ISIS"
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "rrDownlink": {
                  "key": "rrDownlink",
                  "type": "INPUT",
                  "showDefaultRow": false
               },
               "mlagSpeed": {
                  "key": "mlagSpeed",
                  "type": "INPUT",
                  "dependency": {
                     "mlagYesNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "mlagDescription": {
                  "key": "mlagDescription",
                  "type": "INPUT",
                  "dependency": {
                     "mlagYesNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "mlagRole": {
                  "key": "mlagRole",
                  "type": "INPUT",
                  "dependency": {
                     "mlagYesNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "reloadDelayMlag": {
                  "key": "reloadDelayMlag",
                  "type": "INPUT",
                  "dependency": {
                     "mlagYesNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "reloadDelayNonMlag": {
                  "key": "reloadDelayNonMlag",
                  "type": "INPUT",
                  "dependency": {
                     "mlagYesNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "heartBeatInterval": {
                  "key": "heartBeatInterval",
                  "type": "INPUT",
                  "dependency": {
                     "mlagYesNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "peerAddressHeartBeat": {
                  "key": "peerAddressHeartBeat",
                  "dependency": {
                     "mlagYesNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     },
                     "heartBeatInterval": {
                        "value": [
                           "__ANY__"
                        ],
                        "mode": "SHOW"
                     }
                  },
                  "type": "INPUT",
                  "dependencyType": "AND"
               },
               "dualPrimaryDetectionDelay": {
                  "key": "dualPrimaryDetectionDelay",
                  "dependency": {
                     "mlagYesNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     },
                     "heartBeatInterval": {
                        "value": [
                           "__ANY__"
                        ],
                        "mode": "SHOW"
                     }
                  },
                  "type": "INPUT",
                  "dependencyType": "AND"
               },
               "dualPrimaryRecoveryDelay": {
                  "key": "dualPrimaryRecoveryDelay",
                  "dependency": {
                     "mlagYesNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     },
                     "heartBeatInterval": {
                        "value": [
                           "__ANY__"
                        ],
                        "mode": "SHOW"
                     }
                  },
                  "type": "INPUT",
                  "dependencyType": "AND"
               },
               "mlagIpAddress": {
                  "key": "mlagIpAddress",
                  "type": "INPUT",
                  "dependency": {
                     "mlagYesNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "mlagPeerAddress": {
                  "key": "mlagPeerAddress",
                  "type": "INPUT",
                  "dependency": {
                     "mlagYesNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "mlagSubnetMask": {
                  "key": "mlagSubnetMask",
                  "type": "INPUT",
                  "dependency": {
                     "mlagYesNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "addressFamilyEvpnNextHopSelf": {
                  "key": "addressFamilyEvpnNextHopSelf",
                  "type": "INPUT",
                  "dependency": {
                     "pgErAddressFamily": {
                        "value": [
                           "evpn"
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "neighborEncapsulation": {
                  "key": "neighborEncapsulation",
                  "type": "INPUT",
                  "dependency": {
                     "pgErAddressFamily": {
                        "value": [
                           "evpn"
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "encapsulationMplsNextHop": {
                  "key": "encapsulationMplsNextHop",
                  "type": "INPUT",
                  "dependency": {
                     "pgErAddressFamily": {
                        "value": [
                           "evpn"
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "evpnDomain": {
                  "key": "evpnDomain",
                  "type": "INPUT",
                  "dependency": {
                     "pgErAddressFamily": {
                        "value": [
                           "evpn"
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "defaultEncapsulation": {
                  "key": "defaultEncapsulation",
                  "type": "INPUT",
                  "dependency": {
                     "pgErAddressFamily": {
                        "value": [
                           "evpn"
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "coreaddressFamilyEvpnNextHopSelf": {
                  "key": "coreaddressFamilyEvpnNextHopSelf",
                  "type": "INPUT",
                  "dependency": {
                     "pgErAddressFamily": {
                        "value": [
                           "evpn"
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "coreNeighborEncapsulation": {
                  "key": "coreNeighborEncapsulation",
                  "type": "INPUT",
                  "dependency": {
                     "pgErAddressFamily": {
                        "value": [
                           "evpn"
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "coreEncapsulationMplsNextHop": {
                  "key": "coreEncapsulationMplsNextHop",
                  "type": "INPUT",
                  "dependency": {
                     "pgErAddressFamily": {
                        "value": [
                           "evpn"
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "coreevpnDomain": {
                  "key": "coreevpnDomain",
                  "type": "INPUT",
                  "dependency": {
                     "pgErAddressFamily": {
                        "value": [
                           "evpn"
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "coreDefaultEncapsulation": {
                  "key": "coreDefaultEncapsulation",
                  "type": "INPUT",
                  "dependency": {
                     "pgErAddressFamily": {
                        "value": [
                           "evpn"
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "coreBgpOptions": {
                  "key": "coreBgpOptions",
                  "type": "INPUT",
                  "order": [
                     "coreMaximumAcceptedRoutes",
                     "coreeBgpMultiHopTtl",
                     "coreOspfDefaultInformationOriginate",
                     "coreRedistributeRoutes",
                     "coreBfd",
                     "coreBgpDefaultInformationOriginate",
                     "coreRedistributeStaticRoutes",
                     "coreRedistributeConnectedRoutes",
                     "coreBgpDistance",
                     "coreupdateSource",
                     "coreBgpNextHopType",
                     "coreallowAsIn"
                  ]
               },
               "bgpOptions": {
                  "key": "bgpOptions",
                  "type": "INPUT",
                  "order": [
                     "peerGroupMaximumAcceptedRoutes",
                     "eBgpMultiHopTtl",
                     "erOspfDefaultInformationOriginate",
                     "bfd",
                     "redistributeRoutes",
                     "redistributionVrf",
                     "bgpDefaultInformationOriginate",
                     "redistributeStaticRoutes",
                     "redistributeConnectedRoutes",
                     "updateSource",
                     "bgpDistance",
                     "bgpNextHopType",
                     "allowAsIn"
                  ]
               },
               "enableIgpOnPeerLink": {
                  "key": "enableIgpOnPeerLink",
                  "type": "INPUT",
                  "dependency": {
                     "mlagYesNo": {
                        "value": [
                           true
                        ],
                        "mode": "SHOW"
                     }
                  }
               },
               "mlagInterfaces": {
                  "key": "mlagInterfaces",
                  "type": "INPUT",
                  "showDefaultRow": false
               }
            }
