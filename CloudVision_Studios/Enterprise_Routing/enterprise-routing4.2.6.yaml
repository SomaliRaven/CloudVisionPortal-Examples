- service: arista.studio.v1.StudioConfigService
  method: Set
  body:
    value:
      key:
        studio_id: studio-enterprise-routing
        workspace_id: ws-enterprise-routing
      display_name: Enterprise Routing
      description: >-
        Deploy and manage routed networks that can support MLAG, OSPF, IS-IS,
        BGP, and EVPN-VXLAN.
      template:
        type: TEMPLATE_TYPE_MAKO
        body: |
          <%
          import ipaddress
          import tagsearch_python.tagsearch_pb2_grpc as tsgr
          import tagsearch_python.tagsearch_pb2 as tspb
          from arista.tag.v2.tag_pb2 import TagKey, TagAssignmentKey
          from arista.tag.v2.services import TagConfigServiceStub, TagAssignmentConfigServiceStub
          from arista.tag.v2.services import TagConfigSetRequest, TagAssignmentConfigSetRequest

          class InterfaceConfig:
            def __init__(self):
              self.Port = ""
              self.IPAddress = ""
              self.Mask = ""
              self.IPNetwork = ""
              self.Host = ""
              self.NeighborHostname = ""
              self.NeighborPort = ""
              self.ChannelGroup = ""
              self.Description = ""
              self.Speed = ""
              self.MTU = ""

          class Mlag:
            def __init__(self):
              self.ID = ""
              self.PeerLink = False
              self.Interfaces = []
              self.MlagIPAddr = ""
              self.MlagNetmask = ""
              self.MlagNetwork = ""
              self.MlagIPPeerAddr = ""
              self.MlagPeerName = ""

          class NeighborIntf:
            def __init__(self):
              self.IPAddress = ""
              self.Port = ""
              self.Host = ""

          class BGPPeerGroup:
            def __init__(self):
              self.Name = ""
              self.EVPN = False
              self.Peerer = False
              self.NeighborASN = ""
              self.NeighborIntfs = []

          class StaticRoutes:
            def __init__(self):
              self.Prefix = ""
              self.NextHop = ""
              self.Name = ""
              self.VRF = ""

          class PLName:
            def __init__(self):
              self.SeqNum = ""
              self.PermitDeny = ""
              self.Prefix = ""
              self.PrefixLength = ""
              self.MaskLength = ""

          class PrefixLists:
            def __init__(self):
              self.PLName = []
              self.Name = ""

          class RouteMapIn:
            def __init__(self):
              self.SeqNum = ""
              self.PermitDeny = ""
              self.PrefixListIn = ""
              self.MatchCommunity = ""
              self.SetCommunity = ""
              self.LocalPref = ""
              self.PrependRepeat = ""

          class RouteMapOut:
            def __init__(self):
              self.SeqNum = ""
              self.PermitDeny = ""
              self.PrefixListOut = ""
              self.MatchCommunity = ""
              self.SetCommunity = ""
              self.PrependRepeat = ""

          class ReDistRouteMap:
            def __init__(self):
              self.SeqNum = ""
              self.PermitDeny = ""
              self.PrefixList = ""
              self.MatchCommunity = ""
              self.SetTag = ""

          class PeerGroups:
            def __init__(self):
              self.PeerGroupName = ""
              self.PeerASN = ""
              self.Redis = ""
              self.Description = ""
              self.Aggregates = []
              self.LocalAS = ""
              self.NextHopSelf = ""
              self.BFD = ""
              self.eBGPMultiHopTTL = ""
              self.MaxAcceptedRoutes = ""
              self.RouteMapIn = []
              self.RouteMapOut = []
              self.OriginateDefault = ""
              self.BGPOriginateDefault = ""
              self.RedistVRF = ""
              self.ReDistrouteMap = []

          class eBGcoreneighbors:
            def __init__(self):
              self.NeighborIp = ""
              self.PeerASN = ""
              self.PeerGroup = ""
              self.Vrf = ""

          class Aggregates:
            def __init__(self):
              self.Route = ""

          class ExtVlan:
            def __init__(self):
              self.Mask = ""
              self.Ospf = ""
              self.IPAddress = ""
              self.VlanID = ""
              self.Vrf = ""
              self.Description = ""

          class ExternalInterfaces:
            def __init__(self):
              self.InterfaceName = ""
              self.Description = ""
              self.Speed = ""
              self.MTU = ""
              self.IPAddress = ""
              self.SubnetMask = ""
              self.Vrf = ""
              self.Ospf = ""

          class SwitchConfig:
            def __init__(self):
              self.Model = ""
              self.EOSVersion = ""
              self.Role = ""
              self.Hostname = ""
              self.FabricNetwork = []
              self.FabricNetmask = ""
              self.Interfaces = []
              self.PortChannels = []
              self.MlagMembers = Mlag()
              self.Loopback0IP = ""
              self.Loopback0Network = ""
              self.MlagIPAddr = ""
              self.MlagIPPeerAddr = ""
              self.MlagNetmask =""
              self.MlagNetwork = ""
              self.MlagPeerName = ""
              self.LogicalVTEP = ""
              self.VirtualVTEP = ""
              self.ASN = ""
              self.BGPPeerGroups = []
              self.eBGcoreneighbors = []
              self.StaticRoutes = []
              self.PrefixLists = []
              self.PeerGroups = []
              self.ExternalInterfaces = []

          def get_isis_addr(area_id, area_number, lo0):
              area_id_str = str(area_id)
              if len(area_id_str) != 2:
                  area_id_str = '0'+area_id_str
              area_number_str = str(area_number)
              len_area_number_str = len(area_number_str)
              for i in range(0, 4 - len_area_number_str) :
                  area_number_str = '0' + area_number_str
              octets = lo0.split('.')
              lo0_filled_with0 = ""
              for octet in octets :
                  temp = octet
                  for i in range(0, 3 - len(octet)):
                      temp =  '0' + temp
                  lo0_filled_with0 = lo0_filled_with0 + temp
              sys_id = lo0_filled_with0[0:4] +'.'+lo0_filled_with0[4:8]+'.'+lo0_filled_with0[8:12]
              return area_id_str+'.'+area_number_str+'.'+sys_id+'.00'

          tagValues = {}
          myNetwork = None
          myRoleER = False
          myRoleRR = False
          myRoleCore = False
          mlagTagged = False
          networkLabel = 'Network'
          myDevice = ctx.getDevice()
          myDeviceID = myDevice.id
          erDomainLabel = 'Edge-Router-Domain'
          hostnameDeviceIDDict = {}
          deviceIDNodeNumDict = {}
          deviceIDSwitchConfigDict = {}
          myerDomain = ""
          erDomainToDeviceIDDict = {}
          deviceIDHostnameDict = {}
          highesterNumber = 0
          highestrrNumber = 0
          highestcoreNumber = 0
          lb0Label = 'router_bgp.router_id'
          asLabel = 'router_bgp.as'

          for dev in ctx.topology.getDevices():
            sc = deviceIDSwitchConfigDict.get(dev.id, SwitchConfig())
            sc.Hostname = dev.hostName
            sc.Model = dev.modelName
            deviceIDSwitchConfigDict[dev.id] = sc
            hostnameDeviceIDDict[dev.hostName] = dev.id
            deviceIDHostnameDict[dev.id] = dev.hostName
            if dev.id == myDeviceID:
              myHostname = dev.hostName
              myModel = dev.modelName

          tsclient = ctx.getApiClient(tsgr.TagSearchStub)
          tvs = tspb.TagValueSearchRequest(label=networkLabel, workspace_id=ctx.studio.workspaceId, topology_studio_request=True)
          tvsresp = tsclient.GetTagValueSuggestions(tvs)
          for tag in tvsresp.tags:
            query = '{}:\"{}\" AND device:{}'.format(tag.label, tag.value, myDeviceID)
            tagtmr = tspb.TagMatchRequestV2(query=query, workspace_id=ctx.studio.workspaceId, topology_studio_request=True)
            tagresp = tsclient.GetTagMatchesV2(tagtmr)
            for match in tagresp.matches:
              if match.device.device_id == myDeviceID:
                myNetwork = tag.value

          tvs = tspb.TagValueSearchRequest(label=erDomainLabel, workspace_id=ctx.studio.workspaceId, topology_studio_request=True)
          tvsresp = tsclient.GetTagValueSuggestions(tvs)
          for tag in tvsresp.tags:
            query = '{}:\"{}\"'.format(tag.label, tag.value)
            tagtmr = tspb.TagMatchRequestV2(query=query, workspace_id=ctx.studio.workspaceId, topology_studio_request=True)
            tagresp = tsclient.GetTagMatchesV2(tagtmr)
            for index, match in enumerate(tagresp.matches, 1):
              erDomainList = erDomainToDeviceIDDict.get(tag.value)
              if erDomainList is None :
                erDomainList = []
              erDomainList.append(match.device.device_id)
              erDomainToDeviceIDDict[tag.value] = erDomainList
              if match.device.device_id == myDeviceID:
                myerDomain = tag.value
              deviceIDNodeNumDict[match.device.device_id] = index
              sc = deviceIDSwitchConfigDict.get(match.device.device_id, SwitchConfig())
              sc.Role = "er"
              deviceIDSwitchConfigDict[match.device.device_id] = sc
              if match.device.device_id == myDeviceID:
                myRoleER = True

            tagtmr = tspb.TagMatchRequestV2(query="Role:Core" , workspace_id=ctx.studio.workspaceId, topology_studio_request=True)
            tagresp = tsclient.GetTagMatchesV2(tagtmr)
            for index, match in enumerate(tagresp.matches, 1):
              deviceIDNodeNumDict[match.device.device_id] = index
              sc = deviceIDSwitchConfigDict.get(match.device.device_id, SwitchConfig())
              assert sc.Role is not None, "Role is already set on {}. ".format(
                          device_id
                      )
              sc.Role = "core"
              deviceIDSwitchConfigDict[match.device.device_id] = sc
              if match.device.device_id == myDeviceID:
                myRoleCore = True

            tagtmr = tspb.TagMatchRequestV2(query="Role:RR" , workspace_id=ctx.studio.workspaceId, topology_studio_request=True)
            tagresp = tsclient.GetTagMatchesV2(tagtmr)
            for index, match in enumerate(tagresp.matches, 1):
              deviceIDNodeNumDict[match.device.device_id] = index
              sc = deviceIDSwitchConfigDict.get(match.device.device_id, SwitchConfig())
              assert sc.Role is not None, "Role is already set on {}. ".format(
                          device_id
                      )
              sc.Role = "rr"
              deviceIDSwitchConfigDict[match.device.device_id] = sc
              if match.device.device_id == myDeviceID:
                myRoleRR = True

          if not myNetwork:
              return

          def create_tag(tag_key):
              '''
              tag_key is a TagKey
              '''
              tcsr = TagConfigSetRequest()
              tcsr.value.key.workspace_id.value = tag_key.workspace_id.value
              tcsr.value.key.element_type = tag_key.element_type
              tcsr.value.key.label.value = tag_key.label.value
              tcsr.value.key.value.value = tag_key.value.value
              client = ctx.getApiClient(TagConfigServiceStub)
              client.Set(tcsr)

          def apply_tag(tag_assignment_key):
              '''
              tag_assignment_key is a TagAssignmentKey
              '''
              tacsr = TagAssignmentConfigSetRequest()
              tacsr.value.key.workspace_id.value = tag_assignment_key.workspace_id.value
              tacsr.value.key.element_type = tag_assignment_key.element_type
              tacsr.value.key.label.value = tag_assignment_key.label.value
              tacsr.value.key.value.value = tag_assignment_key.value.value
              tacsr.value.key.device_id.value = tag_assignment_key.device_id.value
              tacsr.value.key.interface_id.value = tag_assignment_key.interface_id.value
              tacsr.value.remove.value = False
              client = ctx.getApiClient(TagAssignmentConfigServiceStub)
              client.Set(tacsr)

          def remove_tag(tag_assignment_key):
              '''
              tag_assignment_key is a TagAssignmentKey
              '''
              tacsr = TagAssignmentConfigSetRequest()
              tacsr.value.key.workspace_id.value = tag_assignment_key.workspace_id.value
              tacsr.value.key.element_type = tag_assignment_key.element_type
              tacsr.value.key.label.value = tag_assignment_key.label.value
              tacsr.value.key.value.value = tag_assignment_key.value.value
              tacsr.value.key.device_id.value = tag_assignment_key.device_id.value
              tacsr.value.key.interface_id.value = tag_assignment_key.interface_id.value
              tacsr.value.remove.value = True
              client = ctx.getApiClient(TagAssignmentConfigServiceStub)
              client.Set(tacsr)

          def get_tag_values_applied_to_device(tag_assignment_key):
              label = tag_assignment_key.label.value
              device_id = tag_assignment_key.device_id.value
              workspace_id = tag_assignment_key.workspace_id.value
              # Create tagstub
              tsclient = ctx.getApiClient(tsgr.TagSearchStub)
              matching_tags = []
              # Create TagValueSearchRequest
              tvsr = tspb.TagValueSearchRequest(label=label, workspace_id=workspace_id, topology_studio_request=True)
              for tag in tsclient.GetTagValueSuggestions(tvsr).tags:
                  query = '{}:\"{}\" AND device:{}'.format(tag.label, tag.value, device_id)
                  tagmr = tspb.TagMatchRequestV2(query=query, workspace_id=workspace_id, topology_studio_request=True)
                  tagmresp =  tsclient.GetTagMatchesV2(tagmr)
                  for match in tagmresp.matches:
                      if match.device.device_id == device_id:
                          matching_tags.append(tag)
              return matching_tags

          def update_device_tag(tag_assignment_key):
              """
              tag_assignment_key is a TagAssignmentKey that you want to update the device with
              """
              applied_tags = get_tag_values_applied_to_device(tag_assignment_key)
              already_assigned = False
              for tag in applied_tags:
                  # tag_assignment_key.value.value.strip() == "" accounts for no tag value set
                  if tag_assignment_key.value.value.strip() == "" or tag.value != tag_assignment_key.value.value:
                      tak_to_remove = TagAssignmentKey()
                      tak_to_remove.workspace_id.value = tag_assignment_key.workspace_id.value
                      tak_to_remove.element_type = 1
                      tak_to_remove.device_id.value =  tag_assignment_key.device_id.value
                      tak_to_remove.label.value = tag_assignment_key.label.value
                      tak_to_remove.value.value = tag.value
                      remove_tag(tak_to_remove)
                  else:
                      already_assigned = True
              if already_assigned or tag_assignment_key.value.value.strip() == "":
                  return
              #Create desired tag
              tag_key = TagKey()
              tag_key.workspace_id.value = tag_assignment_key.workspace_id.value
              tag_key.element_type = 1
              tag_key.label.value = tag_assignment_key.label.value
              tag_key.value.value = tag_assignment_key.value.value
              create_tag(tag_key)
              # Apply desired tag
              apply_tag(tag_assignment_key)

          def set_bgp_tags(ASN):
              tag_labels = {"router_bgp.as": ASN}
              for label, config_path in tag_labels.items():
                  #Remove tags with same label that don't match proper value
                  #Skip creating and assigning if it's already assigned
                  tag_assignment_key = TagAssignmentKey()
                  tag_assignment_key.workspace_id.value = ctx.studio.workspaceId
                  tag_assignment_key.element_type = 1
                  tag_assignment_key.device_id.value = ctx.getDevice().id
                  tag_assignment_key.label.value = label
                  tag_assignment_key.value.value = str(config_path)
                  update_device_tag(tag_assignment_key)

          def config_rr():
            if rrInterface:
              for intf in myDevice.getInterfaces():
                intfName = intf.name
                val = rrInterface.resolve(intfName, strict=True)
                if not val:
                  continue
                peer_device, peer_interface = intf.getPeerInfo()
                intf = InterfaceConfig()
                intf.Port = intfName
                intf.NeighborHostname = deviceIDHostnameDict[peer_device.id]
                intf.NeighborPort = peer_interface.name
                neighborDeviceID = peer_device.id
                neighborNodeNum = deviceIDNodeNumDict.get(neighborDeviceID)
                assert neighborNodeNum, "neighbor missing: %s" % neighborDeviceID
                intf.Description = val["rrNeighborParams"]["description"]
                intf.IPAddress = val["rrNeighborParams"]["rripAddress"]
                intf.Mask = val["rrNeighborParams"]["rrsubnetMask"]
                intf.Speed = val["rrNeighborParams"]["rrspeed"]
                intf.MTU = val["rrNeighborParams"]["rrmtu"]
                mySC.Interfaces.append(intf)
                neighborSC = deviceIDSwitchConfigDict[neighborDeviceID]
                neighborIntf = InterfaceConfig()
                neighborIntf.Port = intf.NeighborPort
                neighborIntf.NeighborPort = intf.Port
                neighborSC.Interfaces.append(neighborIntf)
                if not rrBGPDynamicNeighbors:
                  scList = asnBGPPeerDict.get(neighborSC.ASN, [])
                  scList.append(neighborSC)
                  asnBGPPeerDict[neighborSC.ASN] = scList

            for key in asnBGPPeerDict :
              scList = asnBGPPeerDict.get(key)
              peerGroup = BGPPeerGroup()
              vpnPeerGroup = BGPPeerGroup()
              vpnPeerGroup.EVPN  = True
              peerGroup.NeighborASN = vpnPeerGroup.NeighborASN = key
              neighborLoopbacks = []
              neighborIntfs = []
              for sc in scList :
                bgpPeerIntf  = NeighborIntf()
                evpnPeerIntf = NeighborIntf()
                evpnPeerIntf.Host = sc.Hostname
                bgpPeerIntf.Host = sc.Hostname
                evpnPeerIntf.Port = "Loopback0"
                bgpPeerIntf.IPAddress = sc.Interfaces[0].IPAddress
                evpnPeerIntf.IPAddress = sc.Loopback0IP
                neighborIntfs.append(bgpPeerIntf)
                neighborLoopbacks.append(evpnPeerIntf)
              peerGroup.NeighborIntfs = neighborIntfs
              vpnPeerGroup.NeighborIntfs = neighborLoopbacks
              mySC.BGPPeerGroups.append(peerGroup)
              mySC.BGPPeerGroups.append(vpnPeerGroup)

          def config_er():
            mlagEnabled = False
            mlagSubnetMask = 31
            mlagRole = networksInputs["pod"]["erDomains"].resolve()["erDomain"]["erDetails"].resolve()["erLinkDetails"]["mlagGroup"]["mlagRole"]
            mlagmember = 0
            if mlagRole == "Primary":
              mlagmember =  1
            elif mlagRole == "Secondary":
              mlagmember =  2
            mlag = Mlag()
            mySC.MlagNetwork = ipaddress.ip_network(networksInputs["pod"]["commonMlagConfig"]["mlagLinkSubnet"])
            mySC.MlagIPAddr = mySC.MlagNetwork[(mlagmember % 2) - 1]
            mySC.MlagNetmask = mlagSubnetMask
            mySC.MlagIPPeerAddr = mySC.MlagNetwork[mlagmember % 2]
            mlagIntf1 = InterfaceConfig()
            mlagIntf2 = InterfaceConfig()
            mlagInt = networksInputs["pod"]["erDomains"].resolve()["erDomain"]["erDetails"].resolve()["erLinkDetails"]["mlagGroup"]["mlagInterfaces"]
            mlagIP = networksInputs["pod"]["erDomains"].resolve()["erDomain"]["erDetails"].resolve()["erLinkDetails"]["mlagGroup"]["mlagOverrideGlobalSubnet"]
            if  mlagInt and mlagRole != "None":
              for intf in myDevice.getInterfaces():
                intfName = intf.name
                val = mlagInt.resolve(intfName, strict=True)
                if not val:
                  continue
                if mlagIntf1.Port:
                  mlagIntf2.Port = intfName
                  mlagIntf2.Description = val.mlagInterfacesGroup.mlagDescription
                  mlagIntf2.Speed = val.mlagInterfacesGroup.mlagSpeed
                  if mlagIP.mlagIpAddress:
                    mySC.MlagIPAddr = mlagIP.mlagIpAddress
                    mySC.MlagNetmask = mlagIP.mlagSubnetMask
                    mySC.MlagIPPeerAddr = mlagIP.mlagPeerAddress
                else:
                  mlagIntf1.Port = intfName
                  mlagIntf1.Description = val.mlagInterfacesGroup.mlagDescription
                  mlagIntf1.Speed = val.mlagInterfacesGroup.mlagSpeed
                  if mlagIP.mlagIpAddress:
                    mySC.MlagIPAddr = mlagIP.mlagIpAddress
                    mySC.MlagNetmask = mlagIP.mlagSubnetMask
                    mySC.MlagIPPeerAddr = mlagIP.mlagPeerAddress
            if mlagIntf1.Port != "" :
              mlag.Interfaces.append(mlagIntf1)
            if mlagIntf2.Port != "" :
              mlag.Interfaces.append(mlagIntf2)
            if mlagIntf1.Port !="" or mlagIntf2.Port != "":
              mySC.MlagMembers = mlag
              mlagEnabled = True
              mlagedDevices = erDomainToDeviceIDDict.get(myerDomain)
              if mlagedDevices is not None and len(mlagedDevices) == 2 :
                peerDeviceID = ""
                bgpPeerIntf  = NeighborIntf()
                if mlagedDevices[0] == myDeviceID:
                  peerDeviceID = mlagedDevices[1]
                elif mlagedDevices[1] == myDeviceID:
                  peerDeviceID = mlagedDevices[0]
                bgpPeerIntf.Host = deviceIDHostnameDict[peerDeviceID]
                mySC.MlagPeerName = deviceIDHostnameDict[peerDeviceID]
                bgpPeerIntf.Port = "MLAG"
                bgpPeerIntf.IPAddress = mySC.MlagIPPeerAddr
                bgpPeerGroup = BGPPeerGroup()
                bgpPeerGroup.Name = "Peer_ER"
                bgpPeerGroup.NeighborASN = mySC.ASN
                bgpPeerGroup.Peerer = True
                bgpPeerGroup.NeighborIntfs.append(bgpPeerIntf)
                mySC.BGPPeerGroups.append(bgpPeerGroup)

            if erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["rrHostnames"]:
              for intf in myDevice.getInterfaces():
                intfName = intf.name
                peer_device, peer_interface = intf.getPeerInfo()
                index = 0
                for rr in erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["rrHostnames"]:
                  val = None
                  if peer_device:
                    if peer_device.id == hostnameDeviceIDDict.get(rr.rrHostname) and rr.rrlocalIpAddress:
                      val = rr
                  if val:
                    intf = InterfaceConfig()
                    intf.Port = intfName
                    intf.NeighborHostname = val.rrHostname
                    intf.NeighborPort = peer_interface.name
                    intf.Description = val.description
                    neighborDeviceID = hostnameDeviceIDDict[intf.NeighborHostname]
                    neighborNodeNum = deviceIDNodeNumDict.get(neighborDeviceID)
                    assert neighborNodeNum, "rr neighbor missing: %s" % neighborDeviceID
                    intf.IPAddress = val.rrlocalIpAddress
                    intf.Mask = val.localSubnetMask
                    intf.Speed = val.rrspeed
                    intf.MTU = val.rrmtu
                    mySC.Interfaces.append(intf)
                    neighborSC = deviceIDSwitchConfigDict[neighborDeviceID]
                    neighborIntf = InterfaceConfig()
                    neighborIntf.Port = intf.NeighborPort
                    neighborIntf.NeighborPort = intf.Port
                    neighborIntf.IPNetwork = intf.IPNetwork
                    neighborIntf.Mask = fabricSubnetMask
                    neighborSC.Interfaces.append(neighborIntf)
                    scList = asnBGPPeerDict.get(neighborSC.ASN, [])
                    scList.append(neighborSC)
                    asnBGPPeerDict[neighborSC.ASN] = scList
                  else:
                    val = rr
                    val.localInterface = str(index)
                    index = index + 1
                    intf = InterfaceConfig()
                    intf.Port = val.localInterface
                    intf.NeighborHostname = val.rrHostname
                    intf.NeighborPort = val.localInterface
                    neighborDeviceID = hostnameDeviceIDDict[intf.NeighborHostname]
                    neighborNodeNum = deviceIDNodeNumDict.get(neighborDeviceID)
                    assert neighborNodeNum, "rr neighbor missing: %s" % neighborDeviceID
                    intf.IPAddress = val.rrlocalIpAddress
                    intf.Mask = val.localSubnetMask
                    mySC.Interfaces.append(intf)
                    neighborSC = deviceIDSwitchConfigDict[neighborDeviceID]
                    neighborIntf = InterfaceConfig()
                    neighborIntf.Port = intf.NeighborPort
                    neighborIntf.NeighborPort = intf.Port
                    neighborIntf.IPNetwork = intf.IPNetwork
                    neighborIntf.Mask = fabricSubnetMask
                    neighborSC.Interfaces.append(neighborIntf)
                    scList = asnBGPPeerDict.get(neighborSC.ASN, [])
                    scList.append(neighborSC)
                    asnBGPPeerDict[neighborSC.ASN] = scList

            er2erLink = erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["erneighbors"]
            if er2erLink:
              for intf in myDevice.getInterfaces():
                intfName = intf.name
                val = er2erLink.resolve(intfName, strict=True)
                if not val:
                  continue
                peer_device, peer_interface = intf.getPeerInfo()
                assert peer_device is not None, "peer is missing on specified edge-router interface: %s" % intfName
                intf = InterfaceConfig()
                intf.Port = intfName
                intf.NeighborHostname = deviceIDHostnameDict[peer_device.id]
                intf.NeighborPort = peer_interface.name
                intf.Description = val["erneighborDetails"]["description"]
                intf.IPAddress = val["erneighborDetails"]["eripAddress"]
                intf.Mask = val["erneighborDetails"]["ersubnetMask"]
                intf.Speed = val["erneighborDetails"]["erspeed"]
                neighborDeviceID = peer_device.id
                neighborNodeNum = deviceIDNodeNumDict.get(neighborDeviceID)
                assert neighborNodeNum, "neighbor missing: %s" % neighborDeviceID
                mySC.Interfaces.append(intf)

            staticRoutes = erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["staticRoutes"]
            for route in staticRoutes:
              prefix = StaticRoutes()
              prefix.Prefix = route["prefix"]
              prefix.NextHop = route["nextHop"]
              prefix.Name = route["name"]
              prefix.VRF = route["srvrf"]
              mySC.StaticRoutes.append(prefix)

            prefixList = erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["prefixLists"]
            for name in prefixList:
              pl = PrefixLists()
              pl.Name = name["prefixListName"]
              pllist = []
              pllist = name["seqNums"]
              plName = []
              for seq in pllist:
                plname = PLName()
                plname.SeqNum = seq.seqNum
                plname.PermitDeny = seq.permitDeny
                plname.Prefix = seq.prefix
                plname.PrefixLength = seq.prefixLength
                plname.MaskLength = seq.maskLength
                plName.append(plname)
              pl.PLName = plName
              mySC.PrefixLists.append(pl)

            peerGroups = erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["peerGroups"]
            for name in peerGroups:
              pg = PeerGroups()
              pg.PeerGroupName = name["peerGroupName"]
              pg.Redis = name["bgpOptions"]["redistributeRoutes"]
              pg.OriginateDefault = name["bgpOptions"]["ospfDefaultInformationOriginate"]
              pg.BGPOriginateDefault = name["bgpOptions"]["bgpDefaultInformationOriginate"]
              pg.RedistVRF = name["bgpOptions"]["redistributionVrf"]
              pg.Description = name["description"]
              pg.LocalAS = name["asnSettings"]["localAs"]
              pg.NextHopSelf = name["bgpOptions"]["nextHopSelf"]
              pg.BFD = name["bgpOptions"]["bfd"]
              pg.eBGPMultiHopTTL = name["bgpOptions"]["eBgpMultiHopTtl"]
              pg.MaxAcceptedRoutes = name["bgpOptions"]["maximumAcceptedRoutes"]
              eBgcoreneighbors = []
              Neighbors = name["eBgcoreneighbors"]
              for neighbor in Neighbors:
                details = eBGcoreneighbors()
                details.NeighborIp = neighbor["neighborIp"]
                details.PeerASN = neighbor["peerAsn"]
                details.Vrf = neighbor["vrf"]
                eBgcoreneighbors.append(details)
              pg.eBGcoreneighbors = eBgcoreneighbors

              aggregateRoutes = []
              aggregates = name["aggregateRoutes"]
              for route in aggregates:
                details = Aggregates()
                details.Route = route["aggregateRoute"]
                aggregateRoutes.append(details)
              pg.Aggregates = aggregateRoutes

              routeMapIn = name["routeMapIn"]
              rmIn = []
              for seq in routeMapIn:
                rmi = RouteMapIn()
                rmi.SeqNum = seq.seqNum
                rmi.PermitDeny = seq.permitDeny
                rmi.PrefixListIn = seq.prefixList
                rmi.MatchCommunity = seq.matchCommunity
                rmi.SetCommunity = seq.setCommunity
                rmi.LocalPref = seq.localPref
                rmi.PrependRepeat = seq.asPathPrependRepeat
                rmIn.append(rmi)
              pg.RouteMapIn = rmIn

              routeMapOut = name["routeMapOut"]
              rmOut = []
              for seq in routeMapOut:
                rmo = RouteMapOut()
                rmo.SeqNum = seq.seqNum
                rmo.PermitDeny = seq.permitDeny
                rmo.PrefixListOut = seq.prefixList
                rmo.MatchCommunity = seq.matchCommunity
                rmo.SetCommunity = seq.setCommunity
                rmo.PrependRepeat = seq.asPathPrependRepeat
                rmOut.append(rmo)
              pg.RouteMapOut = rmOut

              edgeRedistRouteMap = name["RedistributionRouteMap"]
              reDistrm = []
              for seq in edgeRedistRouteMap:
                ReDistrm = ReDistRouteMap()
                ReDistrm.SeqNum = seq.ReDistseqnum
                ReDistrm.PermitDeny = seq.ReDistpermitDeny
                ReDistrm.PrefixList = seq.ReDistprefixList
                ReDistrm.MatchCommunity = seq.ReDistmatchCommunity
                ReDistrm.SetTag = seq.ReDistsetTag
                reDistrm.append(ReDistrm)
              pg.ReDistRouteMap = reDistrm
              mySC.PeerGroups.append(pg)

            externalInterfaces = erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["interfaces"]
            if externalInterfaces:
              for intf in externalInterfaces:
                intfName = intf.get("extinterfaceName")
                details = ExternalInterfaces()
                details.InterfaceName = intfName
                # check if sub interface notation is used
                details.VlanID = ""
                splitlist = []
                issubint = intfName.find(".")
                # separate interface name from sub interface and extract vlan id
                if issubint != -1:
                  splitlist = intfName.split(".")
                  vlan = ''.join(filter(str.isnumeric, splitlist[1]))
                  details.VlanID = vlan
                # strip subinterface part of input from interface name
                  details.InterfaceName = splitlist[0]
                details.Description = intf.get("extdescription")
                details.MTU = intf.get("extmtu")
                details.Speed = intf.get("extspeed")
                details.Mask = intf.get("extsubnetMask")
                details.IPAddress = intf.get("extipAddress")
                details.Vrf = intf.get("extvrf")
                details.Ospf = intf.get("extospf")
                mySC.ExternalInterfaces.append(details)

            for key in asnBGPPeerDict :
              scList = asnBGPPeerDict.get(key)
              peerGroup = BGPPeerGroup()
              vpnPeerGroup = BGPPeerGroup()
              vpnPeerGroup.EVPN  = True
              peerGroup.Name = "RR"
              vpnPeerGroup.Name = "RR"
              peerGroup.NeighborASN = key
              vpnPeerGroup.NeighborASN = key
              neighborLoopbacks = []
              neighborIntfs = []
              for sc in scList :
                bgpPeerIntf = NeighborIntf()
                evpnPeerIntf = NeighborIntf()
                evpnPeerIntf.Host = sc.Hostname
                bgpPeerIntf.Host = sc.Hostname
                bgpPeerIntf.Port = sc.Interfaces[0].Port
                evpnPeerIntf.Port = "Loopback0"
                bgpPeerIntf.IPAddress = sc.Interfaces[0].IPAddress
                evpnPeerIntf.IPAddress = sc.Loopback0IP
                neighborIntfs.append(bgpPeerIntf)
                neighborLoopbacks.append(evpnPeerIntf)
              peerGroup.NeighborIntfs = neighborIntfs
              vpnPeerGroup.NeighborIntfs = neighborLoopbacks
              mySC.BGPPeerGroups.append(peerGroup)
              mySC.BGPPeerGroups.append(vpnPeerGroup)

            return mlagEnabled

          def config_core():
            core2rrInterface = networksInputs["pod"]["coreRouters"].resolve()["coreLinkDetails"]["rRs"]
            if core2rrInterface:
              for intf in myDevice.getInterfaces():
                intfName = intf.name
                val = core2rrInterface.resolve(intfName, strict=True)
                if not val:
                  continue
                peer_device, peer_interface = intf.getPeerInfo()
                intf = InterfaceConfig()
                intf.Port = intfName
                intf.NeighborHostname = deviceIDHostnameDict[peer_device.id]
                intf.NeighborPort = peer_interface.name
                neighborDeviceID = peer_device.id
                neighborNodeNum = deviceIDNodeNumDict.get(neighborDeviceID)
                assert neighborNodeNum, "rr neighbor missing: %s" % neighborDeviceID
                intf.Description = val["corerrDetails"]["description"]
                intf.IPAddress = val["corerrDetails"]["corerripAddress"]
                intf.Mask = val["corerrDetails"]["corerrsubnetMask"]
                intf.Speed = val["corerrDetails"]["corerrspeed"]
                intf.MTU = val["corerrDetails"]["corerrmtu"]
                mySC.Interfaces.append(intf)
                neighborSC = deviceIDSwitchConfigDict[neighborDeviceID]
                neighborIntf = InterfaceConfig()
                neighborIntf.Port = intf.NeighborPort
                neighborIntf.NeighborPort = intf.Port
                neighborIntf.IPNetwork = intf.IPNetwork
                neighborSC.Interfaces.append(neighborIntf)
                scList = asnBGPPeerDict.get(neighborSC.ASN, [])
                scList.append(neighborSC)
                asnBGPPeerDict[neighborSC.ASN] = scList

            core2erLink = networksInputs["pod"]["coreRouters"].resolve()["coreLinkDetails"]["coreneighbor"]
            if core2erLink :
              for intf in myDevice.getInterfaces():
                intfName = intf.name
                val = core2erLink.resolve(intfName, strict=True)
                if val:
                  peer_device, peer_interface = intf.getPeerInfo()
                  intf = InterfaceConfig()
                  intf.Port = intfName
                  intf.NeighborHostname = deviceIDHostnameDict[peer_device.id]
                  intf.NeighborPort = peer_interface.name
                  intf.Description = val["coreneighborDetails"]["description"]
                  intf.IPAddress = val["coreneighborDetails"]["coreipAddress"]
                  intf.Mask = val["coreneighborDetails"]["coresubnetMask"]
                  intf.Speed = val["coreneighborDetails"]["corespeed"]
                  neighborDeviceID = peer_device.id
                  neighborNodeNum = deviceIDNodeNumDict.get(neighborDeviceID)
                  assert neighborNodeNum, "core neighbor missing: %s" % neighborDeviceID
                  mySC.Interfaces.append(intf)

            corestaticRoutes = networksInputs["pod"]["coreRouters"].resolve()["coreLinkDetails"]["corestaticRoutes"]
            for route in corestaticRoutes:
              prefix = StaticRoutes()
              prefix.Prefix = route["coreprefix"]
              prefix.NextHop = route["corenextHop"]
              prefix.Name = route["corename"]
              mySC.StaticRoutes.append(prefix)

            coreprefixList = networksInputs["pod"]["coreRouters"].resolve()["coreLinkDetails"]["coreprefixLists"]
            for name in coreprefixList:
              pl = PrefixLists()
              pl.Name = name["coreprefixListName"]
              pllist = []
              pllist = name["coreseqNums"]
              plName = []
              for seq in pllist:
                plname = PLName()
                plname.SeqNum = seq.coreseqNum
                plname.PermitDeny = seq.corepermitDeny
                plname.Prefix = seq.coreprefix
                plname.PrefixLength = seq.corematch
                plname.MaskLength = seq.coremaskLength
                plName.append(plname)
              pl.PLName = plName
              mySC.PrefixLists.append(pl)

            corepeerGroups = networksInputs["pod"]["coreRouters"].resolve()["coreLinkDetails"]["corepeerGroups"]
            for name in corepeerGroups:
              pg = PeerGroups()
              pg.PeerGroupName = name["corepeerGroupName"]
              pg.Redis = name["corebgpoptions"]["coreredistributeRoutes"]
              pg.OriginateDefault = name["corebgpoptions"]["coreospfDefaultInformationOriginate"]
              pg.BGPOriginateDefault = name["corebgpoptions"]["corebgpDefaultInformationOriginate"]
              pg.Description = name["coredescription"]
              pg.LocalAS = name["coreasnSettings"]["corelocalAs"]
              pg.NextHopSelf = name["corebgpoptions"]["corenextHopSelf"]
              pg.BFD = name["corebgpoptions"]["corebfd"]
              pg.eBGPMultiHopTTL = name["corebgpoptions"]["coreeBgpMultiHopTtl"]
              pg.MaxAcceptedRoutes = name["corebgpoptions"]["coremaximumAcceptedRoutes"]
              eBgcoreneighbors = []
              Neighbors = name["coreeBgpNeighbors"]
              for neighbor in Neighbors:
                details = eBGcoreneighbors()
                details.NeighborIp = neighbor["coreneighborIp"]
                details.PeerASN = neighbor["corepeerAsn"]
                details.Vrf = neighbor["corevrf"]
                eBgcoreneighbors.append(details)
              pg.eBGcoreneighbors = eBgcoreneighbors

              aggregateRoutes = []
              aggregates = name["coreaggregateRoutes"]
              for route in aggregates:
                details = Aggregates()
                details.Route = route["coreaggregateRoute"]
                aggregateRoutes.append(details)
              pg.Aggregates = aggregateRoutes

              routeMapIn = name["corerouteMapIn"]
              rmIn = []
              for seq in routeMapIn:
                rmi = RouteMapIn()
                rmi.SeqNum = seq.corermiseqNum
                rmi.PermitDeny = seq.corermipermitDeny
                rmi.PrefixListIn = seq.corermiprefixList
                rmi.MatchCommunity = seq.corermimatchCommunity
                rmi.SetCommunity = seq.corermisetCommunity
                rmi.LocalPref = seq.corermilocalPref
                rmi.PrependRepeat = seq.corermiasPathPrependRepeat
                rmIn.append(rmi)
              pg.RouteMapIn = rmIn

              routeMapOut = name["corerouteMapOut"]
              rmOut = []
              for seq in routeMapOut:
                rmo = RouteMapOut()
                rmo.SeqNum = seq.corermoseqNum
                rmo.PermitDeny = seq.corermopermitDeny
                rmo.PrefixListOut = seq.corermoprefixList
                rmo.MatchCommunity = seq.corermomatchCommunity
                rmo.SetCommunity = seq.corermosetCommunity
                rmo.PrependRepeat = seq.corermoasPathPrependRepeat
                rmOut.append(rmo)
              pg.RouteMapOut = rmOut

              coreRedistRouteMap = name["coreRedistributionRouteMap"]
              reDistrm = []
              for seq in coreRedistRouteMap:
                ReDistrm = ReDistRouteMap()
                ReDistrm.SeqNum = seq.coreReDistseqNum
                ReDistrm.PermitDeny = seq.coreReDistpermitDeny
                ReDistrm.PrefixList = seq.coreReDistprefixListPolicy
                ReDistrm.MatchCommunity = seq.coreReDistmatchCommunity
                ReDistrm.SetTag = seq.coreReDistsetTag
                reDistrm.append(ReDistrm)
              pg.ReDistRouteMap = reDistrm
              mySC.PeerGroups.append(pg)

            coreexternalInterfaces = networksInputs["pod"]["coreRouters"].resolve()["coreLinkDetails"]["interfaces"]
            if coreexternalInterfaces:
              for intf in coreexternalInterfaces:
                intfName = intf.get("coreextinterfaceName")
                details = ExternalInterfaces()
                details.InterfaceName = intfName
                # check if sub interface notation is used
                details.VlanID = ""
                splitlist = []
                issubint = intfName.find(".")
                # separate interface name from sub interface and extract vlan id
                if issubint != -1:
                  splitlist = intfName.split(".")
                  vlan = ''.join(filter(str.isnumeric, splitlist[1]))
                  details.VlanID = vlan
                # strip subinterface part of input from interface name
                  details.InterfaceName = splitlist[0]
                details.Description = intf.get("coreextdescription")
                details.MTU = intf.get("coreextmtu")
                details.Speed = intf.get("coreextspeed")
                details.Mask = intf.get("coreextsubnetMask")
                details.IPAddress = intf.get("coreextipAddress")
                details.Vrf = intf.get("coreextvrf")
                details.Ospf = intf.get("coreextospf")
                mySC.ExternalInterfaces.append(details)

            for key in asnBGPPeerDict :
              scList = asnBGPPeerDict.get(key)
              peerGroup = BGPPeerGroup()
              vpnPeerGroup = BGPPeerGroup()
              vpnPeerGroup.EVPN  = True
              peerGroup.Name = "RR"
              vpnPeerGroup.Name = "RR"
              peerGroup.NeighborASN = key
              vpnPeerGroup.NeighborASN = key
              neighborLoopbacks = []
              neighborIntfs = []
              for sc in scList :
                bgpPeerIntf  = NeighborIntf()
                evpnPeerIntf = NeighborIntf()
                evpnPeerIntf.Host = sc.Hostname
                bgpPeerIntf.Host = sc.Hostname
                bgpPeerIntf.Port = sc.Interfaces[0].Port
                evpnPeerIntf.Port = "Loopback0"
                bgpPeerIntf.IPAddress = sc.Interfaces[0].IPAddress
                evpnPeerIntf.IPAddress = sc.Loopback0IP
                neighborIntfs.append(bgpPeerIntf)
                neighborLoopbacks.append(evpnPeerIntf)
              peerGroup.NeighborIntfs = neighborIntfs
              vpnPeerGroup.NeighborIntfs = neighborLoopbacks
              mySC.BGPPeerGroups.append(peerGroup)
              mySC.BGPPeerGroups.append(vpnPeerGroup)

          if not pods:
            return
          networksInputs = pods.resolve()
          igp = networksInputs["pod"]["igp"]
          if igp != "None" and igp != "OSPF" and igp != "ISIS":
            assert False, "IGP '{}' is not supported".format(igp)
          redisConnected = False
          redCon = networksInputs["pod"]["redistributeConnected"]
          if redCon == "Enabled":
            redisConnected = True
          redisStatic = False
          redStat = networksInputs["pod"]["redistributeStatic"]
          if redStat == "Enabled":
            redisStatic = True
          vlans = []
          vxlan = False
          evpnEnabled = False
          evpnVxlan = networksInputs["pod"]["commonBGPConfig"]["evpnAndVxlan"]
          if evpnVxlan:
            evpnEnabled = True
            vxlan = True
          lacpmode = networksInputs["pod"]["commonMlagConfig"]["lacpMode"]
          erDomains = networksInputs["pod"]["erDomains"].resolve()

          for key in deviceIDSwitchConfigDict:
            sc = deviceIDSwitchConfigDict[key]
            tvsr = tspb.TagValueSearchRequest(label=lb0Label, workspace_id=ctx.studio.workspaceId, topology_studio_request=True)
            for tag in tsclient.GetTagValueSuggestions(tvsr).tags:
              query = '{}:\"{}\" AND device:{}'.format(tag.label, tag.value, key)
              tagmr = tspb.TagMatchRequestV2(query=query, workspace_id=ctx.studio.workspaceId, topology_studio_request=True)
              tagmresp =  tsclient.GetTagMatchesV2(tagmr)
              if len(tagmresp.matches) > 0:
                sc.Loopback0IP = tag.value

          for key in deviceIDSwitchConfigDict:
            sc = deviceIDSwitchConfigDict[key]
            sc.ASN = networksInputs["pod"]["commonBGPConfig"]["globalAS"]

          for key in deviceIDSwitchConfigDict:
            sc = deviceIDSwitchConfigDict[key]
            tvsr = tspb.TagValueSearchRequest(label=asLabel, workspace_id=ctx.studio.workspaceId, topology_studio_request=True)
            for tag in tsclient.GetTagValueSuggestions(tvsr).tags:
              query = '{}:\"{}\" AND device:{}'.format(tag.label, tag.value, key)
              tagmr = tspb.TagMatchRequestV2(query=query, workspace_id=ctx.studio.workspaceId, topology_studio_request=True)
              tagmresp =  tsclient.GetTagMatchesV2(tagmr)
              if len(tagmresp.matches) > 0:
                sc.ASN = tag.value

          for key in deviceIDSwitchConfigDict:
            sc = deviceIDSwitchConfigDict[key]
            if sc.Role == "er":
              if vxlan:
                sc.LogicalVTEP = erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["loopback1Address"]

          rrs = networksInputs["pod"]["rrs"].resolve()
          rrInterface = rrs["rrInterfaceParams"]["rrDownlink"]
          mySC = deviceIDSwitchConfigDict[myDeviceID]
          rrBGPDynamicNeighbors = "Yes"
          asnBGPPeerDict = {}
          mySCList = []
          if myRoleRR:
            config_rr()
          if myRoleER:
            mlagEnabled = config_er()
          if myRoleCore:
            config_core()

          isisNet = get_isis_addr(49, 1, mySC.Loopback0IP)
          internalVlan = networksInputs["pod"]["commonMlagConfig"]["internalVlan"]
          mlagPortChannelId = networksInputs["pod"]["commonMlagConfig"]["mlagPortChannelId"]
          virtualRouterMac = networksInputs["pod"]["commonMlagConfig"]["virtualRouterMac"]
          if mySC.ASN:
            set_bgp_tags(mySC.ASN)
          %>
          %if evpnEnabled:
          service routing protocols model multi-agent
          %endif
          !
          %for intf in mySC.Interfaces:
          %  if  intf.Port != "0":
          %  if  intf.Port != "1":
          %  if  intf.Port != "2":
          %  if  intf.Port != "3":
          interface ${intf.Port}
          %    if intf.Description:
            description ${intf.Description}
          %    endif
          %    if intf.MTU:
            mtu ${intf.MTU}
          %    elif mySC.Model not in ("vEOS", "vEOS-lab", "cEOSLab"):
            mtu 9214
          %    endif
          %    if intf.Speed:
            speed ${intf.Speed}
          %    endif
            no switchport
            ip address ${intf.IPAddress}/${intf.Mask}
          %    if igp == 'OSPF':
            ip ospf network point-to-point
            ip ospf area 0
          %      if ospfAuthKey:
            ip ospf authentication message-digest
            ip ospf message-digest-key 1 md5 7 ${ospfAuthKey}
          %      endif
          %    elif igp == 'ISIS':
            isis enable 1
            isis network point-to-point
            !
          %    endif
          !
          %  endif
          %  endif
          %  endif
          %  endif
          %endfor
          %if myRoleER or myRoleCore or myRoleRR:
          ${igpConfig()}
          %endif
          %if myRoleER:
            %if mlagEnabled:
          ${mlagConfig()}
            %endif
          ${eriBGPConfig()}
          %endif
          !
          %if myRoleER or myRoleCore:
          ${StaticRouteConfig()}
          ${PrefixListConfig()}
          ${RouteMapConfig()}
          ${eBGcoreneighborsConfig()}
          ${externalInterfacesConfig()}
          %endif
          %if myRoleRR:
          ${rriBGPConfig()}
          %endif
          <%def name="mlagConfig()">
          no spanning-tree vlan-id ${internalVlan}
          %for mlag in mySC.MlagMembers.Interfaces:
          interface ${mlag.Port}
          % if mlag.Description:
            description ${mlag.Description}
          %  endif
          % if mlag.Speed:
            speed ${mlag.Speed}
          %  endif
          % if lacpmode == "On":
            channel-group ${mlagPortChannelId} mode on
          %  else:
            channel-group ${mlagPortChannelId} mode active
          %  endif
          !
          %endfor
          interface Port-Channel ${mlagPortChannelId}
            description MLAG peer link
            switchport
            switchport mode trunk
            switchport trunk group MLAG-PEER
          !
          interface Vlan ${internalVlan}
            no autostate
            ip address ${mySC.MlagIPAddr}/${mySC.MlagNetmask}
          %if mySC.Model != "vEOS" and mySC.Model != "vEOS-lab" and mySC.Model != "cEOSLab":
            mtu 9214
          %endif
          %if igp == 'OSPF':
            ip ospf network point-to-point
            ip ospf area 0
          %elif igp == 'ISIS':
            isis enable 1
            isis network point-to-point
            !
          %endif
          !
          vlan ${internalVlan}
            name MLAG-PEER-VLAN
            trunk group MLAG-PEER
          !
          mlag configuration
            domain-id MLAG
            local-interface Vlan${internalVlan}
            peer-address ${mySC.MlagIPPeerAddr}
            peer-link Port-Channel${mlagPortChannelId}
            reload-delay mlag 300
            reload-delay non-mlag 360
          !
          </%def>
          <%def name="igpConfig()">
          %if mySC.Loopback0IP:
          interface Loopback0
            description Router ID
            ip address ${mySC.Loopback0IP}/32
          %  if igp == 'OSPF':
            ip ospf area 0
          %  elif igp == 'ISIS':
            !
            isis enable 1
            isis passive
            !
          %  endif
          !
          %endif
          ip routing
          !
          %if igp == 'OSPF':
          router ospf 1
          %  if mySC.Loopback0IP:
            router-id ${mySC.Loopback0IP}
          %  endif
            bfd default
          %  if redisConnected:
            redistribute connected
          %  endif
          %  if redisStatic:
            redistribute static
          %  endif
          %elif igp == 'ISIS':
          %  if isisNet != "49.0001.000...00":
          router isis 1
             net ${isisNet}
             is-type level-2
             advertise passive-only
          %    if redisConnected:
               redistribute connected
          %    endif
          %    if redisStatic:
               redistribute static
          %    endif
             address-family ipv4 unicast
             bfd all-interfaces
             !
          !
          %  endif
          %endif
          </%def>
          <%def name="eriBGPConfig()">
          %if vxlan:
          interface vxlan 1
            vxlan source-interface Loopback1
            vxlan udp-port 4789
          %  if mlagEnabled:
            vxlan virtual-router encapsulation mac-address mlag-system-id
          %  endif
          !
          %  if mySC.LogicalVTEP:
          interface Loopback1
            description VXLAN Tunnel Source
            ip address ${mySC.LogicalVTEP}/32
          %    if igp == 'OSPF':
            ip ospf area 0
          %    elif igp == 'ISIS':
            !
            isis enable 1
            isis passive
            !
          %    endif
          !
          %  endif
          %endif
          !
          %if evpnEnabled:
          %  if mySC.ASN:
          router bgp ${mySC.ASN}
          %    if mySC.Loopback0IP:
            router-id ${mySC.Loopback0IP}
          %    endif
            maximum-paths 4 ecmp 4
          %    if mySC.Model != "vEOS" and mySC.Model != "vEOS-lab" and mySC.Model != "cEOSLab":
            update wait-for-convergence
            update wait-install
          %    endif
          %    for peerGroup in mySC.BGPPeerGroups:
          %      if peerGroup.EVPN:
          %        if evpnEnabled:
            neighbor ${peerGroup.Name} peer group
            neighbor ${peerGroup.Name} remote-as ${peerGroup.NeighborASN }
            neighbor ${peerGroup.Name} update-source Loopback0
            neighbor ${peerGroup.Name} send-community extended
            neighbor ${peerGroup.Name} maximum-routes  0 warning-limit 12000
            !
          %        endif
          %      endif
          %    endfor
          %    for peerGroup in mySC.BGPPeerGroups:
          %      for intf in peerGroup.NeighborIntfs:
          %        if peerGroup.EVPN:
            neighbor ${intf.IPAddress} peer group ${peerGroup.Name}
            neighbor ${intf.IPAddress} description Route-Reflector
          %        endif
          %      endfor
          %    endfor
          %    if evpnEnabled:
            address-family evpn
          %      for peerGroup in mySC.BGPPeerGroups:
          %        if peerGroup.EVPN:
              neighbor ${peerGroup.Name} activate
            !
          %        endif
          %      endfor
            address-family ipv4
          %      for peerGroup in mySC.BGPPeerGroups:
          %        if peerGroup.EVPN:
              no neighbor ${peerGroup.Name} activate
            !
          %        endif
          %      endfor
          %    endif
          %  endif
          %endif
          </%def>
          <%def name="rriBGPConfig()">
          !
          %if evpnEnabled:
          %  if rrBGPDynamicNeighbors:
          peer-filter AS-Range
            10 match as-range 1-65535 result accept
          !
          router bgp ${mySC.ASN}
          %    if mySC.Loopback0IP:
            router-id ${mySC.Loopback0IP}
            bgp cluster-id ${mySC.Loopback0IP}
          %    endif
          %    if mySC.Model != "vEOS" and mySC.Model != "vEOS-lab" and mySC.Model != "cEOSLab":
            update wait-for-convergence
            update wait-install
          %    endif
            bgp log-neighbor-changes
          %    if evpnEnabled:
            neighbor iBGP peer group
            neighbor iBGP send-community extended
            neighbor iBGP maximum-routes 0 warning-limit 12000
            neighbor iBGP update-source Loopback0
            neighbor iBGP route-reflector-client
            bgp route-reflector preserve-attributes always
          %    endif
          %    if evpnEnabled:
            bgp listen range 0.0.0.0/0 peer-group iBGP peer-filter AS-Range
          %    endif
          %    if evpnEnabled:
            address-family evpn
              neighbor iBGP activate
              next-hop resolution disabled
            !
            address-family ipv4
              no neighbor iBGP activate
            !
          %    endif
          %  else:
          router bgp ${mySC.ASN}
            router-id ${mySC.Loopback0IP}
          %    if  evpnEnabled:
            neighbor iBGP peer group
            neighbor iBGP route-reflector-client
            neighbor iBGP update-source Loopback0
            neighbor iBGP send-community extended
            neighbor iBGP maximum-routes 0 warning-limit 12000
          %    endif
          %    for peerGroup in mySC.BGPPeerGroups:
          %      if peerGroup.EVPN:
          %        if evpnEnabled:
            neighbor iBGP remote-as ${peerGroup.NeighborASN}
          %          for intf in peerGroup.NeighborIntfs:
            neighbor ${intf.IPAddress} peer group iBGP
          %          endfor
          %        endif
          %      endif
          %    endfor
          %    if evpnEnabled:
            address-family evpn
              neighbor iBGP activate
                  next-hop resolution disabled
            !
            address-family ipv4
              no neighbor iBGP activate
            !
          %    endif
          %  endif
          %endif
          !
          </%def>
          <%def name="StaticRouteConfig()">
          % for prefix in mySC.StaticRoutes:
          %   if prefix.VRF:
          vrf instance ${prefix.VRF}
          ip routing vrf ${prefix.VRF}
          %     if prefix.Name:
          ip route vrf ${prefix.VRF} ${prefix.Prefix} ${prefix.NextHop} name ${prefix.Name}
          %     else:
          ip route vrf ${prefix.VRF} ${prefix.Prefix} ${prefix.NextHop}
          %     endif
          %   else:
          %     if prefix.Name:
          ip route ${prefix.Prefix} ${prefix.NextHop} name ${prefix.Name}
          %     else:
          ip route ${prefix.Prefix} ${prefix.NextHop}
          %     endif
          %   endif
          %endfor
          !
          </%def>
          <%def name="PrefixListConfig()">
          %for name in mySC.PrefixLists:
          ip prefix-list ${name.Name}
          %  for seq in name.PLName:
          %    if seq.PrefixLength != "exact-route":
            seq ${seq.SeqNum} ${seq.PermitDeny} ${seq.Prefix} ${seq.PrefixLength} ${seq.MaskLength}
          %    else:
            seq ${seq.SeqNum} ${seq.PermitDeny} ${seq.Prefix}
          %    endif
          %  endfor
          !
          %endfor
          !
          </%def>
          <%def name="RouteMapConfig()">
          %for peergroup in mySC.PeerGroups:
          %  for routemapi in peergroup.RouteMapIn:
          route-map ${peergroup.PeerGroupName}-in ${routemapi.PermitDeny} ${routemapi.SeqNum}
          %    if routemapi.PrefixListIn:
            match ip address prefix-list ${routemapi.PrefixListIn}
          %    endif
          %    if routemapi.MatchCommunity:
            match community ${routemapi.MatchCommunity}
          %    endif
          %    if routemapi.SetCommunity:
            set community ${routemapi.SetCommunity}
          %    endif
          %    if routemapi.LocalPref:
            set local-preference ${routemapi.LocalPref}
          %    endif
          %    if routemapi.PrependRepeat:
            set as-path prepend auto repeat ${routemapi.PrependRepeat}
          %    endif
          !
          %  endfor
          %  for routemapo in peergroup.RouteMapOut:
          route-map ${peergroup.PeerGroupName}-out ${routemapo.PermitDeny} ${routemapo.SeqNum}
          %   if routemapo.PrefixListOut:
            match ip address prefix-list ${routemapo.PrefixListOut}
          %   endif
          %   if routemapo.MatchCommunity:
            match community ${routemapo.MatchCommunity}
          %   endif
          %   if routemapo.SetCommunity:
            set community ${routemapo.SetCommunity}
          %   endif
          %   if routemapo.PrependRepeat:
            set as-path prepend auto repeat ${routemapo.PrependRepeat}
          %   endif
          !
          %  endfor
          %  for redistroutemap in peergroup.ReDistRouteMap:
          route-map ReDist-${peergroup.PeerGroupName}-out ${redistroutemap.PermitDeny} ${redistroutemap.SeqNum}
          %   if redistroutemap.PrefixList:
            match ip address prefix-list ${redistroutemap.PrefixList}
          %   endif
          %   if redistroutemap.MatchCommunity:
            match community ${redistroutemap.MatchCommunity}
          %   endif
          %   if redistroutemap.SetTag:
            set tag ${redistroutemap.SetTag}
          %   endif
          !
          %  endfor
          %endfor
          !
          </%def>
          <%def name="eBGcoreneighborsConfig()">
          %if mySC.PeerGroups or mySC.eBGcoreneighbors:

          <% processId = 2 %>
          %  for peer_group in mySC.PeerGroups:
          <% redistribute = False %>
          <% originateDefault = False %>
          router bgp ${mySC.ASN}
          %    if peer_group.Description:
            neighbor ${peer_group.PeerGroupName} description ${peer_group.Description}
          %    endif
          %    if myRoleRR:
            neighbor ${peer_group.PeerGroupName} route-reflector-client
          %    endif
            neighbor ${peer_group.PeerGroupName} peer group
          %    if peer_group.PeerASN:
            neighbor ${peer_group.PeerGroupName} remote-as ${peer_group.PeerASN}
          %    endif
          %    if peer_group.LocalAS:
            neighbor ${peer_group.PeerGroupName} local-as ${peer_group.LocalAS} no-prepend replace-as
          %    endif
          %    if peer_group.NextHopSelf:
            neighbor ${peer_group.PeerGroupName} next-hop-self
          %    endif
          %    if peer_group.BFD:
            neighbor ${peer_group.PeerGroupName}  bfd
          %    endif
          %    if peer_group.eBGPMultiHopTTL:
            neighbor ${peer_group.PeerGroupName} ebgp-multihop ${peer_group.eBGPMultiHopTTL}
          %    endif
            neighbor ${peer_group.PeerGroupName} send-community
          %    if peer_group.MaxAcceptedRoutes:
            neighbor ${peer_group.PeerGroupName} maximum-accepted-routes ${peer_group.MaxAcceptedRoutes}
          %    endif
          %    if peer_group.RouteMapIn:
            neighbor ${peer_group.PeerGroupName} route-map ${peer_group.PeerGroupName}-in  in
          %    endif
          %    if peer_group.RouteMapOut:
            neighbor ${peer_group.PeerGroupName} route-map ${peer_group.PeerGroupName}-out  out
          %    endif
          %    if peer_group.BGPOriginateDefault == "Enabled":
            neighbor ${peer_group.PeerGroupName} default-originate
          %    endif
            !
          %    if peer_group.eBGcoreneighbors:
            address-family ipv4
            neighbor ${peer_group.PeerGroupName} activate
            !
          %      for neighbor in peer_group.eBGcoreneighbors:
          %        if neighbor.Vrf:
            vrf ${neighbor.Vrf}
              neighbor ${neighbor.NeighborIp} peer group ${peer_group.PeerGroupName}
          %          if neighbor.PeerASN:
              neighbor ${neighbor.NeighborIp} remote-as ${neighbor.PeerASN}
          %          endif
          %        else:
            neighbor ${neighbor.NeighborIp} peer group ${peer_group.PeerGroupName}
          %          if neighbor.PeerASN:
            neighbor ${neighbor.NeighborIp} remote-as ${neighbor.PeerASN}
          %          endif
          %        endif
          %      endfor
          %    endif
          %    if peer_group.Aggregates:
          %      for route in peer_group.Aggregates:
            aggregate-address ${route.Route} summary-only
          %      endfor
            !
          %    endif
          %    if peer_group.Redis:
          <% redistribute = True %>
          %    endif
          %    if peer_group.OriginateDefault != "Disabled":
          <% originateDefault = True %>
          %    endif
          %    if redistribute:
          %      if peer_group.RedistVRF:
            vrf ${peer_group.RedistVRF}
              redistribute connected
              redistribute static
              redistribute ospf match internal
              redistribute ospf match external
              redistribute ospf match nssa-external
              !
          %      elif igp == 'OSPF':
            redistribute ospf match internal
            redistribute ospf match external
            redistribute ospf match nssa-external
            redistribute connected
            redistribute static
            !
          %      elif igp == 'ISIS':
            redistribute isis level-2
            redistribute connected
            redistribute static
            !
          %      else:
            redistribute connected
            redistribute static
            !
          %      endif
          %      if igp == 'OSPF':
          %        if peer_group.RedistVRF:
          router ospf ${processId} vrf ${peer_group.RedistVRF}
            router-id ${mySC.Loopback0IP}
          %          if peer_group.ReDistRouteMap:
            redistribute bgp route-map ReDist-${peer_group.PeerGroupName}-out
            redistribute connected route-map ReDist-${peer_group.PeerGroupName}-out
            redistribute static route-map ReDist-${peer_group.PeerGroupName}-out
            !
          %          else:
            redistribute bgp
            !
          %          endif
          %        else:
          router ospf 1
            router-id ${mySC.Loopback0IP}
          %          if peer_group.ReDistRouteMap:
            redistribute bgp route-map ReDist-${peer_group.PeerGroupName}-out
            redistribute connected route-map ReDist-${peer_group.PeerGroupName}-out
            redistribute static route-map ReDist-${peer_group.PeerGroupName}-out
            !
          %          else:
            redistribute bgp
            !
          %          endif
          %        endif
          %      elif igp == 'ISIS':
          router isis 1
          %        if peer_group.ReDistRouteMap:
            redistribute bgp route-map ReDist-${peer_group.PeerGroupName}-out
            redistribute connected route-map ReDist-${peer_group.PeerGroupName}-out
            redistribute static route-map ReDist-${peer_group.PeerGroupName}-out
            !
          %        else:
            redistribute bgp
            !
          %        endif
          %      endif
          %    endif
          %    if originateDefault:
          %      if peer_group.RedistVRF:
          router ospf ${processId} vrf ${peer_group.RedistVRF}
          <% processId = processId + 1 %>
            router-id ${mySC.Loopback0IP}
          %        if peer_group.OriginateDefault == "Enabled":
            default-information originate
          %        elif peer_group.OriginateDefault == "Always-Send":
            default-information originate always
          %        endif
          %      else:
          router ospf 1
          %        if peer_group.OriginateDefault == "Enabled":
            default-information originate
          %        elif peer_group.OriginateDefault == "Always-Send":
            default-information originate always
          %        endif
          %      endif
          !
          %    endif
          <% processId = processId + 1 %>
          %  endfor
          %endif
          </%def>

          <%def name="externalInterfacesConfig()">
          %for interface in mySC.ExternalInterfaces:
          %    if interface.Vrf:
          vrf instance ${interface.Vrf}
          ip routing vrf ${interface.Vrf}
          %    endif
          interface ${interface.InterfaceName}
            no switchport
          %    if interface.MTU:
            mtu ${interface.MTU}
          %    endif
          %    if interface.Speed:
            speed ${interface.Speed}
          %    endif
          %    if interface.VlanID:
          interface ${interface.InterfaceName}.${interface.VlanID}
            encapsulation dot1q vlan ${interface.VlanID}
          %    endif
          %    if interface.Description:
            description ${interface.Description}
          %    endif
          %    if interface.Vrf:
            vrf ${interface.Vrf}
          %     endif
          %    if interface.IPAddress:
            ip address ${interface.IPAddress}/${interface.Mask}
          %    endif
          %    if interface.Ospf:
            ip ospf network point-to-point
            ip ospf area 0
          %    endif
          !
          !
          % endfor
          </%def>
      input_schema:
        fields:
          values:
            mlagLinkSubnet:
              id: mlagLinkSubnet
              name: mlagLinkSubnet
              label: Subnet of the MLAG Peer Link
              description: The IP Subnet of every MLAG peer link
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: 169.254.0.0/31
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            internalVlan:
              id: internalVlan
              name: internalVlan
              label: VLAN for the MLAG peer link
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: '4094'
                range: null
                static_options: null
                dynamic_options: null
            mlagPortChannelId:
              id: mlagPortChannelId
              name: mlagPortChannelId
              label: MLAG Port-Channel ID
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: '2000'
                range: null
                static_options: null
                dynamic_options: null
            virtualRouterMac:
              id: virtualRouterMac
              name: virtualRouterMac
              label: Virtual Router MAC
              description: The virtual MAC address for other hosts or switches to connect to for redundancy
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: 00:1c:73:00:00:99
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            lacpMode:
              id: lacpMode
              name: lacpMode
              label: LACP Mode
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: Active
                static_options:
                  values:
                    - Active
                    - 'On'
                format: null
                length: null
                pattern: null
                dynamic_options: null
            commonMlagConfig:
              id: commonMlagConfig
              name: commonMlagConfig
              label: Global MLAG Configuration
              description: Configure the network's MLAG format.
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - mlagLinkSubnet
                    - internalVlan
                    - mlagPortChannelId
                    - virtualRouterMac
                    - lacpMode
            rrBGPDynamicNeighbors:
              id: rrBGPDynamicNeighbors
              name: rrBGPDynamicNeighbors
              label: RR BGP Dynamic Neighbors
              description: Only YES is currently supported
              required: false
              type: INPUT_FIELD_TYPE_BOOLEAN
              boolean_props:
                default_value: true
            globalAS:
              id: globalAS
              name: globalAS
              label: ASN
              description: Required for EVPN
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
            evpnAndVxlan:
              id: evpnAndVxlan
              name: evpnAndVxlan
              label: EVPN-VXLAN
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_BOOLEAN
              boolean_props:
                default_value: false
            commonBGPConfig:
              id: commonBGPConfig
              name: commonBGPConfig
              label: Global BGP Settings
              description: Assign an ASN for the network, which is optional unless EVPN-VXLAN is enabled.
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - rrBGPDynamicNeighbors
                    - globalAS
                    - evpnAndVxlan
            rripAddress:
              id: rripAddress
              name: rripAddress
              label: Local IP Address
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: ip
                length: null
                pattern: null
                dynamic_options: null
            rrrrdescription:
              id: rrrrdescription
              name: description
              label: Description
              description: null
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            rrrrspeed:
              id: rrrrspeed
              name: rrspeed
              label: Speed
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            rrsubnetMask:
              id: rrsubnetMask
              name: rrsubnetMask
              label: Local Subnet Mask
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: '31'
                range: null
                static_options: null
                dynamic_options: null
            rrmtu:
              id: rrmtu
              name: rrmtu
              label: MTU
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
            rrNeighborParams:
              id: rrNeighborParams
              name: rrNeighborParams
              label: Neighbor Parameters
              description: null
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - rripAddress
                    - rrrrdescription
                    - rrrrspeed
                    - rrsubnetMask
                    - rrmtu
            rrDownlink:
              id: rrDownlink
              name: rrDownlink
              label: Underlay Connections
              description: Configure neighbor connections for this route reflector.
              required: false
              type: INPUT_FIELD_TYPE_RESOLVER
              resolver_props:
                base_field_id: rrNeighborParams
                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_INTERFACE_TAG
                input_tag_label: interface
                tag_filter_query: null
            rrInterfaceParams:
              id: rrInterfaceParams
              name: rrInterfaceParams
              label: Fabric link Interface Parameters
              description: null
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - rrDownlink
            rrs:
              id: rrs
              name: rrs
              label: Route Reflector Devices
              description: Select and configure route reflector devices, which are used for overlay networks when EVPN-VXLAN is enabled.
              required: false
              type: INPUT_FIELD_TYPE_RESOLVER
              resolver_props:
                base_field_id: rrInterfaceParams
                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_DEVICE_TAG
                input_tag_label: device
                tag_filter_query: 'Role:RR '
            eripAddress:
              id: eripAddress
              name: eripAddress
              label: Local IP Address
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: ip
                length: null
                pattern: null
                dynamic_options: null
            erdescription:
              id: erdescription
              name: description
              label: Description
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            erspeed:
              id: erspeed
              name: erspeed
              label: Speed
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            ersubnetMask:
              id: ersubnetMask
              name: ersubnetMask
              label: Subnet Mask
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: '31'
                range: null
                static_options: null
                dynamic_options: null
            erneighborDetails:
              id: erneighborDetails
              name: erneighborDetails
              label: Neighbor Details
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - eripAddress
                    - erdescription
                    - erspeed
                    - ersubnetMask
            peneighbors:
              id: peneighbors
              name: erneighbors
              label: Underlay Neighbors
              description: Define IGP interface connections to any neighboring edge or core devices.
              required: false
              type: INPUT_FIELD_TYPE_RESOLVER
              resolver_props:
                base_field_id: erneighborDetails
                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_INTERFACE_TAG
                input_tag_label: interface
                tag_filter_query: null
            loopback1Address:
              id: loopback1Address
              name: loopback1Address
              label: Loopback1 Address
              description: Configure a VXLAN VTEP address.
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: ip
                length: null
                pattern: null
                dynamic_options: null
            rrHostname:
              id: rrHostname
              name: rrHostname
              label: Hostname
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            rrlocalIpAddress:
              id: rrlocalIpAddress
              name: rrlocalIpAddress
              label: Local IP Address
              description: Only required when the device is directly connected to the route reflector.
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: ip
                length: null
                pattern: null
                dynamic_options: null
            rrintdescription:
              id: rrintdescription
              name: description
              label: Description
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            rrintspeed:
              id: rrintspeed
              name: rrspeed
              label: Speed
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options:
                  values:
                    - auto
                    - 100full
                    - 100g
                    - 100half
                    - 10full
                    - 10g
                    - 10half
                    - 1g
                    - 200g
                    - 25g
                    - 400g
                    - 40g
                    - 50g
                format: null
                length: null
                pattern: null
                dynamic_options: null
            rrlocalSubnetMask:
              id: rrlocalSubnetMask
              name: localSubnetMask
              label: Local Subnet Mask
              description: Only required when the device is directly connected to the route reflector.
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
            errrmtu:
              id: errrmtu
              name: rrmtu
              label: MTU
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
            rrHostnameGroup:
              id: rrHostnameGroup
              name: rrHostnameGroup
              label: RR Hostname Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - rrHostname
                    - rrlocalIpAddress
                    - rrintdescription
                    - rrintspeed
                    - rrlocalSubnetMask
                    - errrmtu
            rrHostnames:
              id: rrHostnames
              name: rrHostnames
              label: Route Reflector Hostnames
              description: Identify route reflectors so that this device's routes will be advertised to the route reflectors' clients.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: rrHostnameGroup
                key: rrHostname
            staticprefix:
              id: staticprefix
              name: prefix
              label: Prefix
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            staticnextHop:
              id: staticnextHop
              name: nextHop
              label: Next Hop
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: ip
                length: null
                pattern: null
                dynamic_options: null
            staticname:
              id: staticname
              name: name
              label: Name
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            srvrf:
              id: srvrf
              name: srvrf
              label: VRF
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            staticRouteGroup:
              id: staticRouteGroup
              name: staticRouteGroup
              label: Static Route Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - staticprefix
                    - staticnextHop
                    - staticname
                    - srvrf
            staticRoutes:
              id: staticRoutes
              name: staticRoutes
              label: Static Routes
              description: Define prefixes and next hops for static routes.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: staticRouteGroup
                key: staticname
            prefixListsprefixListName:
              id: prefixListsprefixListName
              name: prefixListName
              label: List Name
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            prefixListsSeqprefix:
              id: prefixListsSeqprefix
              name: prefix
              label: Prefix
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            prefixListsSeqprefixLength:
              id: prefixListsSeqprefixLength
              name: prefixLength
              label: Match Rule
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: exact-route
                static_options:
                  values:
                    - eq
                    - ge
                    - le
                    - exact-route
                format: null
                length: null
                pattern: null
                dynamic_options: null
            prefixListsSeqpermitDeny:
              id: prefixListsSeqpermitDeny
              name: permitDeny
              label: Permit Deny
              description: This is an optional field used for reference. The actual permit or deny rule is applied when assigning policy to the routes in or out of a BGP peer group.
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: permit
                static_options:
                  values:
                    - permit
                    - deny
                format: null
                length: null
                pattern: null
                dynamic_options: null
            prefixListsSeqNumber:
              id: prefixListsSeqNumber
              name: seqNum
              label: Sequence Number
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
            prefixListsmaskLength:
              id: prefixListsmaskLength
              name: maskLength
              label: Mask Length
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
            prefixListsSeqNumsvalue:
              id: prefixListsSeqNumsvalue
              name: value
              label: Sequence Number Group
              description: Group of members for Sequence Number
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - prefixListsSeqprefix
                    - prefixListsSeqprefixLength
                    - prefixListsSeqpermitDeny
                    - prefixListsSeqNumber
                    - prefixListsmaskLength
            prefixListsSeqNums:
              id: prefixListsSeqNums
              name: seqNums
              label: Prefix List
              description: Add policies to this prefix list, which can be applied to BGP routes in and out.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: prefixListsSeqNumsvalue
                key: prefixListsSeqNumber
            prefixListsvalue:
              id: prefixListsvalue
              name: value
              label: Prefix Lists Group
              description: Group of members for Prefix Lists
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - prefixListsprefixListName
                    - prefixListsSeqNums
            prefixLists:
              id: prefixLists
              name: prefixLists
              label: Prefix Lists
              description: Set policies for prefixes, which are assigned to BGP peer groups.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: prefixListsvalue
                key: prefixListsprefixListName
            peerGroupName:
              id: peerGroupName
              name: peerGroupName
              label: Peer Group Name
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            peerGroupdescription:
              id: peerGroupdescription
              name: description
              label: Description
              description: Provide a description for this peer group.
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            peerGroupRouteMapIndescription:
              id: peerGroupRouteMapIndescription
              name: description
              label: Description
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            peerGroupRouteMapInpermitDenyg:
              id: peerGroupRouteMapInpermitDenyg
              name: permitDeny
              label: Permit Deny
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: permit
                static_options:
                  values:
                    - permit
                    - deny
                format: null
                length: null
                pattern: null
                dynamic_options: null
            peerGroupRouteMapInprefixList:
              id: peerGroupRouteMapInprefixList
              name: prefixList
              label: Prefix List Policy
              description: Add a policy using its sequence number in the prefix list
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options:
                  values:
                    - '{"fieldId":"prefixListsprefixListName"}'
            peerGroupRouteMapInMatchCommunity:
              id: peerGroupRouteMapInMatchCommunity
              name: matchCommunity
              label: Match Community
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            peerGroupRouteMapInSetCommunity:
              id: peerGroupRouteMapInSetCommunity
              name: setCommunity
              label: Set Community
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            peerGroupRouteMapInLocalPref:
              id: peerGroupRouteMapInLocalPref
              name: localPref
              label: Local Pref
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            peerGroupRouteMapInAsPathPrependRepeat:
              id: peerGroupRouteMapInAsPathPrependRepeat
              name: asPathPrependRepeat
              label: ASN Path Prepend Repeat
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            peerGroupRouteMapInseqNum:
              id: peerGroupRouteMapInseqNum
              name: seqNum
              label: Sequence Number
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
            peerGroupRouteMapInrouteMapInGroup:
              id: peerGroupRouteMapInrouteMapInGroup
              name: routeMapInGroup
              label: Route Map In Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - peerGroupRouteMapIndescription
                    - peerGroupRouteMapInpermitDenyg
                    - peerGroupRouteMapInprefixList
                    - peerGroupRouteMapInMatchCommunity
                    - peerGroupRouteMapInSetCommunity
                    - peerGroupRouteMapInLocalPref
                    - peerGroupRouteMapInAsPathPrependRepeat
                    - peerGroupRouteMapInseqNum
            peerGroupRouteMapIn:
              id: peerGroupRouteMapIn
              name: routeMapIn
              label: Route Map In
              description: Assign policies defined in a prefix list and set the match rules for incoming BGP traffic.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: peerGroupRouteMapInrouteMapInGroup
                key: peerGroupRouteMapInseqNum
            peerGroupRouteMapOutpermitDeny:
              id: peerGroupRouteMapOutpermitDeny
              name: permitDeny
              label: Permit Deny
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: permit
                static_options:
                  values:
                    - permit
                    - deny
                format: null
                length: null
                pattern: null
                dynamic_options: null
            peerGroupRouteMapOutprefixList:
              id: peerGroupRouteMapOutprefixList
              name: prefixList
              label: Prefix List Policy
              description: Add a policy using its sequence number in the prefix list
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options:
                  values:
                    - '{"fieldId":"prefixListsprefixListName"}'
            peerGroupRouteMapOutmatchCommunity:
              id: peerGroupRouteMapOutmatchCommunity
              name: matchCommunity
              label: Match Community
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            peerGroupRouteMapOutsetCommunity:
              id: peerGroupRouteMapOutsetCommunity
              name: setCommunity
              label: Set Community
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            peerGroupRouteMapOutasPathPrependRepeat:
              id: peerGroupRouteMapOutasPathPrependRepeat
              name: asPathPrependRepeat
              label: ASN Path Prepend Repeat
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            peerGroupRouteMapOutdescription:
              id: peerGroupRouteMapOutdescription
              name: description
              label: Description
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            peerGroupRouteMapOutseqNum:
              id: peerGroupRouteMapOutseqNum
              name: seqNum
              label: Sequence Number
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
            peerGroupRouteMapOutGroup:
              id: peerGroupRouteMapOutGroup
              name: routeMapOutGroup
              label: Route Map Out Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - peerGroupRouteMapOutpermitDeny
                    - peerGroupRouteMapOutprefixList
                    - peerGroupRouteMapOutmatchCommunity
                    - peerGroupRouteMapOutsetCommunity
                    - peerGroupRouteMapOutasPathPrependRepeat
                    - peerGroupRouteMapOutdescription
                    - peerGroupRouteMapOutseqNum
            peerGroupRouteMapOut:
              id: peerGroupRouteMapOut
              name: routeMapOut
              label: Route Map Out
              description: Assign policies defined in a prefix list and set the match rules for outgoing BGP traffic.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: peerGroupRouteMapOutGroup
                key: peerGroupRouteMapOutseqNum
            ebgcoreneighborsneighborIp:
              id: ebgcoreneighborsneighborIp
              name: neighborIp
              label: Neighbor IP
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: ip
                length: null
                pattern: null
                dynamic_options: null
            pgvrf:
              id: pgvrf
              name: vrf
              label: VRF
              description: If the peer is in an overlay network, select the VRF created when defining the external interface.
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options:
                  values:
                    - '{"fieldId":"extvrf"}'
            eBgcoreneighborspeerAsn:
              id: eBgcoreneighborspeerAsn
              name: peerAsn
              label: Peer ASN
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
            eBgcoreneighborsGroup:
              id: eBgcoreneighborsGroup
              name: eBgcoreneighborsGroup
              label: eBGP Neighbors Group
              description: Configure the connections between this BGP peer group and any eBGP neighbors.
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - ebgcoreneighborsneighborIp
                    - pgvrf
                    - eBgcoreneighborspeerAsn
            eBgcoreneighbors:
              id: eBgcoreneighbors
              name: eBgcoreneighbors
              label: eBGP Neighbors
              description: Define eBGP neighbors connected to the device's external interfaces.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: eBgcoreneighborsGroup
                key: ebgcoreneighborsneighborIp
            pgaggregateRoute:
              id: pgaggregateRoute
              name: aggregateRoute
              label: Aggregate Route
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            pgaggregateRoutesvalue:
              id: pgaggregateRoutesvalue
              name: value
              label: Aggregate Routes Group
              description: Group of members for Aggregate Routes
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - pgaggregateRoute
            pgaggregateRoutes:
              id: pgaggregateRoutes
              name: aggregateRoutes
              label: Aggregate Routes
              description: Enter an IP address in CIDR notation to create a summary of related routes.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: pgaggregateRoutesvalue
                key: ''
            pglocalAs:
              id: pglocalAs
              name: localAs
              label: Local ASN
              description: If no global ASN has been applied to the network, you can enter a value here to assign an ASN to the device you are configuring.
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
            asnSettings:
              id: asnSettings
              name: asnSettings
              label: ASN Settings
              description: Assign a local ASN to this device or override the network's global ASN by assigning a device ASN.
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - pglocalAs
            peerGroupeBgpMultiHopTtl:
              id: peerGroupeBgpMultiHopTtl
              name: eBgpMultiHopTtl
              label: eBGP Multi-Hop TTL
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            peerGroupmaximumAcceptedRoutes:
              id: peerGroupmaximumAcceptedRoutes
              name: maximumAcceptedRoutes
              label: Maximum Accepted Routes
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            erospfDefaultInformationOriginate:
              id: erospfDefaultInformationOriginate
              name: ospfDefaultInformationOriginate
              label: OSPF Default Information Originate
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: Disabled
                static_options:
                  values:
                    - Disabled
                    - Enabled
                    - Always-Send
                format: null
                length: null
                pattern: null
                dynamic_options: null
            bfd:
              id: bfd
              name: bfd
              label: BFD
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_BOOLEAN
              boolean_props:
                default_value: false
            nextHopSelf:
              id: nextHopSelf
              name: nextHopSelf
              label: Next Hop Self
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_BOOLEAN
              boolean_props:
                default_value: true
            redistributeRoutes:
              id: redistributeRoutes
              name: redistributeRoutes
              label: Redistribute Routes
              description: Enable mutual redistribution BGP and OSPF.
              required: false
              type: INPUT_FIELD_TYPE_BOOLEAN
              boolean_props:
                default_value: false
            redistributionVrf:
              id: redistributionVrf
              name: redistributionVrf
              label: Redistribution VRF
              description: Assign which VRF to redistribute routes and Default Information Originate.
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options:
                  values:
                    - '{"fieldId":"extvrf"}'
            bgpDefaultInformationOriginate:
              id: bgpDefaultInformationOriginate
              name: bgpDefaultInformationOriginate
              label: BGP Default Originate
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: Disabled
                static_options:
                  values:
                    - Disabled
                    - Enabled
                format: null
                length: null
                pattern: null
                dynamic_options: null
            bgpOptions:
              id: bgpOptions
              name: bgpOptions
              label: BGP Configuration
              description: Configure the device's BGP details.
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - peerGroupeBgpMultiHopTtl
                    - peerGroupmaximumAcceptedRoutes
                    - erospfDefaultInformationOriginate
                    - bfd
                    - nextHopSelf
                    - redistributeRoutes
                    - redistributionVrf
                    - bgpDefaultInformationOriginate
            ReDistdescription:
              id: ReDistdescription
              name: ReDistdescription
              label: Description
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            ReDistpermitDeny:
              id: ReDistpermitDeny
              name: ReDistpermitDeny
              label: Permit Deny
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: permit
                static_options:
                  values:
                    - permit
                    - deny
                format: null
                length: null
                pattern: null
                dynamic_options: null
            ReDistprefixList:
              id: ReDistprefixList
              name: ReDistprefixList
              label: Prefix List Policy
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options:
                  values:
                    - '{"fieldId":"prefixListsprefixListName"}'
            ReDistmatchCommunity:
              id: ReDistmatchCommunity
              name: ReDistmatchCommunity
              label: Match Community
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            ReDistsetTag:
              id: ReDistsetTag
              name: ReDistsetTag
              label: Set Tag
              description: Tag number or "auto"
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            ReDistseqnum:
              id: ReDistseqnum
              name: ReDistseqnum
              label: Sequence Number
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
            ReDistRmGroup:
              id: ReDistRmGroup
              name: ReDistRmGroup
              label: ReDist RM Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - ReDistdescription
                    - ReDistpermitDeny
                    - ReDistprefixList
                    - ReDistmatchCommunity
                    - ReDistsetTag
                    - ReDistseqnum
            RedistributionRouteMap:
              id: RedistributionRouteMap
              name: RedistributionRouteMap
              label: Redistribution Route Map
              description: Assign policies defined in a prefix list and set the match rules for redistribution into OSPF.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: ReDistRmGroup
                key: ReDistseqnum
            peerGroup:
              id: peerGroup
              name: peerGroup
              label: Peer Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - peerGroupName
                    - peerGroupdescription
                    - peerGroupRouteMapIn
                    - peerGroupRouteMapOut
                    - eBgcoreneighbors
                    - pgaggregateRoutes
                    - asnSettings
                    - bgpOptions
                    - RedistributionRouteMap
            ebgcoreneighborspeerGroups:
              id: ebgcoreneighborspeerGroups
              name: peerGroups
              label: eBGP Peer Groups
              description: Define eBGP peers neighbors and set traffic policies.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: peerGroup
                key: peerGroupName
            extinterfaceName:
              id: extinterfaceName
              name: extinterfaceName
              label: Interface Name
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            extospf:
              id: extospf
              name: extospf
              label: OSPF
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_BOOLEAN
              boolean_props:
                default_value: false
            extvrf:
              id: extvrf
              name: extvrf
              label: VRF
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            extipAddress:
              id: extipAddress
              name: extipAddress
              label: IP Address
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: ip
                length: null
                pattern: null
                dynamic_options: null
            extsubnetMask:
              id: extsubnetMask
              name: extsubnetMask
              label: Subnet Mask
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: '31'
                range: 1..31
                static_options: null
                dynamic_options: null
            extvlandescription:
              id: extvlandescription
              name: extdescription
              label: Description
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            extspeed:
              id: extspeed
              name: extspeed
              label: Speed
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            extmtu:
              id: extmtu
              name: extmtu
              label: MTU
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
            externalInterfaceGroup:
              id: externalInterfaceGroup
              name: externalInterfaceGroup
              label: Interfaces Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - extinterfaceName
                    - extospf
                    - extvrf
                    - extipAddress
                    - extsubnetMask
                    - extvlandescription
                    - extspeed
                    - extmtu
            interfacesCollection:
              id: interfacesCollection
              name: interfaces
              label: External Interfaces
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: externalInterfaceGroup
                key: extinterfaceName
            mlagSpeed:
              id: mlagSpeed
              name: mlagSpeed
              label: Speed
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options:
                  values:
                    - auto
                    - 100full
                    - 100g
                    - 100half
                    - 10full
                    - 10g
                    - 10half
                    - 1g
                    - 200g
                    - 25g
                    - 400g
                    - 40g
                    - 50g
                format: null
                length: null
                pattern: null
                dynamic_options: null
            mlagDescription:
              id: mlagDescription
              name: mlagDescription
              label: Description
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            mlagInterfacesInterfacesGroup:
              id: mlagInterfacesInterfacesGroup
              name: mlagInterfacesGroup
              label: MLAG Interfaces Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - mlagSpeed
                    - mlagDescription
            mlagInterfaces:
              id: mlagInterfaces
              name: mlagInterfaces
              label: MLAG Interfaces
              description: Define the MLAG interfaces for this device.
              required: false
              type: INPUT_FIELD_TYPE_RESOLVER
              resolver_props:
                base_field_id: mlagInterfacesInterfacesGroup
                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_INTERFACE_TAG
                input_tag_label: interface
                tag_filter_query: null
            mlagIpAddress:
              id: mlagIpAddress
              name: mlagIpAddress
              label: IP Address
              description: Optional. This field overrides the global mlag subnet setting.
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: ip
                length: null
                pattern: null
                dynamic_options: null
            mlagPeerAddress:
              id: mlagPeerAddress
              name: mlagPeerAddress
              label: Peer Address
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: ip
                length: null
                pattern: null
                dynamic_options: null
            mlagSubnetMask:
              id: mlagSubnetMask
              name: mlagSubnetMask
              label: Subnet Mask
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: '31'
                range: null
                static_options: null
                dynamic_options: null
            mlagOverrideGlobalSubnet:
              id: mlagOverrideGlobalSubnet
              name: mlagOverrideGlobalSubnet
              label: Override Global MLAG Configuration
              description: If the device has an MLAG role, you can override parameters of the network's global MLAG format.
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - mlagIpAddress
                    - mlagPeerAddress
                    - mlagSubnetMask
            mlagRole:
              id: mlagRole
              name: mlagRole
              label: MLAG Role
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: None
                static_options:
                  values:
                    - None
                    - Primary
                    - Secondary
                format: null
                length: null
                pattern: null
                dynamic_options: null
            mlagInterfacesGroup:
              id: mlagInterfacesGroup
              name: mlagGroup
              label: MLAG Configuration
              description: Set the MLAG Role of the device, where None excludes the device from MLAG configuration, and define MLAG parameters.
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - mlagInterfaces
                    - mlagOverrideGlobalSubnet
                    - mlagRole
            erLinkDetails:
              id: erLinkDetails
              name: erLinkDetails
              label: Link Details
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - peneighbors
                    - loopback1Address
                    - rrHostnames
                    - staticRoutes
                    - prefixLists
                    - ebgcoreneighborspeerGroups
                    - interfacesCollection
                    - mlagInterfacesGroup
            erDetails:
              id: erDetails
              name: erDetails
              label: Edge Device Domain Members
              description: Add or select a device to configure its connections.
              required: false
              type: INPUT_FIELD_TYPE_RESOLVER
              resolver_props:
                base_field_id: erLinkDetails
                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_DEVICE_TAG
                input_tag_label: device
                tag_filter_query: null
            erDomain:
              id: erDomain
              name: erDomain
              label: Edge Device Domain
              description: Assign a single device or a pair of edge devices to each domain. Assigning a pair of devices enables the creation of an MLAG pair.
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - erDetails
            erDomains:
              id: erDomains
              name: erDomains
              label: Edge Router Domains
              description: Assign a single device or a pair of devices to each domain.
              required: false
              type: INPUT_FIELD_TYPE_RESOLVER
              resolver_props:
                base_field_id: erDomain
                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_DEVICE_TAG
                input_tag_label: Edge-Router-Domain
                tag_filter_query: null
            corerripAddress:
              id: corerripAddress
              name: corerripAddress
              label: Local IP Address
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: ip
                length: null
                pattern: null
                dynamic_options: null
            corerrdescription:
              id: corerrdescription
              name: description
              label: Description
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            corerrspeed:
              id: corerrspeed
              name: corerrspeed
              label: Speed
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options:
                  values:
                    - auto
                    - 100full
                    - 100g
                    - 100half
                    - 10full
                    - 10g
                    - 10half
                    - 1g
                    - 200g
                    - 25g
                    - 400g
                    - 40g
                    - 50g
                format: null
                length: null
                pattern: null
                dynamic_options: null
            corerrsubnetMask:
              id: corerrsubnetMask
              name: corerrsubnetMask
              label: Local Subnet Mask
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: '31'
                range: null
                static_options: null
                dynamic_options: null
            corerrmtu:
              id: corerrmtu
              name: corerrmtu
              label: MTU
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
            corerrDetails:
              id: corerrDetails
              name: corerrDetails
              label: Route Reflector Details
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - corerripAddress
                    - corerrdescription
                    - corerrspeed
                    - corerrsubnetMask
                    - corerrmtu
            rRs:
              id: rRs
              name: rRs
              label: Route Reflector Connections
              description: Configure this device's client connections to one or more route reflectors.
              required: false
              type: INPUT_FIELD_TYPE_RESOLVER
              resolver_props:
                base_field_id: corerrDetails
                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_INTERFACE_TAG
                input_tag_label: interface
                tag_filter_query: null
            ipAddress:
              id: ipAddress
              name: coreipAddress
              label: Local IP Address
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: ip
                length: null
                pattern: null
                dynamic_options: null
            corenieghbordescription:
              id: corenieghbordescription
              name: description
              label: Description
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            corenieghborspeed:
              id: corenieghborspeed
              name: corespeed
              label: Speed
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            coresubnetMask:
              id: coresubnetMask
              name: coresubnetMask
              label: Subnet Mask
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: '31'
                range: null
                static_options: null
                dynamic_options: null
            coreneighborDetails:
              id: coreneighborDetails
              name: coreneighborDetails
              label: Neighbor Details
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - ipAddress
                    - corenieghbordescription
                    - corenieghborspeed
                    - coresubnetMask
            coreneighbor:
              id: coreneighbor
              name: coreneighbor
              label: Underlay Neighbors
              description: Define IGP interface connections to any neighboring edge or core devices.
              required: false
              type: INPUT_FIELD_TYPE_RESOLVER
              resolver_props:
                base_field_id: coreneighborDetails
                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_INTERFACE_TAG
                input_tag_label: interface
                tag_filter_query: null
            coresrprefix:
              id: coresrprefix
              name: coreprefix
              label: Prefix
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            coresrnextHop:
              id: coresrnextHop
              name: corenextHop
              label: Next Hop
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: ip
                length: null
                pattern: null
                dynamic_options: null
            coresrname:
              id: coresrname
              name: corename
              label: Name
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            corestaticRouteGroup:
              id: corestaticRouteGroup
              name: corestaticRouteGroup
              label: Static Route Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - coresrprefix
                    - coresrnextHop
                    - coresrname
            corestaticRoutes:
              id: corestaticRoutes
              name: corestaticRoutes
              label: Static Routes
              description: Define prefixes and next hops for static routes.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: corestaticRouteGroup
                key: coresrprefix
            coreprefixListName:
              id: coreprefixListName
              name: coreprefixListName
              label: List Name
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            coreplpermitDeny:
              id: coreplpermitDeny
              name: corepermitDeny
              label: Permit Deny
              description: This is an optional field used for reference. The actual permit or deny rule is applied when assigning policy to the routes in or out of a BGP peer group.
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: permit
                static_options:
                  values:
                    - permit
                    - deny
                format: null
                length: null
                pattern: null
                dynamic_options: null
            coreplprefix:
              id: coreplprefix
              name: coreprefix
              label: Prefix
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            coreplmatch:
              id: coreplmatch
              name: corematch
              label: Match Rule
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: exact-route
                static_options:
                  values:
                    - eq
                    - le
                    - ge
                    - exact-route
                format: null
                length: null
                pattern: null
                dynamic_options: null
            plcoreseqNum:
              id: plcoreseqNum
              name: coreseqNum
              label: Sequence Number
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
            coremaskLength:
              id: coremaskLength
              name: coremaskLength
              label: Mask Length
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
            coreseqNumGroup:
              id: coreseqNumGroup
              name: coreseqNumGroup
              label: Sequence Number Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - coreplpermitDeny
                    - coreplprefix
                    - coreplmatch
                    - plcoreseqNum
                    - coremaskLength
            coreseqNums:
              id: coreseqNums
              name: coreseqNums
              label: Sequence Numbers
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: coreseqNumGroup
                key: plcoreseqNum
            coreprefixListGroup:
              id: coreprefixListGroup
              name: coreprefixListGroup
              label: Prefix List Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - coreprefixListName
                    - coreseqNums
            coreprefixLists:
              id: coreprefixLists
              name: coreprefixLists
              label: Prefix List
              description: Add policies to this prefix list, which can be applied to BGP routes in and out.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: coreprefixListGroup
                key: coreprefixListName
            corepeerGroupName:
              id: corepeerGroupName
              name: corepeerGroupName
              label: Peer Group Name
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            corepgdescription:
              id: corepgdescription
              name: coredescription
              label: Description
              description: Enter a description for the BGP peer group.
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            corelocalAs:
              id: corelocalAs
              name: corelocalAs
              label: Local ASN
              description: If no global ASN has been applied to the network, you can enter a value here to assign an ASN to the device you are configuring.
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
            coreasnSettings:
              id: coreasnSettings
              name: coreasnSettings
              label: ASN Settings
              description: Assign a local ASN to this device or override the network's global ASN by assigning a device ASN.
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - corelocalAs
            coreneighborIp:
              id: coreneighborIp
              name: coreneighborIp
              label: Neighbor IP
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: ip
                length: null
                pattern: null
                dynamic_options: null
            corevrf:
              id: corevrf
              name: corevrf
              label: VRF
              description: If the peer is in an overlay network, select the VRF created when defining the external interface.
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options:
                  values:
                    - '{"fieldId":"coreextvrf"}'
            corepeerAsn:
              id: corepeerAsn
              name: corepeerAsn
              label: Peer ASN
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
            coreeBgpNeighborsGroup:
              id: coreeBgpNeighborsGroup
              name: coreeBgpNeighborsGroup
              label: eBGP Neighbors Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - coreneighborIp
                    - corevrf
                    - corepeerAsn
            coreeBgpNeighbors:
              id: coreeBgpNeighbors
              name: coreeBgpNeighbors
              label: eBGP Neighbors
              description: Define eBGP neighbors connected to the device's external interfaces.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: coreeBgpNeighborsGroup
                key: ''
            coreagggregateRoute:
              id: coreagggregateRoute
              name: coreaggregateRoute
              label: Aggregate Route
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            coreaggregateRoutesGroup:
              id: coreaggregateRoutesGroup
              name: coreaggregateRoutesGroup
              label: Aggregate Routes Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - coreagggregateRoute
            coreaggregateRoutes:
              id: coreaggregateRoutes
              name: coreaggregateRoutes
              label: Aggregate Routes
              description: Enter an IP address in CIDR notation to create a summary of related routes.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: coreaggregateRoutesGroup
                key: ''
            corermidescription:
              id: corermidescription
              name: corermidescription
              label: Description
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            corermipermitDeny:
              id: corermipermitDeny
              name: corermipermitDeny
              label: Permit Deny
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: permit
                static_options:
                  values:
                    - permit
                    - deny
                format: null
                length: null
                pattern: null
                dynamic_options: null
            corermiprefixList:
              id: corermiprefixList
              name: corermiprefixList
              label: Prefix List Policy
              description: Add a policy using its sequence number in the prefix list
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options:
                  values:
                    - '{"fieldId":"coreprefixListName"}'
            corermimatchCommunity:
              id: corermimatchCommunity
              name: corermimatchCommunity
              label: Match Community
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            corermisetCommunity:
              id: corermisetCommunity
              name: corermisetCommunity
              label: Set Community
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            corermilocalPref:
              id: corermilocalPref
              name: corermilocalPref
              label: Local Pref
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            corermiasPathPrependRepeat:
              id: corermiasPathPrependRepeat
              name: corermiasPathPrependRepeat
              label: ASN Path Prepend Repeat
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            corermiseqNum:
              id: corermiseqNum
              name: corermiseqNum
              label: Sequence Number
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
            corerouteMapInGroup:
              id: corerouteMapInGroup
              name: corerouteMapInGroup
              label: Route Map In Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - corermidescription
                    - corermipermitDeny
                    - corermiprefixList
                    - corermimatchCommunity
                    - corermisetCommunity
                    - corermilocalPref
                    - corermiasPathPrependRepeat
                    - corermiseqNum
            corerouteMapIn:
              id: corerouteMapIn
              name: corerouteMapIn
              label: Route Map In
              description: Assign policies defined in a prefix list and set the match rules for incoming BGP traffic..
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: corerouteMapInGroup
                key: corermiseqNum
            corermodescription:
              id: corermodescription
              name: corermodescription
              label: Description
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            corermopermitDeny:
              id: corermopermitDeny
              name: corermopermitDeny
              label: Permit Deny
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: permit
                static_options:
                  values:
                    - permit
                    - deny
                format: null
                length: null
                pattern: null
                dynamic_options: null
            corermoprefixList:
              id: corermoprefixList
              name: corermoprefixList
              label: Prefix List Policy
              description: Add a policy using its sequence number in the prefix list
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options:
                  values:
                    - '{"fieldId":"coreprefixListName"}'
            corermomatchCommunity:
              id: corermomatchCommunity
              name: corermomatchCommunity
              label: Match Community
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            corermosetCommunity:
              id: corermosetCommunity
              name: corermosetCommunity
              label: Set Community
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            corermoasPathPrependRepeat:
              id: corermoasPathPrependRepeat
              name: corermoasPathPrependRepeat
              label: ASN Path Prepend Repeat
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            corermoseqNum:
              id: corermoseqNum
              name: corermoseqNum
              label: Sequence Number
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
            corerouteMapOutGroup:
              id: corerouteMapOutGroup
              name: corerouteMapOutGroup
              label: Route Map Out Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - corermodescription
                    - corermopermitDeny
                    - corermoprefixList
                    - corermomatchCommunity
                    - corermosetCommunity
                    - corermoasPathPrependRepeat
                    - corermoseqNum
            corerouteMapOut:
              id: corerouteMapOut
              name: corerouteMapOut
              label: Route Map Out
              description: Assign policies defined in a prefix list and set the match rules for outgoing BGP traffic.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: corerouteMapOutGroup
                key: corermoseqNum
            coreeBgpMultiHopTtl:
              id: coreeBgpMultiHopTtl
              name: coreeBgpMultiHopTtl
              label: eBGP Multi Hop TTL
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            coremaximumAcceptedRoutes:
              id: coremaximumAcceptedRoutes
              name: coremaximumAcceptedRoutes
              label: Maximum Accepted Routes
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            coreospfDefaultInformationOriginate:
              id: coreospfDefaultInformationOriginate
              name: coreospfDefaultInformationOriginate
              label: OSPF Default Information Originate
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: Disabled
                static_options:
                  values:
                    - Disabled
                    - Enabled
                    - Always-Send
                format: null
                length: null
                pattern: null
                dynamic_options: null
            corenextHopSelf:
              id: corenextHopSelf
              name: corenextHopSelf
              label: Next Hop Self
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_BOOLEAN
              boolean_props:
                default_value: true
            coreredistributeRoutes:
              id: coreredistributeRoutes
              name: coreredistributeRoutes
              label: Redistribute Routes
              description: 'Enable mutual redistribution of OSPF and BGP'
              required: false
              type: INPUT_FIELD_TYPE_BOOLEAN
              boolean_props:
                default_value: false
            corebfd:
              id: corebfd
              name: corebfd
              label: BFD
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_BOOLEAN
              boolean_props:
                default_value: false
            corebgpDefaultInformationOriginate:
              id: corebgpDefaultInformationOriginate
              name: corebgpDefaultInformationOriginate
              label: BGP Default Originate
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: Disabled
                static_options:
                  values:
                    - Disabled
                    - Enabled
                format: null
                length: null
                pattern: null
                dynamic_options: null
            corebgpoptions:
              id: corebgpoptions
              name: corebgpoptions
              label: BGP Configuration
              description: Set the configuration details for the BGP peer group.
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - coreeBgpMultiHopTtl
                    - coremaximumAcceptedRoutes
                    - coreospfDefaultInformationOriginate
                    - corenextHopSelf
                    - coreredistributeRoutes
                    - corebfd
                    - corebgpDefaultInformationOriginate
            coreReDistdescription:
              id: coreReDistdescription
              name: coreReDistdescription
              label: Description
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            coreReDistpermitDeny:
              id: coreReDistpermitDeny
              name: coreReDistpermitDeny
              label: Permit Deny
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: permit
                static_options:
                  values:
                    - permit
                    - deny
                format: null
                length: null
                pattern: null
                dynamic_options: null
            coreReDistprefixListPolicy:
              id: coreReDistprefixListPolicy
              name: coreReDistprefixListPolicy
              label: Prefix List Policy
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options:
                  values:
                    - '{"fieldId":"coreprefixListName"}'
            coreReDistmatchCommunity:
              id: coreReDistmatchCommunity
              name: coreReDistmatchCommunity
              label: Match Community
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            coreReDistsetTag:
              id: coreReDistsetTag
              name: coreReDistsetTag
              label: Set Tag
              description: Tag number or "auto"
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            coreReDistseqNum:
              id: coreReDistseqNum
              name: coreReDistseqNum
              label: Sequence Number
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: null
                static_options: null
                dynamic_options: null
            coreReDistRmGroup:
              id: coreReDistRmGroup
              name: coreReDistRmGroup
              label: ReDist RM Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - coreReDistdescription
                    - coreReDistpermitDeny
                    - coreReDistprefixListPolicy
                    - coreReDistmatchCommunity
                    - coreReDistsetTag
                    - coreReDistseqNum
            coreRedistributionRouteMap:
              id: coreRedistributionRouteMap
              name: coreRedistributionRouteMap
              label: Redistribution Route Map
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: coreReDistRmGroup
                key: ''
            corepeerGroup:
              id: corepeerGroup
              name: corepeerGroup
              label: Peer Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - corepeerGroupName
                    - corepgdescription
                    - coreasnSettings
                    - coreeBgpNeighbors
                    - coreaggregateRoutes
                    - corerouteMapIn
                    - corerouteMapOut
                    - corebgpoptions
                    - coreRedistributionRouteMap
            corepeerGroups:
              id: corepeerGroups
              name: corepeerGroups
              label: BGP Peer Groups
              description: Create and configure BGP peer groups.
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: corepeerGroup
                key: corepeerGroupName

            coreextmtu:
              id: coreextmtu
              name: coreextmtu
              label: MTU
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: null
                range: 68..65535
                static_options: null
                dynamic_options: null
            coreextospf:
              id: coreextospf
              name: coreextospf
              label: OSPF
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_BOOLEAN
              boolean_props:
                default_value: false
            coreextvrf:
              id: coreextvrf
              name: coreextvrf
              label: VRF
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            coreextsubnetMask:
              id: coreextsubnetMask
              name: coreextsubnetMask
              label: Subnet Mask
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_INTEGER
              integer_props:
                default_value: '31'
                range: 1..31
                static_options: null
                dynamic_options: null
            coreextipAddress:
              id: coreextipAddress
              name: coreextipAddress
              label: IP Address
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: ip
                length: null
                pattern: null
                dynamic_options: null
            coreextspeed:
              id: coreextspeed
              name: coreextspeed
              label: Speed
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            coreextdescription:
              id: coreextdescription
              name: coreextdescription
              label: Description
              description: Optional
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            coreextinterfaceName:
              id: coreextinterfaceName
              name: coreextinterfaceName
              label: Interface Name
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: null
                static_options: null
                format: null
                length: null
                pattern: null
                dynamic_options: null
            coreexternalInterfacesGroup:
              id: coreexternalInterfacesGroup
              name: externalInterfacesGroup
              label: External Interfaces Group
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - coreextmtu
                    - coreextospf
                    - coreextvrf
                    - coreextsubnetMask
                    - coreextipAddress
                    - coreextspeed
                    - coreextdescription
                    - coreextinterfaceName
            coreInterfacesCollection:
              id: coreInterfacesCollection
              name: interfaces
              label: External Interfaces
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_COLLECTION
              collection_props:
                base_field_id: coreexternalInterfacesGroup
                key: ''

            coreLinkDetails:
              id: coreLinkDetails
              name: coreLinkDetails
              label: Core Link Details
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - rRs
                    - coreneighbor
                    - corestaticRoutes
                    - coreprefixLists
                    - corepeerGroups
                    - coreInterfacesCollection

            coreRouters:
              id: coreRouters
              name: coreRouters
              label: Core Devices
              description: 'Configure devices that have been assigned the Role: Core tag.'
              required: false
              type: INPUT_FIELD_TYPE_RESOLVER
              resolver_props:
                base_field_id: coreLinkDetails
                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_DEVICE_TAG
                input_tag_label: device
                tag_filter_query: 'Role:Core '
            igp:
              id: igp
              name: igp
              label: Underlay Routing
              description: Select an underlay routing protocol for the network.
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: OSPF
                static_options:
                  values:
                    - OSPF
                    - ISIS
                    - None
                format: null
                length: null
                pattern: null
                dynamic_options: null
            redistributeConnected:
              id: redistributeConnected
              name: redistributeConnected
              label: Redistribute Connected
              description: Enable or disable redistribition of connected routes into the IGP..
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: Enabled
                static_options:
                  values:
                    - Disabled
                    - Enabled
                format: null
                length: null
                pattern: null
                dynamic_options: null
            redistributeStatic:
              id: redistributeStatic
              name: redistributeStatic
              label: Redistribute Static
              description: Enable or disable redistribution of static routes into the IGP..
              required: false
              type: INPUT_FIELD_TYPE_STRING
              string_props:
                default_value: Enabled
                static_options:
                  values:
                    - Disabled
                    - Enabled
                format: null
                length: null
                pattern: null
                dynamic_options: null
            pod:
              id: pod
              name: pod
              label: Network Name
              description: Enter a network name that matches the value of a Network tag
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - commonMlagConfig
                    - commonBGPConfig
                    - rrs
                    - erDomains
                    - coreRouters
                    - igp
                    - redistributeConnected
                    - redistributeStatic
            pods:
              id: pods
              name: pods
              label: Network
              description: Create or manage a new routing network.
              required: false
              type: INPUT_FIELD_TYPE_RESOLVER
              resolver_props:
                base_field_id: pod
                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_DEVICE_TAG
                input_tag_label: Network
                tag_filter_query: null
            root:
              id: root
              name: ''
              label: ''
              description: ''
              required: false
              type: INPUT_FIELD_TYPE_GROUP
              group_props:
                members:
                  values:
                    - pods
        layout:
          value: |
            {
               "pod": {
                  "key": "pod",
                  "type": "INPUT",
                  "order": [
                     "commonBGPConfig",
                     "erDomains",
                     "RoleTagger",
                     "coreRouters",
                     "rrs",
                     "igp",
                     "redistributeConnected",
                     "redistributeStatic",
                     "commonMlagConfig"
                  ]
               },
               "pods": {
                  "key": "pods",
                  "isPageLayout": true,
                  "type": "INPUT",
                  "showDefaultRow": false
               },
               "rrInterfaceParams": {
                  "key": "rrInterfaceParams",
                  "type": "INPUT",
                  "order": [
                     "ReflectorTagger",
                     "rrDownlink"
                  ]
               },
               "erLinkDetails": {
                  "key": "erLinkDetails",
                  "type": "INPUT",
                  "order": [
                     "mlagInterfacesGroup",
                     "peneighbors",
                     "EdgeTagger",
                     "loopback1Address",
                     "interfacesCollection",
                     "staticRoutes",
                     "prefixLists",
                     "ebgcoreneighborspeerGroups",
                     "rrHostnames"
                  ]
               },
               "asNumber": {
                  "key": "asNumber",
                  "type": "INPUT",
                  "dependency": {
                     "asNumber": {
                        "value": [
                           "65100"
                        ],
                        "mode": "HIDE"
                     }
                  }
               },
               "erDetails": {
                  "key": "erDetails",
                  "isPageLayout": true,
                  "type": "INPUT",
                  "showDefaultRow": false
               },
               "erMLAGInterface1": {
                  "key": "erMLAGInterface1",
                  "type": "INPUT",
                  "dependency": {
                     "erMLAGInterface2": {
                        "value": [
                           "dummy"
                        ],
                        "mode": "HIDE"
                     }
                  }
               },
               "erMLAGInterface2": {
                  "key": "erMLAGInterface2",
                  "type": "INPUT",
                  "dependency": {}
               },
               "mlagLinkSubnet": {
                  "key": "mlagLinkSubnet",
                  "type": "INPUT",
                  "dependency": {}
               },
               "internalVlan": {
                  "key": "internalVlan",
                  "type": "INPUT",
                  "dependency": {}
               },
               "mlagPortChannelId": {
                  "key": "mlagPortChannelId",
                  "type": "INPUT",
                  "dependency": {}
               },
               "virtualRouterMac": {
                  "key": "virtualRouterMac",
                  "type": "INPUT",
                  "dependency": {}
               },
               "peASbase": {
                  "key": "peASbase",
                  "type": "INPUT",
                  "dependency": {}
               },
               "coreLinkDetails": {
                  "key": "coreLinkDetails",
                  "type": "INPUT",
                  "order": [
                     "coreneighbor",
                     "CoreTagger",
                     "coreInterfacesCollection",
                     "corestaticRoutes",
                     "coreprefixLists",
                     "corepeerGroups",
                     "rRs"
                  ]
               },
               "fabricLinksSubnet": {
                  "key": "fabricLinksSubnet",
                  "type": "INPUT",
                  "dependency": {}
               },
               "fabricSubnetMask": {
                  "key": "fabricSubnetMask",
                  "type": "INPUT",
                  "dependency": {}
               },
               "peLoopback1Subnet": {
                  "key": "peLoopback1Subnet",
                  "type": "INPUT",
                  "dependency": {
                     "vxlanevpn": {
                        "value": [
                           "SR",
                           "LDP",
                           "None",
                           "SR-TE",
                           "RSVP"
                        ],
                        "mode": "HIDE"
                     }
                  }
               },
               "rrs": {
                  "key": "rrs",
                  "isPageLayout": true,
                  "type": "INPUT",
                  "showDefaultRow": false
               },
               "peLoopback0Subnet": {
                  "key": "peLoopback0Subnet",
                  "type": "INPUT",
                  "dependency": {}
               },
               "rrLoopback0Subnet": {
                  "key": "rrLoopback0Subnet",
                  "type": "INPUT",
                  "dependency": {}
               },
               "loopback1Address": {
                  "key": "loopback1Address",
                  "dependency": {
                     "evpnAndVxlan": {
                        "value": [
                           "Disabled"
                        ],
                        "mode": "HIDE"
                     }
                  },
                  "type": "INPUT"
               },
               "fpenodeSegmentIndex": {
                  "key": "fpenodeSegmentIndex",
                  "type": "INPUT",
                  "dependency": {
                     "vxlanevpn": {
                        "value": [
                           "LDP",
                           "RSVP",
                           "None",
                           "VXLAN"
                        ],
                        "mode": "HIDE"
                     }
                  }
               },
               "pnodeSegmentIndex": {
                  "key": "pnodeSegmentIndex",
                  "type": "INPUT",
                  "dependency": {
                     "vxlanevpn": {
                        "value": [
                           "LDP",
                           "RSVP",
                           "None",
                           "VXLAN"
                        ],
                        "mode": "HIDE"
                     }
                  }
               },
               "srTiFla": {
                  "key": "srTiFla",
                  "valueToLabelMap": {
                     "YES": "OK",
                     "NO": "NO",
                     "Enabled": "Enabled",
                     "Disabled": "Disabled"
                  },
                  "dependency": {
                     "vxlanevpn": {
                        "value": [
                           "None",
                           "VXLAN",
                           "RSVP",
                           "LDP"
                        ],
                        "mode": "HIDE"
                     }
                  },
                  "type": "INPUT"
               },
               "endPoint": {
                  "key": "endPoint",
                  "type": "INPUT",
                  "order": [
                     "tepolname",
                     "tepol"
                  ]
               },
               "tepol": {
                  "key": "tepol",
                  "type": "INPUT",
                  "isPageLayout": true
               },
               "tepolname": {
                  "key": "tepolname",
                  "dependency": {
                     "vxlanevpn": {
                        "value": [
                           "SR-TE"
                        ],
                        "mode": "SHOW"
                     }
                  },
                  "type": "INPUT"
               },
               "tename": {
                  "key": "tename",
                  "dependency": {
                     "vxlanevpn": {
                        "value": [
                           "SR-TE"
                        ],
                        "mode": "SHOW"
                     }
                  },
                  "type": "INPUT"
               },
               "tedescription": {
                  "key": "tedescription",
                  "dependency": {
                     "vxlanevpn": {
                        "value": [
                           "SR-TE"
                        ],
                        "mode": "SHOW"
                     }
                  },
                  "type": "INPUT"
               },
               "color": {
                  "key": "color",
                  "dependency": {
                     "vxlanevpn": {
                        "value": [
                           "SR-TE"
                        ],
                        "mode": "SHOW"
                     }
                  },
                  "type": "INPUT"
               },
               "matchAllRTs": {
                  "key": "matchAllRTs",
                  "type": "INPUT",
                  "dependency": {
                     "vxlanevpn": {
                        "value": [
                           "VXLAN",
                           "None",
                           "RSVP",
                           "LDP",
                           "SR"
                        ],
                        "mode": "HIDE"
                     }
                  }
               },
               "rtValue": {
                  "key": "rtValue",
                  "type": "INPUT",
                  "dependency": {
                     "vxlanevpn": {
                        "value": [
                           "VXLAN",
                           "None",
                           "RSVP",
                           "LDP",
                           "SR"
                        ],
                        "mode": "HIDE"
                     }
                  }
               },
               "bindingId": {
                  "key": "bindingId",
                  "type": "INPUT",
                  "dependency": {
                     "vxlanevpn": {
                        "value": [
                           "VXLAN",
                           "None",
                           "RSVP",
                           "LDP",
                           "SR"
                        ],
                        "mode": "HIDE"
                     }
                  }
               },
               "teEndPoints": {
                  "key": "teEndPoints",
                  "type": "INPUT",
                  "isPageLayout": true
               },
               "polvalue": {
                  "key": "polvalue",
                  "type": "INPUT",
                  "order": [
                     "tename",
                     "tedescription",
                     "color",
                     "pathPreference",
                     "matchAllRTs",
                     "rTs",
                     "bindingId"
                  ]
               },
               "preference": {
                  "key": "preference",
                  "dependency": {
                     "vxlanevpn": {
                        "value": [
                           "SR-TE"
                        ],
                        "mode": "SHOW"
                     }
                  },
                  "type": "INPUT"
               },
               "segmentList": {
                  "key": "segmentList",
                  "dependency": {
                     "vxlanevpn": {
                        "value": [
                           "SR-TE"
                        ],
                        "mode": "SHOW"
                     }
                  },
                  "type": "INPUT"
               },
               "erDomains": {
                  "key": "erDomains",
                  "type": "INPUT",
                  "showDefaultRow": false
               },
               "coreRouters": {
                  "key": "coreRouters",
                  "showDefaultRow": false,
                  "type": "INPUT",
                  "isPageLayout": true
               },
               "isisAuthKey": {
                  "key": "isisAuthKey",
                  "type": "INPUT",
                  "dependency": {
                     "igp": {
                        "value": [
                           "OSPF"
                        ],
                        "mode": "HIDE"
                     }
                  }
               },
               "ospfAuthKey": {
                  "key": "ospfAuthKey",
                  "type": "INPUT",
                  "dependency": {
                     "igp": {
                        "value": [
                           "ISIS"
                        ],
                        "mode": "HIDE"
                     }
                  }
               },
               "peneighbors": {
                  "key": "peneighbors",
                  "type": "INPUT",
                  "showDefaultRow": false
               },
               "rRs": {
                  "key": "rRs",
                  "type": "INPUT",
                  "showDefaultRow": false
               },
               "coreneighbor": {
                  "key": "coreneighbor",
                  "type": "INPUT",
                  "showDefaultRow": false
               },
               "rrBGPDynamicNeighbors": {
                  "key": "rrBGPDynamicNeighbors",
                  "dependency": {
                     "igp": {
                        "value": [
                           "OSPF",
                           "ISIS",
                           "None"
                        ],
                        "mode": "HIDE"
                     }
                  },
                  "type": "INPUT"
               },
               "evpnEnabled": {
                  "key": "evpnEnabled",
                  "dependency": {
                     "rrAS": {
                        "value": [],
                        "mode": "HIDE"
                     }
                  },
                  "type": "INPUT"
               },
               "l3vpnEnabled": {
                  "key": "l3vpnEnabled",
                  "dependency": {
                     "rrAS": {
                        "value": [],
                        "mode": "HIDE"
                     }
                  },
                  "type": "INPUT"
               },
               "bgpAuthKey": {
                  "key": "bgpAuthKey",
                  "dependency": {
                     "rrAS": {
                        "value": [],
                        "mode": "HIDE"
                     }
                  },
                  "type": "INPUT"
               },
               "staticRoutes": {
                  "key": "staticRoutes",
                  "type": "INPUT",
                  "isPageLayout": false
               },
               "prefixLists": {
                  "key": "prefixLists",
                  "type": "INPUT",
                  "isPageLayout": true
               },
               "prefixListsSeqNums": {
                  "key": "prefixListsSeqNums",
                  "type": "INPUT",
                  "isPageLayout": false
               },
               "prefixListsSeqNumsvalue": {
                  "key": "prefixListsSeqNumsvalue",
                  "type": "INPUT",
                  "order": [
                     "prefixListsSeqNumber",
                     "prefixListsSeqpermitDeny",
                     "prefixListsSeqprefix",
                     "prefixListsSeqprefixLength",
                     "prefixListsmaskLength"
                  ]
               },
               "peerGroupRouteMapOutGroup": {
                  "key": "peerGroupRouteMapOutGroup",
                  "type": "INPUT",
                  "order": [
                     "peerGroupRouteMapOutseqNum",
                     "peerGroupRouteMapOutdescription",
                     "peerGroupRouteMapOutpermitDeny",
                     "peerGroupRouteMapOutprefixList",
                     "peerGroupRouteMapOutmatchCommunity",
                     "peerGroupRouteMapOutsetCommunity",
                     "peerGroupRouteMapOutasPathPrependRepeat"
                  ]
               },
               "ebgcoreneighborspeerGroups": {
                  "key": "ebgcoreneighborspeerGroups",
                  "type": "INPUT",
                  "isPageLayout": true
               },
               "eBgcoreneighborsGroup": {
                  "key": "eBgcoreneighborsGroup",
                  "type": "INPUT",
                  "order": [
                     "ebgcoreneighborsneighborIp",
                     "eBgcoreneighborspeerAsn",
                     "pgvrf"
                  ]
               },
               "eBgcoreneighbors": {
                  "key": "eBgcoreneighbors",
                  "isPageLayout": false,
                  "type": "INPUT"
               },
               "externalInterfaces": {
                  "key": "externalInterfaces",
                  "type": "INPUT",
                  "showDefaultRow": false,
                  "isPageLayout": false
               },
               "redistributeConnected": {
                  "key": "redistributeConnected",
                  "type": "INPUT",
                  "dependency": {
                     "igp": {
                        "value": [
                           "None"
                        ],
                        "mode": "HIDE"
                     }
                  }
               },
               "redistributeStatic": {
                  "key": "redistributeStatic",
                  "type": "INPUT",
                  "dependency": {
                     "igp": {
                        "value": [
                           "None"
                        ],
                        "mode": "HIDE"
                     }
                  }
               },
               "rrHostname": {
                  "key": "rrHostname",
                  "dependency": {},
                  "type": "INPUT"
               },
               "peerGroup": {
                  "key": "peerGroup",
                  "type": "INPUT",
                  "order": [
                     "peerGroupName",
                     "peerGroupdescription",
                     "asnSettings",
                     "eBgcoreneighbors",
                     "pgaggregateRoutes",
                     "peerGroupRouteMapIn",
                     "peerGroupRouteMapOut",
                     "bgpOptions",
                     "RedistributionRouteMap"
                  ]
               },
               "loopback0Address": {
                  "key": "loopback0Address",
                  "dependency": {},
                  "type": "INPUT"
               },
               "rrLinkPeer": {
                  "key": "rrLinkPeer",
                  "type": "INPUT",
                  "dependency": {
                     "evpnAndVxlan": {
                        "value": [
                           "Disabled"
                        ],
                        "mode": "HIDE"
                     }
                  }
               },
               "rrLinkPeerInterface": {
                  "key": "rrLinkPeerInterface",
                  "type": "INPUT",
                  "dependency": {
                     "evpnAndVxlan": {
                        "value": [
                           "Disabled"
                        ],
                        "mode": "HIDE"
                     }
                  }
               },
               "rripAddress": {
                  "key": "rripAddress",
                  "dependency": {},
                  "type": "INPUT"
               },
               "rsubnetMask": {
                  "key": "rsubnetMask",
                  "dependency": {},
                  "type": "INPUT"
               },
               "rrDownlink": {
                  "key": "rrDownlink",
                  "isPageLayout": false,
                  "showDefaultRow": false,
                  "type": "INPUT"
               },
               "erneighborDetails": {
                  "key": "erneighborDetails",
                  "type": "INPUT",
                  "order": [
                     "erdescription",
                     "eripAddress",
                     "ersubnetMask",
                     "erspeed"
                  ]
               },
               "corerrDetails": {
                  "key": "corerrDetails",
                  "type": "INPUT",
                  "order": [
                     "corerrdescription",
                     "corerripAddress",
                     "corerrsubnetMask",
                     "corerrspeed",
                     "corerrmtu"
                  ]
               },
               "coreneighborDetails": {
                  "key": "coreneighborDetails",
                  "type": "INPUT",
                  "order": [
                     "corenieghbordescription",
                     "ipAddress",
                     "coresubnetMask",
                     "corenieghborspeed"
                  ]
               },
               "rrNeighborParams": {
                  "key": "rrNeighborParams",
                  "type": "INPUT",
                  "order": [
                     "rrrrdescription",
                     "rripAddress",
                     "rrsubnetMask",
                     "rrrrspeed",
                     "rrmtu"
                  ]
               },
               "rrHostnameGroup": {
                  "key": "rrHostnameGroup",
                  "type": "INPUT",
                  "order": [
                     "rrHostname",
                     "rrintdescription",
                     "rrlocalIpAddress",
                     "rrlocalSubnetMask",
                     "rrintspeed",
                     "errrmtu"
                  ]
               },
               "externalInterfaceGroup": {
                  "key": "externalInterfaceGroup",
                  "type": "INPUT",
                  "order": [
                     "externalInterfacedescription",
                     "extvlans",
                     "extspeed",
                     "extmtu"
                  ]
               },
               "mlagInterfaces": {
                  "key": "mlagInterfaces",
                  "showDefaultRow": false,
                  "order": [
                     "mlagInterfacesInterfacesGroup"
                  ],
                  "type": "INPUT",
                  "isPageLayout": false
               },
               "rrrrdescription": {
                  "key": "rrrrdescription",
                  "dependency": {},
                  "type": "INPUT"
               },
               "rrrrspeed": {
                  "key": "rrrrspeed",
                  "dependency": {},
                  "type": "INPUT"
               },
               "corerrdescription": {
                  "key": "corerrdescription",
                  "dependency": {},
                  "type": "INPUT"
               },
               "corerripAddress": {
                  "key": "corerripAddress",
                  "dependency": {},
                  "type": "INPUT"
               },
               "corerrsubnetMask": {
                  "key": "corerrsubnetMask",
                  "dependency": {},
                  "type": "INPUT"
               },
               "corerrspeed": {
                  "key": "corerrspeed",
                  "dependency": {},
                  "type": "INPUT"
               },
               "rrintspeed": {
                  "key": "rrintspeed",
                  "dependency": {},
                  "type": "INPUT"
               },
               "localSubnetMask": {
                  "key": "localSubnetMask",
                  "dependency": {},
                  "type": "INPUT"
               },
               "rrlocalIpAddress": {
                  "key": "rrlocalIpAddress",
                  "dependency": {},
                  "type": "INPUT"
               },
               "rrintdescription": {
                  "key": "rrintdescription",
                  "dependency": {},
                  "type": "INPUT"
               },
               "corestaticRoutes": {
                  "key": "corestaticRoutes",
                  "type": "INPUT",
                  "isPageLayout": false
               },
               "coreprefixLists": {
                  "key": "coreprefixLists",
                  "type": "INPUT",
                  "isPageLayout": true
               },
               "coreseqNums": {
                  "key": "coreseqNums",
                  "type": "INPUT",
                  "isPageLayout": false
               },
               "corepeerGroups": {
                  "key": "corepeerGroups",
                  "type": "INPUT",
                  "isPageLayout": true
               },
               "corerouteMapOut": {
                  "key": "corerouteMapOut",
                  "type": "INPUT",
                  "isPageLayout": false
               },
               "corerouteMapIn": {
                  "key": "corerouteMapIn",
                  "type": "INPUT",
                  "isPageLayout": false
               },
               "coreaggregateRoutes": {
                  "key": "coreaggregateRoutes",
                  "type": "INPUT",
                  "isPageLayout": false
               },
               "coreeBgpNeighbors": {
                  "key": "coreeBgpNeighbors",
                  "type": "INPUT",
                  "isPageLayout": false
               },
               "coreexternalInterfaces": {
                  "key": "coreexternalInterfaces",
                  "type": "INPUT",
                  "isPageLayout": false,
                  "showDefaultRow": false
               },
               "mlagOverrideGlobalSubnet": {
                  "key": "mlagOverrideGlobalSubnet",
                  "type": "INPUT",
                  "order": [
                     "mlagIpAddress",
                     "mlagSubnetMask",
                     "mlagPeerAddress"
                  ]
               },
               "mlagInterfacesGroup": {
                  "key": "mlagInterfacesGroup",
                  "type": "INPUT",
                  "order": [
                     "mlagRole",
                     "mlagInterfaces",
                     "mlagOverrideGlobalSubnet"
                  ]
               },
               "mlagInterfacesInterfacesGroup": {
                  "key": "mlagInterfacesInterfacesGroup",
                  "type": "INPUT",
                  "order": [
                     "mlagDescription",
                     "mlagSpeed"
                  ]
               },
               "EdgeTagger": {
                  "type": "TAGGER",
                  "parentKey": "erLinkDetails",
                  "key": "EdgeTagger",
                  "name": "Loopback 0",
                  "assignmentType": "SINGLE",
                  "prepopulate": true,
                  "tagType": "DEVICE",
                  "description": "Assign Router ID tag to assign Loopback 0 address",
                  "columns": [
                     {
                        "tagLabel": "router_bgp.router_id",
                        "suggestedValues": []
                     }
                  ]
               },
               "CoreTagger": {
                  "type": "TAGGER",
                  "parentKey": "coreLinkDetails",
                  "key": "CoreTagger",
                  "name": "Loopback0",
                  "assignmentType": "SINGLE",
                  "prepopulate": true,
                  "tagType": "DEVICE",
                  "description": "",
                  "columns": [
                     {
                        "tagLabel": "router_bgp.router_id",
                        "suggestedValues": []
                     }
                  ]
               },
               "ReflectorTagger": {
                  "type": "TAGGER",
                  "parentKey": "rrInterfaceParams",
                  "key": "ReflectorTagger",
                  "name": "Loopback0",
                  "assignmentType": "SINGLE",
                  "prepopulate": true,
                  "tagType": "DEVICE",
                  "description": "",
                  "columns": [
                     {
                        "tagLabel": "router_bgp.router_id",
                        "suggestedValues": []
                     }
                  ]
               },
               "DeviceASNTagger": {
                  "type": "TAGGER",
                  "parentKey": "asnSettings",
                  "key": "DeviceASNTagger",
                  "name": "Device ASN",
                  "assignmentType": "SINGLE",
                  "prepopulate": true,
                  "tagType": "DEVICE",
                  "description": "",
                  "columns": [
                     {
                        "tagLabel": "router_bgp.as",
                        "suggestedValues": []
                     }
                  ]
               },
               "CoreDeviceASNTagger": {
                  "type": "TAGGER",
                  "parentKey": "coreasnSettings",
                  "key": "CoreDeviceASNTagger",
                  "name": "Device ASN",
                  "assignmentType": "SINGLE",
                  "prepopulate": true,
                  "tagType": "DEVICE",
                  "description": "",
                  "columns": [
                     {
                        "tagLabel": "router_bgp.as",
                        "suggestedValues": []
                     }
                  ]
               },
               "commonBGPConfig": {
                  "key": "commonBGPConfig",
                  "type": "INPUT",
                  "order": [
                     "rrBGPDynamicNeighbors",
                     "globalAS",
                     "evpnAndVxlan"
                  ]
               },
               "RoleTagger": {
                  "type": "TAGGER",
                  "parentKey": "pod",
                  "key": "RoleTagger",
                  "name": "Role Tags",
                  "assignmentType": "MULTIPLE",
                  "prepopulate": true,
                  "tagType": "DEVICE",
                  "description": "Assign Core, Edge-Router or RR tags to devices",
                  "columns": [
                     {
                        "tagLabel": "Role",
                        "suggestedValues": [
                           "Core",
                           "Edge-Router",
                           "RR"
                        ]
                     }
                  ]
               },
               "RedistributionRouteMap": {
                  "key": "RedistributionRouteMap",
                  "type": "INPUT",
                  "isPageLayout": false
               },
               "asnSettings": {
                  "key": "asnSettings",
                  "type": "INPUT",
                  "order": [
                     "pglocalAs",
                     "DeviceASNTagger"
                  ]
               },
               "peerGroupRouteMapInrouteMapInGroup": {
                  "key": "peerGroupRouteMapInrouteMapInGroup",
                  "type": "INPUT",
                  "order": [
                     "peerGroupRouteMapInseqNum",
                     "peerGroupRouteMapIndescription",
                     "peerGroupRouteMapInpermitDenyg",
                     "peerGroupRouteMapInprefixList",
                     "peerGroupRouteMapInMatchCommunity",
                     "peerGroupRouteMapInSetCommunity",
                     "peerGroupRouteMapInLocalPref",
                     "peerGroupRouteMapInAsPathPrependRepeat"
                  ]
               },
               "ReDistRmGroup": {
                  "key": "ReDistRmGroup",
                  "type": "INPUT",
                  "order": [
                     "ReDistseqnum",
                     "ReDistdescription",
                     "ReDistpermitDeny",
                     "ReDistprefixList",
                     "ReDistmatchCommunity",
                     "ReDistsetTag"
                  ]
               },
               "coreseqNumGroup": {
                  "key": "coreseqNumGroup",
                  "type": "INPUT",
                  "order": [
                     "plcoreseqNum",
                     "coreplpermitDeny",
                     "coreplprefix",
                     "coreplmatch",
                     "coremaskLength"
                  ]
               },
               "coreasnSettings": {
                  "key": "coreasnSettings",
                  "type": "INPUT",
                  "order": [
                     "corelocalAs",
                     "CoreDeviceASNTagger"
                  ]
               },
               "coreeBgpNeighborsGroup": {
                  "key": "coreeBgpNeighborsGroup",
                  "type": "INPUT",
                  "order": [
                     "coreneighborIp",
                     "corepeerAsn",
                     "corevrf"
                  ]
               },
               "coreReDistRmGroup": {
                  "key": "coreReDistRmGroup",
                  "type": "INPUT",
                  "order": [
                     "coreReDistseqNum",
                     "coreReDistdescription",
                     "coreReDistpermitDeny",
                     "coreReDistprefixListPolicy",
                     "coreReDistmatchCommunity",
                     "coreReDistsetTag"
                  ]
               },
               "corerouteMapOutGroup": {
                  "key": "corerouteMapOutGroup",
                  "type": "INPUT",
                  "order": [
                     "corermoseqNum",
                     "corermodescription",
                     "corermopermitDeny",
                     "corermoprefixList",
                     "corermomatchCommunity",
                     "corermosetCommunity",
                     "corermoasPathPrependRepeat"
                  ]
               },
               "corerouteMapInGroup": {
                  "key": "corerouteMapInGroup",
                  "type": "INPUT",
                  "order": [
                     "corermiseqNum",
                     "corermidescription",
                     "corermipermitDeny",
                     "corermiprefixList",
                     "corermimatchCommunity",
                     "corermisetCommunity",
                     "corermilocalPref",
                     "corermiasPathPrependRepeat"
                  ]
               },
               "evpnAndVxlan": {
                  "key": "evpnAndVxlan",
                  "type": "INPUT",
                  "valueToLabelMap": {
                     "True": "Enabled",
                     "False": "Disabled"
                  }
               },
               "extospf": {
                  "key": "extospf",
                  "type": "INPUT",
                  "valueToLabelMap": {
                     "True": "Enabled",
                     "False": "Disabled"
                  }
               },
               "bfd": {
                  "key": "bfd",
                  "type": "INPUT",
                  "valueToLabelMap": {
                     "True": "Enabled",
                     "False": "Disabled"
                  }
               },
               "nextHopSelf": {
                  "key": "nextHopSelf",
                  "type": "INPUT",
                  "valueToLabelMap": {
                     "True": "Enabled",
                     "False": "Disabled"
                  }
               },
               "redistributeRoutes": {
                  "key": "redistributeRoutes",
                  "type": "INPUT",
                  "valueToLabelMap": {
                     "True": "Enabled",
                     "False": "Disabled"
                  }
               },
               "corenextHopSelf": {
                  "key": "corenextHopSelf",
                  "type": "INPUT",
                  "valueToLabelMap": {
                     "True": "Enabled",
                     "False": "Disabled"
                  }
               },
               "coreredistributeRoutes": {
                  "key": "coreredistributeRoutes",
                  "type": "INPUT",
                  "valueToLabelMap": {
                     "True": "Enabled",
                     "False": "Disabled"
                  }
               },
               "corebfd": {
                  "key": "corebfd",
                  "valueToLabelMap": {
                     "True": "Enabled",
                     "False": "Disabled"
                  },
                  "type": "INPUT"
               },
               "coreextospf": {
                  "key": "coreextospf",
                  "type": "INPUT",
                  "valueToLabelMap": {
                     "True": "Enabled",
                     "False": "Disabled"
                  }
               },
               "bgpOptions": {
                  "key": "bgpOptions",
                  "type": "INPUT",
                  "order": [
                     "peerGroupeBgpMultiHopTtl",
                     "peerGroupmaximumAcceptedRoutes",
                     "bfd",
                     "nextHopSelf",
                     "erospfDefaultInformationOriginate",
                     "bgpDefaultInformationOriginate",
                     "redistributeRoutes",
                     "redistributionVrf"
                  ]
               },
               "externalInterfaceGroup": {
                  "key": "externalInterfaceGroup",
                  "type": "INPUT",
                  "order": [
                     "extinterfaceName",
                     "extvlandescription",
                     "extipAddress",
                     "extsubnetMask",
                     "extspeed",
                     "extmtu",
                     "extvrf",
                     "extospf"
                  ]
               },
               "coreexternalInterfacesGroup": {
                  "key": "coreexternalInterfacesGroup",
                  "type": "INPUT",
                  "order": [
                     "coreextinterfaceName",
                     "coreextdescription",
                     "coreextipAddress",
                     "coreextsubnetMask",
                     "coreextspeed",
                     "coreextmtu",
                     "coreextvrf",
                     "coreextospf"
                  ]
               }
            }
