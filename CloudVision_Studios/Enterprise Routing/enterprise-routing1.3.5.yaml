-
    service: arista.studio.v1.StudioConfigService
    method: Set
    body:
        value:
            key:
                studio_id: studio-enterprise-routing
                workspace_id: ws-enterprise-routing
            display_name: 'Enterprise Routing'
            description: 'Deploy and manage routed networks with OSPF and BGP (including EVPN VXLAN overlay)'
            template:
                type: TEMPLATE_TYPE_MAKO
                body: |
                    <%
                    import sys, os, json, ipaddress, re
                    from typing import List
                    import tagsearch_python.tagsearch_pb2_grpc as tsgr
                    import tagsearch_python.tagsearch_pb2 as tspb
                    from arista.tag.v2.services import TagServiceStub, TagAssignmentServiceStub, TagConfigServiceStub, TagAssignmentConfigServiceStub
                    from arista.tag.v2.services.gen_pb2 import TagRequest, TagConfigSetRequest, TagStreamRequest, TagConfigStreamRequest, TagAssignmentStreamRequest, TagAssignmentConfigSetRequest, TagAssignmentConfigStreamRequest
                    from arista.tag.v2.tag_pb2 import Tag, TagKey, TagAssignment, TagAssignmentKey, TagAssignmentConfig

                    class InterfaceConfig:
                      def __init__(self):
                        self.Port= ""
                        self.IPAddress= ""
                        self.Mask= ""
                        self.IPNetwork = ""
                        self.Host= ""
                        self.NeighborHostname = ""
                        self.NeighborPort= ""
                        self.ChannelGroup = ""

                    class Mlag:
                      def __init__(self):
                        self.ID = ""
                        self.PeerLink = False
                        self.Interfaces = []
                        self.MlagIPAddr = ""
                        self.MlagNetmask = ""
                        self.MlagNetwork = ""
                        self.MlagIPPeerAddr = ""
                        self.MlagPeerName = ""

                    class NeighborIntf:
                      def __init__(self):
                        self.IPAddress= ""
                        self.Port= ""
                        self.Host= ""

                    class BGPPeerGroup:
                      def __init__(self):
                        self.Name= ""
                        self.EVPN=False
                        self.Peerer=False
                        self.NeighborASN= ""
                        self.NeighborIntfs= []

                    class StaticRoutes:
                      def __init__(self):
                        self.Prefix= ""
                        self.NextHop= ""
                        self.Name= ""

                    class PLName:
                      def __init__(self):
                        self.SeqNum= ""
                        self.PermitDeny= ""
                        self.Prefix= ""
                        self.PrefixLength= ""
                        self.MaskLength= ""

                    class PrefixLists:
                      def __init__(self):
                        self.PLName= []
                        self.Name= ""

                    class RouteMapIn:
                      def __init__(self):
                        self.SeqNum= ""
                        self.PermitDeny= ""
                        self.PrefixListIn= ""
                        self.MatchCommunity= ""
                        self.SetCommunity= ""
                        self.LocalPref= ""
                        self.PrependRepeat= ""

                    class RouteMapOut:
                      def __init__(self):
                        self.SeqNum= ""
                        self.PermitDeny= ""
                        self.PrefixListOut= ""
                        self.MatchCommunity= ""
                        self.SetCommunity= ""
                        self.PrependRepeat= ""

                    class PeerGroups:
                      def __init__(self):
                        self.PeerGroupName= ""
                        self.PeerASN= ""
                        self.Redis= ""
                        self.Description= ""
                        self.Aggregates= []
                        self.LocalAS= ""
                        self.NextHopSelf= ""
                        self.BFD= ""
                        self.eBGPMultiHopTTL= ""
                        self.MaxAcceptedRoutes= ""
                        self.RouteMapIn= []
                        self.RouteMapOut= []
                        self.eBGPNeighbors= []

                    class eBGPNeighbors:
                      def __init__(self):
                        self.NeighborIp= ""
                        self.PeerASN= ""
                        self.PeerGroup= ""

                    class Aggregates:
                      def __init__(self):
                        self.Route= ""

                    class ExternalInterfaces:
                      def __init__(self):
                        self.InterfaceName= ""
                        self.Description= ""
                        self.IPPrefix= ""
                        self.VlanID= ""

                    class SwitchConfig:
                      def __init__(self):
                        self.Model =     ""
                        self.EOSVersion = ""
                        self.Role= ""
                        self.Hostname = ""
                        self.NodeNum = 0
                        self.FabricNetwork = []
                        self.FabricNetmask = ""
                        self.Interfaces = []
                        self.PortChannels = []
                        self.MlagMembers =    Mlag()
                        self.Loopback0IP = ""
                        self.Loopback0Network= ""
                        self.MlagIPAddr= ""
                        self.MlagIPPeerAddr = ""
                        self.MlagNetmask=""
                        self.MlagNetwork= ""
                        self.MlagPeerName= ""
                        self.LogicalVTEP= ""
                        self.VirtualVTEP= ""
                        self.ASN= ""
                        self.BGPPeerGroups =  []
                        self.StaticRoutes = []
                        self.PrefixLists = []
                        self.PeerGroups = []
                        self.eBGPNeighbors = []
                        self.ExternalInterfaces = []
                      def interfaces(self):
                        return { i : self.Interfaces[i].data() for i in range(0, len(self.Interfaces) ) }

                    def get_isis_addr(area_id, area_number, lo0):
                        area_id_str = str(area_id)
                        if len(area_id_str) != 2:
                            area_id_str = '0'+area_id_str

                        area_number_str = str(area_number)
                        len_area_number_str = len(area_number_str)
                        for i in range(0, 4 - len_area_number_str) :
                            area_number_str = '0' + area_number_str

                        octets = lo0.split('.')
                        lo0_filled_with0 = ""
                        for octet in octets :
                            temp = octet
                            for i in range(0, 3 - len(octet)):
                                temp =  '0' + temp
                            lo0_filled_with0 = lo0_filled_with0 + temp
                        sys_id = lo0_filled_with0[0:4] +'.'+lo0_filled_with0[4:8]+'.'+lo0_filled_with0[8:12]
                        return area_id_str+'.'+area_number_str+'.'+sys_id+'.00'

                    tagValues = {}
                    myPod = None
                    myNodeNum = None
                    myRole = None
                    mlagTagged = False
                    networkLabel = 'Network'
                    erNumLabel = 'Edge-Router-Number'
                    dcrrNumLabel = 'RR-Number'
                    coreNumLabel = 'Core-Router-Number'
                    myDevice = ctx.getDevice()
                    myDeviceID = ctx.getDevice().id
                    hostnameLabel = 'device'
                    erDomainLabel = 'Edge-Router-Domain'
                    modelLabel = 'model'
                    eosVersionLabel = 'eos'
                    hostnameDeviceIDDict = {}
                    deviceIDNodeNumDict = {}
                    deviceIDSwitchConfigDict = {}
                    myerDomain = ""
                    erDomainToDeviceIDDict = {}
                    deviceIDHostnameDict = {}
                    highesterNumber = 0
                    highestrrNumber = 0
                    highestcoreNumber = 0

                    tsclient = ctx.getApiClient(tsgr.TagSearchStub)

                    tvs = tspb.TagValueSearchRequest(label=networkLabel, workspace_id=ctx.studio.workspaceId)
                    tvsresp = tsclient.GetTagValueSuggestions(tvs)
                    for tag in tvsresp.tags:
                      tagtmr = tspb.TagMatchRequestV2(query="%s:%s" % (tag.label, tag.value), workspace_id=ctx.studio.workspaceId)
                      tagresp = tsclient.GetTagMatchesV2(tagtmr)
                      for match in tagresp.matches:
                        if match.device.device_id == myDeviceID:
                          myPod = tag.value

                    tvs = tspb.TagValueSearchRequest(label=erNumLabel, workspace_id=ctx.studio.workspaceId)
                    tvsresp = tsclient.GetTagValueSuggestions(tvs)
                    for tag in tvsresp.tags:
                      tagtmr = tspb.TagMatchRequestV2(query="%s:%s" % (tag.label, tag.value), workspace_id=ctx.studio.workspaceId)
                      tagresp = tsclient.GetTagMatchesV2(tagtmr)
                      for match in tagresp.matches:
                        deviceIDNodeNumDict[match.device.device_id] = tag.value
                        sc = deviceIDSwitchConfigDict.get(match.device.device_id, SwitchConfig())
                        sc.Role = "er"
                        sc.NodeNum = int(tag.value)
                        if highesterNumber < sc.NodeNum:
                          highesterNumber = sc.NodeNum
                        deviceIDSwitchConfigDict[match.device.device_id] = sc
                        if match.device.device_id == myDeviceID:
                          myNodeNum = int(tag.value)
                          myRole = "er"

                    tvs = tspb.TagValueSearchRequest(label=coreNumLabel, workspace_id=ctx.studio.workspaceId)
                    tvsresp = tsclient.GetTagValueSuggestions(tvs)
                    for tag in tvsresp.tags:
                      tagtmr = tspb.TagMatchRequestV2(query="%s:%s" % (tag.label, tag.value), workspace_id=ctx.studio.workspaceId)
                      tagresp = tsclient.GetTagMatchesV2(tagtmr)
                      for match in tagresp.matches:
                        deviceIDNodeNumDict[match.device.device_id] = tag.value
                        sc = deviceIDSwitchConfigDict.get(match.device.device_id, SwitchConfig())
                        sc.Role = "core"
                        sc.NodeNum = int(tag.value)
                        if highestcoreNumber < sc.NodeNum:
                          highestcoreNumber = sc.NodeNum
                        deviceIDSwitchConfigDict[match.device.device_id] = sc
                        if match.device.device_id == myDeviceID:
                          myNodeNum = int(tag.value)
                          myRole = "core"

                    tvs = tspb.TagValueSearchRequest(label=dcrrNumLabel, workspace_id=ctx.studio.workspaceId)
                    tvsresp = tsclient.GetTagValueSuggestions(tvs)
                    for tag in tvsresp.tags:
                      tagtmr = tspb.TagMatchRequestV2(query="%s:%s" % (tag.label, tag.value), workspace_id=ctx.studio.workspaceId)
                      tagresp = tsclient.GetTagMatchesV2(tagtmr)
                      for match in tagresp.matches:
                        deviceIDNodeNumDict[match.device.device_id] = tag.value
                        sc = deviceIDSwitchConfigDict.get(match.device.device_id, SwitchConfig())
                        sc.Role = "rr"
                        sc.NodeNum = int(tag.value)
                        if highestrrNumber < sc.NodeNum:
                          highestrrNumber = sc.NodeNum
                        deviceIDSwitchConfigDict[match.device.device_id] = sc
                        if match.device.device_id == myDeviceID:
                          myNodeNum = int(tag.value)
                          myRole = "rr"

                    tvs = tspb.TagValueSearchRequest(label=hostnameLabel, workspace_id=ctx.studio.workspaceId)
                    tvsresp = tsclient.GetTagValueSuggestions(tvs)
                    for tag in tvsresp.tags:
                      tagtmr = tspb.TagMatchRequestV2(query="%s:%s" % (tag.label, tag.value), workspace_id=ctx.studio.workspaceId)
                      tagresp = tsclient.GetTagMatchesV2(tagtmr)
                      for match in tagresp.matches:
                        sc = deviceIDSwitchConfigDict.get(match.device.device_id, SwitchConfig())
                        sc.Hostname = tag.value
                        deviceIDSwitchConfigDict[match.device.device_id] = sc
                        hostnameDeviceIDDict[tag.value] = match.device.device_id
                        deviceIDHostnameDict[match.device.device_id] = tag.value
                        if match.device.device_id == myDeviceID:
                          myHostname = tag.value

                    tvs = tspb.TagValueSearchRequest(label=erDomainLabel, workspace_id=ctx.studio.workspaceId)
                    tvsresp = tsclient.GetTagValueSuggestions(tvs)
                    for tag in tvsresp.tags:
                      tagtmr = tspb.TagMatchRequestV2(query="%s:%s" % (tag.label, tag.value), workspace_id=ctx.studio.workspaceId)
                      tagresp = tsclient.GetTagMatchesV2(tagtmr)
                      for match in tagresp.matches:
                        erDomainList = erDomainToDeviceIDDict.get(tag.value)
                        if erDomainList == None :
                          erDomainList = []
                        erDomainList.append(match.device.device_id)
                        erDomainToDeviceIDDict[tag.value] = erDomainList
                        if match.device.device_id == myDeviceID:
                          myerDomain = tag.value

                    tvs = tspb.TagValueSearchRequest(label=eosVersionLabel, workspace_id=ctx.studio.workspaceId)
                    tvsresp = tsclient.GetTagValueSuggestions(tvs)
                    for tag in tvsresp.tags:
                      tagtmr = tspb.TagMatchRequestV2(query="%s:%s" % (tag.label, tag.value), workspace_id=ctx.studio.workspaceId)
                      tagresp = tsclient.GetTagMatchesV2(tagtmr)
                      for match in tagresp.matches:
                        sc = deviceIDSwitchConfigDict.get(match.device.device_id, SwitchConfig())
                        sc.EOSVersion = tag.value
                        deviceIDSwitchConfigDict[match.device.device_id] = sc
                        if match.device.device_id == myDeviceID:
                          myEOSVersion = tag.value

                    tvs = tspb.TagValueSearchRequest(label=modelLabel, workspace_id=ctx.studio.workspaceId)
                    tvsresp = tsclient.GetTagValueSuggestions(tvs)
                    for tag in tvsresp.tags:
                      tagtmr = tspb.TagMatchRequestV2(query="%s:%s" % (tag.label, tag.value), workspace_id=ctx.studio.workspaceId)
                      tagresp = tsclient.GetTagMatchesV2(tagtmr)
                      for match in tagresp.matches:
                        sc = deviceIDSwitchConfigDict.get(match.device.device_id, SwitchConfig())
                        sc.Model = tag.value
                        deviceIDSwitchConfigDict[match.device.device_id] = sc
                        if match.device.device_id == myDeviceID:
                          myModel = tag.value

                    if not myPod or not myNodeNum:
                        return

                    def create_tag(tag_key):
                        '''
                        tag_key is a TagKey
                        '''
                        tcsr = TagConfigSetRequest()
                        tcsr.value.key.workspace_id.value = tag_key.workspace_id.value
                        tcsr.value.key.element_type = tag_key.element_type
                        tcsr.value.key.label.value = tag_key.label.value
                        tcsr.value.key.value.value = tag_key.value.value
                        client = ctx.getApiClient(TagConfigServiceStub)
                        client.Set(tcsr)

                    def apply_tag(tag_assignment_key):
                        '''
                        tag_assignment_key is a TagAssignmentKey
                        '''
                        tacsr = TagAssignmentConfigSetRequest()
                        tacsr.value.key.workspace_id.value = tag_assignment_key.workspace_id.value
                        tacsr.value.key.element_type = tag_assignment_key.element_type
                        tacsr.value.key.label.value = tag_assignment_key.label.value
                        tacsr.value.key.value.value = tag_assignment_key.value.value
                        tacsr.value.key.device_id.value = tag_assignment_key.device_id.value
                        tacsr.value.key.interface_id.value = tag_assignment_key.interface_id.value
                        tacsr.value.remove.value = False
                        client = ctx.getApiClient(TagAssignmentConfigServiceStub)
                        client.Set(tacsr)

                    def remove_tag(tag_assignment_key):
                        '''
                        tag_assignment_key is a TagAssignmentKey
                        '''
                        tacsr = TagAssignmentConfigSetRequest()
                        tacsr.value.key.workspace_id.value = tag_assignment_key.workspace_id.value
                        tacsr.value.key.element_type = tag_assignment_key.element_type
                        tacsr.value.key.label.value = tag_assignment_key.label.value
                        tacsr.value.key.value.value = tag_assignment_key.value.value
                        tacsr.value.key.device_id.value = tag_assignment_key.device_id.value
                        tacsr.value.key.interface_id.value = tag_assignment_key.interface_id.value
                        tacsr.value.remove.value = True
                        client = ctx.getApiClient(TagAssignmentConfigServiceStub)
                        client.Set(tacsr)

                    def get_tag_values_applied_to_device(tag_assignment_key):
                        label = tag_assignment_key.label.value
                        value = tag_assignment_key.value.value
                        device_id = tag_assignment_key.device_id.value
                        workspace_id = tag_assignment_key.workspace_id.value
                        tsclient = ctx.getApiClient(tsgr.TagSearchStub)
                        matching_tags = []
                        tvsr = tspb.TagValueSearchRequest(label=label, workspace_id=workspace_id, topology_studio_request=True)
                        for tag in tsclient.GetTagValueSuggestions(tvsr).tags:
                          if not tag.value:
                            continue
                          query= "{}:\"{}\" AND device:{}".format(tag.label, tag.value, device_id)
                          tagmr = tspb.TagMatchRequestV2(query=query, workspace_id=workspace_id, topology_studio_request=True)
                          tagmresp =  tsclient.GetTagMatchesV2(tagmr)
                          for match in tagmresp.matches:
                            if match.device.device_id == device_id:
                              matching_tags.append(tag)
                        return matching_tags

                    def set_bgp_tags(ASN, Lo0):
                            tag_labels = {"router_bgp.as": ASN, "router_bgp.router_id": Lo0}
                            for label, config_path in tag_labels.items():
                                tag_key = TagKey()
                                tag_key.workspace_id.value = workspace_id=ctx.studio.workspaceId
                                tag_key.element_type = 1
                                tag_key.label.value = label
                                tag_key.value.value = str(config_path)
                                create_tag(tag_key)

                                tag_assignment_key = TagAssignmentKey()
                                tag_assignment_key.workspace_id.value = workspace_id=ctx.studio.workspaceId
                                tag_assignment_key.element_type = 1
                                tag_assignment_key.label.value = label
                                tag_assignment_key.value.value = str(config_path)
                                tag_assignment_key.device_id.value = ctx.getDevice().id
                                apply_tag(tag_assignment_key)

                                tag_assignment_key = TagAssignmentKey()
                                tag_assignment_key.workspace_id.value = workspace_id=ctx.studio.workspaceId
                                tag_assignment_key.element_type = 1
                                tag_assignment_key.label.value = label
                                tag_assignment_key.device_id.value =  ctx.getDevice().id
                                applied_tags = get_tag_values_applied_to_device(tag_assignment_key)
                                for tag in applied_tags:
                                    if tag.value != str(config_path):
                                        tag_assignment_key.value.value = tag.value
                                        remove_tag(tag_assignment_key)


                    podsInputs = pods.resolve()
                    igpOSPF = False
                    igpIsis = False
                    igp = podsInputs["pod"]["igp"]
                    if igp == "OSPF":
                      igpOSPF = True
                    if igp == "ISIS":
                      igpIsis = True
                    redisConnected = False
                    redCon = podsInputs["pod"]["redistributeConnected"]
                    if redCon == "ENABLED":
                      redisConnected = True
                    redisStatic = False
                    redStat = podsInputs["pod"]["redistributeStatic"]
                    if redStat == "ENABLED":
                      redisStatic = True
                    vlans = []
                    vxlan = False
                    evpnEnabled = False
                    evpnVxlan = podsInputs["pod"]["commonBGPConfig"]["evpnAndVxlan"]
                    if evpnVxlan == "ENABLED":
                      evpnEnabled = True
                      vxlan = True
                    lacpmode = False
                    lacp = podsInputs["pod"]["commonMlagConfig"]["lacpMode"]
                    if lacp == "ACTIVE":
                      lacpmode = True

                    erDomains = podsInputs["pod"]["erDomains"].resolve()
                    for key in deviceIDSwitchConfigDict:
                      sc = deviceIDSwitchConfigDict[key]
                      if sc.Role == "rr":
                        sc.ASN = podsInputs["pod"]["commonBGPConfig"]["rrAS"]
                        sc.Loopback0IP = podsInputs["pod"]["rrs"].resolve(sc.Hostname)["rrInterfaceParams"]["loopback0Address"]
                      else :
                        erASN = podsInputs["pod"]["commonBGPConfig"]["rrAS"]
                        sc.ASN = str(erASN)
                        if sc.Role == "er":
                          sc.Loopback0IP = erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["loopback0Address"]
                          if vxlan == True:
                            sc.LogicalVTEP = erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["loopback1Address"]
                        if sc.Role == "core":
                          sc.Loopback0IP =  podsInputs["pod"]["pRouters"].resolve()["pLinkDetails"]["loopback0Address"]


                    rrs = podsInputs["pod"]["rrs"].resolve()
                    rrInterface = rrs["rrInterfaceParams"]["rrDownlink"]

                    mySC = deviceIDSwitchConfigDict[myDeviceID]

                    rrBGPDynamicNeighbors = podsInputs["pod"]["commonBGPConfig"]["rrBGPDynamicNeighbors"]
                    asnBGPPeerDict = {}
                    mySCList = []

                    if myRole == "rr":
                      isisNet = get_isis_addr(49, 1, podsInputs["pod"]["rrs"].resolve()["rrInterfaceParams"]["loopback0Address"])
                      if rrInterface:
                        for intf in myDevice.getInterfaces():
                          intfName = intf.name
                          val = val = rrInterface.resolve(intfName, strict=True)
                          if not val:
                            continue
                          intf = InterfaceConfig()
                          intf.Port = intfName
                          intf.NeighborHostname = val["rrNeighborParams"]["rrLinkPeer"]
                          intf.NeighborPort = val["rrNeighborParams"]["rrLinkPeerInterface"]
                          neighborDeviceID = hostnameDeviceIDDict[intf.NeighborHostname]
                          neighborNodeNum = deviceIDNodeNumDict.get(neighborDeviceID)
                          assert neighborNodeNum, "neighbor missing: %s" % neighborDeviceID

                          intf.IPAddress = val["rrNeighborParams"]["rripAddress"]
                          intf.Mask = val["rrNeighborParams"]["rrsubnetMask"]
                          mySC.Interfaces.append(intf)
                          neighborSC = deviceIDSwitchConfigDict[neighborDeviceID]
                          neighborIntf = InterfaceConfig()
                          neighborIntf.Port = intf.NeighborPort
                          neighborIntf.NeighborPort = intf.Port

                          neighborSC.Interfaces.append(neighborIntf)
                          if not rrBGPDynamicNeighbors:
                            scList = asnBGPPeerDict.get(neighborSC.ASN)
                            if scList == None:
                              scList = []
                            scList.append(neighborSC)
                            asnBGPPeerDict[neighborSC.ASN] = scList
                      for key in asnBGPPeerDict :
                        scList = asnBGPPeerDict.get(key)
                        peerGroup = BGPPeerGroup()
                        vpnPeerGroup = BGPPeerGroup()
                        vpnPeerGroup.EVPN  = True
                        peerGroupNum = str(scList[0].NodeNum // 2 + scList[0].NodeNum%2)
                        ers = len(scList)
                        if ers == 2:
                          peerGroup.Name = "PEPair" + peerGroupNum
                          vpnPeerGroup.Name = "PEPair" + peerGroupNum
                        else:
                          peerGroup.Name = "PE" + peerGroupNum
                          vpnPeerGroup.Name = "PE" + peerGroupNum
                        peerGroup.NeighborASN = vpnPeerGroup.NeighborASN = key
                        neighborLoopbacks = []
                        neighborIntfs = []
                        for sc in scList :
                          bgpPeerIntf  = NeighborIntf()
                          evpnPeerIntf = NeighborIntf()
                          evpnPeerIntf.Host = sc.Hostname
                          bgpPeerIntf.Host = sc.Hostname
                          evpnPeerIntf.Port = "Loopback0"
                          bgpPeerIntf.IPAddress = sc.Interfaces[0].IPAddress
                          evpnPeerIntf.IPAddress = sc.Loopback0IP
                          neighborIntfs.append(bgpPeerIntf)
                          neighborLoopbacks.append(evpnPeerIntf)
                        peerGroup.NeighborIntfs = neighborIntfs
                        vpnPeerGroup.NeighborIntfs = neighborLoopbacks
                        mySC.BGPPeerGroups.append(peerGroup)
                        mySC.BGPPeerGroups.append(vpnPeerGroup)


                    mlagEnabled = False
                    mlagSubnetMask = 31
                    commonMlagConfig = podsInputs["pod"]["commonMlagConfig"]

                    if myRole == "er":
                      mlag = Mlag()
                      mySC.MlagNetwork = ipaddress.ip_network(commonMlagConfig["mlagLinkSubnet"])
                      mySC.MlagIPAddr = mySC.MlagNetwork[(myNodeNum % 2) - 1]
                      mySC.MlagNetmask = mlagSubnetMask
                      mySC.MlagIPPeerAddr = mySC.MlagNetwork[myNodeNum % 2]
                      mlagIntf1 = InterfaceConfig()
                      mlagIntf2 = InterfaceConfig()
                      if podsInputs["pod"]["erDomains"].resolve()["erDomain"]["erDetails"].resolve()["erLinkDetails"]["erMLAGInterface1"]:
                        mlagIntf1.Port = podsInputs["pod"]["erDomains"].resolve()["erDomain"]["erDetails"].resolve()["erLinkDetails"]["erMLAGInterface1"]
                      if podsInputs["pod"]["erDomains"].resolve()["erDomain"]["erDetails"].resolve()["erLinkDetails"]["erMLAGInterface2"]:
                        mlagIntf2.Port = podsInputs["pod"]["erDomains"].resolve()["erDomain"]["erDetails"].resolve()["erLinkDetails"]["erMLAGInterface2"]
                      if mlagIntf1.Port != "" :
                        mlag.Interfaces.append(mlagIntf1)
                      if mlagIntf2.Port != "" :
                        mlag.Interfaces.append(mlagIntf2)
                      if mlagIntf1.Port !="" or mlagIntf2.Port != "":
                        mySC.MlagMembers = mlag
                        mlagEnabled = True
                        mlagedDevices = erDomainToDeviceIDDict.get(myerDomain)
                        if mlagedDevices != None and len(mlagedDevices) == 2 :
                          peerDeviceID = ""
                          bgpPeerIntf  = NeighborIntf()
                          if mlagedDevices[0] == myDeviceID:
                            peerDeviceID = mlagedDevices[1]
                          elif mlagedDevices[1] == myDeviceID:
                            peerDeviceID = mlagedDevices[0]
                          bgpPeerIntf.Host = deviceIDHostnameDict[peerDeviceID]
                          mySC.MlagPeerName = deviceIDHostnameDict[peerDeviceID]
                          bgpPeerIntf.Port = "MLAG"
                          bgpPeerIntf.IPAddress = mySC.MlagIPPeerAddr
                          bgpPeerGroup = BGPPeerGroup()
                          bgpPeerGroup.Name = "Peer_ER"
                          bgpPeerGroup.NeighborASN = mySC.ASN
                          bgpPeerGroup.Peerer = True
                          bgpPeerGroup.NeighborIntfs.append(bgpPeerIntf)
                          mySC.BGPPeerGroups.append(bgpPeerGroup)
                      isisNet = get_isis_addr(49, 1, erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["loopback0Address"])

                      if erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["rrHostnames"]:
                        for intf in myDevice.getInterfaces():
                          intfName = intf.name
                          val = []
                          for rr in erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["rrHostnames"]:
                            if intfName == rr.localInterface:
                              val = rr
                          if val:
                            intf = InterfaceConfig()
                            intf.Port = intfName
                            intf.NeighborHostname = val.rrHostname
                            intf.NeighborPort = val.localInterface
                            neighborDeviceID = hostnameDeviceIDDict[intf.NeighborHostname]
                            neighborNodeNum = deviceIDNodeNumDict.get(neighborDeviceID)
                            assert neighborNodeNum, "rr neighbor missing: %s" % neighborDeviceID

                            intf.IPAddress = val.localIpAddress
                            intf.Mask = val.localSubnetMask
                            mySC.Interfaces.append(intf)
                            neighborSC = deviceIDSwitchConfigDict[neighborDeviceID]
                            neighborIntf = InterfaceConfig()
                            neighborIntf.Port = intf.NeighborPort
                            neighborIntf.NeighborPort = intf.Port
                            neighborIntf.IPNetwork = intf.IPNetwork

                            neighborIntf.Mask = fabricSubnetMask
                            neighborSC.Interfaces.append(neighborIntf)
                            scList = asnBGPPeerDict.get(neighborSC.ASN)
                            if scList == None:
                              scList = []
                            scList.append(neighborSC)
                            asnBGPPeerDict[neighborSC.ASN] = scList
                        index = 0
                        for rr in erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["rrHostnames"]:
                          val = []
                          if rr.localInterface == "":
                            port = str(index)
                            rr.localInterface = port
                            val = rr
                            index = index = 1
                          if val:
                            intf = InterfaceConfig()
                            intf.Port = rr.localInterface
                            intf.NeighborHostname = val.rrHostname
                            intf.NeighborPort = val.localInterface
                            neighborDeviceID = hostnameDeviceIDDict[intf.NeighborHostname]
                            neighborNodeNum = deviceIDNodeNumDict.get(neighborDeviceID)
                            assert neighborNodeNum, "rr neighbor missing: %s" % neighborDeviceID

                            intf.IPAddress = val.localIpAddress
                            intf.Mask = val.localSubnetMask
                            mySC.Interfaces.append(intf)
                            neighborSC = deviceIDSwitchConfigDict[neighborDeviceID]
                            neighborIntf = InterfaceConfig()
                            neighborIntf.Port = intf.NeighborPort
                            neighborIntf.NeighborPort = intf.Port
                            neighborIntf.IPNetwork = intf.IPNetwork

                            neighborIntf.Mask = fabricSubnetMask
                            neighborSC.Interfaces.append(neighborIntf)
                            scList = asnBGPPeerDict.get(neighborSC.ASN)
                            if scList == None:
                              scList = []
                            scList.append(neighborSC)
                            asnBGPPeerDict[neighborSC.ASN] = scList
                      pe2peLink = erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["erneighbors"]
                      if pe2peLink:
                        for intf in myDevice.getInterfaces():
                          intfName = intf.name
                          val = pe2peLink.resolve(intfName, strict=True)
                          if val:
                            intf = InterfaceConfig()
                            intf.Port = intfName
                            intf.NeighborHostname = val["erneighborDetails"]["erhostName"]
                            intf.NeighborPort = val["erneighborDetails"]["erinterface"]
                            intf.IPAddress = val["erneighborDetails"]["eripAddress"]
                            intf.Mask = val["erneighborDetails"]["ersubnetMask"]
                            neighborDeviceID = hostnameDeviceIDDict[intf.NeighborHostname]
                            neighborNodeNum = deviceIDNodeNumDict.get(neighborDeviceID)
                            assert neighborNodeNum, "neighbor missing: %s" % neighborDeviceID
                            mySC.Interfaces.append(intf)

                      staticRoutes = erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["staticRoutes"]
                      for route in staticRoutes:
                        prefix = StaticRoutes()
                        prefix.Prefix = route["prefix"]
                        prefix.NextHop = route["nextHop"]
                        prefix.Name = route["name"]
                        mySC.StaticRoutes.append(prefix)

                      prefixList = erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["prefixLists"]
                      for name in prefixList:
                        pl = PrefixLists()
                        pl.Name = name["prefixListName"]
                        pllist = []
                        pllist = name["seqNums"]
                        plName = []
                        for seq in pllist:
                          plname = PLName()
                          plname.SeqNum = seq.seqNum
                          plname.PermitDeny = seq.permitDeny
                          plname.Prefix = seq.prefix
                          plname.PrefixLength = seq.prefixLength
                          plname.MaskLength = seq.maskLength
                          plName.append(plname)
                        pl.PLName = plName
                        mySC.PrefixLists.append(pl)

                      peerGroups = erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["peerGroups"]
                      for name in peerGroups:
                        pg = PeerGroups()
                        pg.PeerGroupName = name["peerGroupName"]
                        pg.PeerASN = name["peerAsn"]
                        pg.Redis = name["redistributeRoutes"]
                        pg.Description = name["description"]
                        pg.LocalAS = name["localAs"]
                        pg.NextHopSelf = name["nextHopSelf"]
                        pg.BFD = name["bfd"]
                        pg.eBGPMultiHopTTL = name["eBgpMultiHopTtl"]
                        pg.MaxAcceptedRoutes = name["maximumAcceptedRoutes"]
                        eBgpNeighbors = []
                        Neighbors = name["eBgpNeighbors"]
                        for neighbor in Neighbors:
                          details = eBGPNeighbors()
                          details.NeighborIp = neighbor["neighborIp"]
                          details.PeerASN = neighbor["peerAsn"]
                          eBgpNeighbors.append(details)
                        pg.eBGPNeighbors = eBgpNeighbors
                        mySC.PeerGroups.append(pg)

                        aggregateRoutes = []
                        aggregates = name["aggregateRoutes"]
                        for route in aggregates:
                          details = Aggregates()
                          details.Route = route["aggregateRoute"]
                          aggregateRoutes.append(details)
                        pg.Aggregates = aggregateRoutes
                        mySC.PeerGroups.append(pg)

                        routeMapIn = []
                        routeMapIn = name["routeMapIn"]
                        rmIn = []
                        for seq in routeMapIn:
                          rmi = RouteMapIn()
                          rmi.SeqNum = seq.seqNum
                          rmi.PermitDeny = seq.permitDeny
                          rmi.PrefixListIn = seq.prefixList
                          rmi.MatchCommunity = seq.matchCommunity
                          rmi.SetCommunity = seq.setCommunity
                          rmi.LocalPref = seq.localPref
                          rmi.PrependRepeat = seq.asPathPrependRepeat
                          rmIn.append(rmi)
                        pg.RouteMapIn = rmIn
                        mySC.PeerGroups.append(pg)
                        routeMapOut = []
                        routeMapOut = name["routeMapOut"]
                        rmOut = []
                        for seq in routeMapOut:
                          rmo = RouteMapOut()
                          rmo.SeqNum = seq.seqNum
                          rmo.PermitDeny = seq.permitDeny
                          rmo.PrefixListOut = seq.prefixList
                          rmo.MatchCommunity = seq.matchCommunity
                          rmo.SetCommunity = seq.setCommunity
                          rmo.PrependRepeat = seq.asPathPrependRepeat
                          rmOut.append(rmo)
                        pg.RouteMapOut = rmOut
                        mySC.PeerGroups.append(pg)

                      p2peLink = podsInputs["pod"]["pRouters"].resolve()["pLinkDetails"]["pneighbor"]
                      if p2peLink :
                        for intf in myDevice.getInterfaces():
                          intfName = intf.name
                          val = p2peLink.resolve(intfName, strict=True)
                          if val:
                            intf = InterfaceConfig()
                            intf.Port = intfName
                            intf.NeighborHostname = val["pneighborDetails"]["phostName"]

                      externalInterfaces = erDomains["erDomain"]["erDetails"].resolve()["erLinkDetails"]["externalInterfaces"]
                      if externalInterfaces:
                         for intf in myDevice.getInterfaces():
                          intfName = intf.name
                          val = externalInterfaces.resolve(intfName, strict=True)
                          if val:
                            details = ExternalInterfaces()
                            details.InterfaceName = intfName
                            details.Description = val["externalInterfaceGroup"]["description"]
                            details.IPPrefix = val["externalInterfaceGroup"]["ipPrefix"]
                            details.VlanID = val["externalInterfaceGroup"]["vlanId"]
                            mySC.ExternalInterfaces.append(details)

                      for key in asnBGPPeerDict :
                        scList = asnBGPPeerDict.get(key)
                        peerGroup = BGPPeerGroup()
                        vpnPeerGroup = BGPPeerGroup()
                        vpnPeerGroup.EVPN  = True
                        peerGroup.Name = "RR"
                        vpnPeerGroup.Name = "RR"
                        peerGroup.NeighborASN = key
                        vpnPeerGroup.NeighborASN = key
                        neighborLoopbacks = []
                        neighborIntfs = []
                        for sc in scList :
                          bgpPeerIntf  = NeighborIntf()
                          evpnPeerIntf = NeighborIntf()
                          evpnPeerIntf.Host = sc.Hostname
                          bgpPeerIntf.Host = sc.Hostname
                          bgpPeerIntf.Port = sc.Interfaces[0].Port
                          evpnPeerIntf.Port = "Loopback0"
                          bgpPeerIntf.IPAddress = sc.Interfaces[0].IPAddress
                          evpnPeerIntf.IPAddress = sc.Loopback0IP
                          neighborIntfs.append(bgpPeerIntf)
                          neighborLoopbacks.append(evpnPeerIntf)
                        peerGroup.NeighborIntfs = neighborIntfs
                        vpnPeerGroup.NeighborIntfs = neighborLoopbacks
                        mySC.BGPPeerGroups.append(peerGroup)
                        mySC.BGPPeerGroups.append(vpnPeerGroup)

                    if myRole == "core":
                      isisNet = get_isis_addr(49, 1, podsInputs["pod"]["pRouters"].resolve()["pLinkDetails"]["loopback0Address"])
                      p2rrInterface = podsInputs["pod"]["pRouters"].resolve()["pLinkDetails"]["rRs"]
                      if p2rrInterface:
                        for intf in myDevice.getInterfaces():
                          intfName = intf.name
                          val = p2rrInterface.resolve(intfName, strict=True)
                          if val:
                            intf = InterfaceConfig()
                            intf.Port = intfName
                            intf.NeighborHostname = val["prrDetails"]["prrhostName"]
                            intf.NeighborPort = val["prrDetails"]["prrinterface"]
                            neighborDeviceID = hostnameDeviceIDDict[intf.NeighborHostname]
                            neighborNodeNum = deviceIDNodeNumDict.get(neighborDeviceID)
                            assert neighborNodeNum, "rr neighbor missing: %s" % neighborDeviceID

                            intf.IPAddress = val["prrDetails"]["prripAddress"]
                            intf.Mask = val["prrDetails"]["prrsubnetMask"]
                            mySC.Interfaces.append(intf)
                            neighborSC = deviceIDSwitchConfigDict[neighborDeviceID]
                            neighborIntf = InterfaceConfig()
                            neighborIntf.Port = intf.NeighborPort
                            neighborIntf.NeighborPort = intf.Port
                            neighborIntf.IPNetwork = intf.IPNetwork

                            neighborSC.Interfaces.append(neighborIntf)
                            scList = asnBGPPeerDict.get(neighborSC.ASN)
                            if scList == None:
                              scList = []
                            scList.append(neighborSC)
                            asnBGPPeerDict[neighborSC.ASN] = scList
                      p2peLink = podsInputs["pod"]["pRouters"].resolve()["pLinkDetails"]["pneighbor"]
                      if p2peLink :
                        for intf in myDevice.getInterfaces():
                          intfName = intf.name
                          val = p2peLink.resolve(intfName, strict=True)
                          if val:
                            intf = InterfaceConfig()
                            intf.Port = intfName
                            intf.NeighborHostname = val["pneighborDetails"]["phostName"]
                            intf.NeighborPort = val["pneighborDetails"]["pinterface"]
                            intf.IPAddress = val["pneighborDetails"]["pipAddress"]
                            intf.Mask = val["pneighborDetails"]["psubnetMask"]
                            neighborDeviceID = hostnameDeviceIDDict[intf.NeighborHostname]
                            neighborNodeNum = deviceIDNodeNumDict.get(neighborDeviceID)
                            assert neighborNodeNum, "core neighbor missing: %s" % neighborDeviceID
                            mySC.Interfaces.append(intf)
                      for key in asnBGPPeerDict :
                        scList = asnBGPPeerDict.get(key)
                        peerGroup = BGPPeerGroup()
                        vpnPeerGroup = BGPPeerGroup()
                        vpnPeerGroup.EVPN  = True
                        peerGroup.Name = "RR"
                        vpnPeerGroup.Name = "RR"
                        peerGroup.NeighborASN = key
                        vpnPeerGroup.NeighborASN = key
                        neighborLoopbacks = []
                        neighborIntfs = []
                        for sc in scList :
                          bgpPeerIntf  = NeighborIntf()
                          evpnPeerIntf = NeighborIntf()
                          evpnPeerIntf.Host = sc.Hostname
                          bgpPeerIntf.Host = sc.Hostname
                          bgpPeerIntf.Port = sc.Interfaces[0].Port
                          evpnPeerIntf.Port = "Loopback0"
                          bgpPeerIntf.IPAddress = sc.Interfaces[0].IPAddress
                          evpnPeerIntf.IPAddress = sc.Loopback0IP
                          neighborIntfs.append(bgpPeerIntf)
                          neighborLoopbacks.append(evpnPeerIntf)
                        peerGroup.NeighborIntfs = neighborIntfs
                        vpnPeerGroup.NeighborIntfs = neighborLoopbacks
                        mySC.BGPPeerGroups.append(peerGroup)
                        mySC.BGPPeerGroups.append(vpnPeerGroup)


                    internalVlan = commonMlagConfig["internalVlan"]
                    mlagPortChannelId = commonMlagConfig["mlagPortChannelId"]
                    virtualRouterMac = commonMlagConfig["virtualRouterMac"]
                    if mySC.ASN:
                      if mySC.Loopback0IP:
                        set_bgp_tags(mySC.ASN, mySC.Loopback0IP)
                    %>

                    %if evpnEnabled:
                    service routing protocols model multi-agent
                    %endif
                    !
                    !-- Fabric interfaces --!
                    %for intf in mySC.Interfaces:
                    %  if  intf.Port != "0":
                    %  if  intf.Port != "1":
                    %  if  intf.Port != "2":
                    %  if  intf.Port != "3":
                    interface ${intf.Port}
                      description To ${intf.NeighborHostname}-${intf.NeighborPort}
                    %    if mySC.Model != "vEOS" and mySC.Model != "vEOS-lab":
                    %      if mySC.Model != "cEOSLab":
                      mtu 9214
                    %      endif
                    %    endif

                      no switchport
                      ip address ${intf.IPAddress}/${intf.Mask}
                    %    if igpOSPF:
                      ip ospf network point-to-point
                      ip ospf area 0
                    %      if ospfAuthKey:
                      ip ospf authentication message-digest
                      ip ospf message-digest-key 1 md5 7 ${ospfAuthKey}
                    %      endif
                    %    endif
                    %    if igpIsis:
                      isis enable 1
                      isis network point-to-point
                      !
                    %    endif
                    !
                    %  endif
                    %  endif
                    %  endif
                    %  endif
                    %endfor
                    ${igpConfig()}
                    %if myRole == "er":
                      %if mlagEnabled:
                    ${mlagConfig()}
                      %endif
                    !
                    ${eriBGPConfig()}
                    !
                    ${StaticRouteConfig()}
                    ${PrefixListConfig()}
                    ${RouteMapConfig()}
                    ${eBGPNeighborsConfig()}
                    ${externalInterfacesConfig()}
                    %endif
                    %if myRole == "rr":
                    ${rriBGPConfig()}
                    %endif

                    !-- MLAG Section --!
                    <%def name="mlagConfig()">
                    no spanning-tree vlan-id ${internalVlan}
                    %for mlag in mySC.MlagMembers.Interfaces:
                    interface ${mlag.Port}
                      description MLAG-PEER-LINK to ${mySC.MlagPeerName}
                    %  if lacpmode == False:
                      channel-group ${mlagPortChannelId} mode on
                    %  else:
                      channel-group ${mlagPortChannelId} mode active
                    %  endif
                    !
                    %endfor
                    !-- MLAG configuration --!
                    interface Port-Channel ${mlagPortChannelId}
                      description MLAG-PEER-LINK
                      switchport
                      switchport mode trunk
                      switchport trunk group MLAG-PEER
                    !
                    interface Vlan ${internalVlan}
                      description MLAG to ${mySC.MlagPeerName}
                      no autostate
                      ip address ${mySC.MlagIPAddr}/${mySC.MlagNetmask}
                    %if mySC.Model != "vEOS" and mySC.Model != "vEOS-lab":
                    %  if mySC.Model != "cEOSLab":
                      mtu 9214
                    %  endif
                    %endif
                    %if igpOSPF:
                      ip ospf network point-to-point
                      ip ospf area 0
                    %endif
                    %if igpIsis:
                      isis enable 1
                      isis network point-to-point
                      !
                    %endif
                    !
                    vlan ${internalVlan}
                      name MLAG-PEER-VLAN
                      trunk group MLAG-PEER
                    !
                    mlag configuration
                      domain-id MLAG
                      local-interface Vlan${internalVlan}
                      peer-address ${mySC.MlagIPPeerAddr}
                      peer-link Port-Channel${mlagPortChannelId}
                      reload-delay mlag 300
                      reload-delay non-mlag 360
                    !
                    </%def>

                    !-- IGP Section --!

                    <%def name="igpConfig()">
                    %if mySC.Loopback0IP:
                    interface Loopback0
                      description Router ID
                      ip address ${mySC.Loopback0IP}/32
                    %  if igpOSPF:
                      ip ospf area 0
                    %  endif
                    %  if igpIsis:
                      !
                      isis enable 1
                      isis passive
                      !
                    %  endif
                    !
                    %endif
                    ip routing
                    !
                    %if igpOSPF:
                    router ospf 1
                    %  if mySC.Loopback0IP:
                    router-id ${mySC.Loopback0IP}
                    %  endif
                    bfd default
                    %  if redisConnected:
                    redistribute connected
                    %  endif
                    %  if redisStatic:
                    redistribute static
                    %  endif
                    %endif
                    %if igpIsis:
                    %  if isisNet != "49.0001.000...00":
                    router isis 1
                       net ${isisNet}
                       is-type level-2
                       advertise passive-only
                    %    if redisConnected:
                         redistribute connected
                    %    endif
                    %    if redisStatic:
                         redistribute static
                    %    endif
                       address-family ipv4 unicast
                       bfd all-interfaces
                       !
                    !
                    %  endif
                    %endif
                    </%def>

                    !-- BGP Section --!

                    <%def name="eriBGPConfig()">
                    !-- BGP EVPN configuration
                    %if vxlan:
                    interface vxlan 1
                      vxlan source-interface Loopback1
                      vxlan udp-port 4789
                    %  if mlagEnabled:
                      vxlan virtual-router encapsulation mac-address mlag-system-id
                    %  endif
                    !
                    %  if mySC.LogicalVTEP:
                    interface Loopback1
                      description VXLAN Tunnel Source
                      ip address ${mySC.LogicalVTEP}/32
                    %    if igpOSPF:
                      ip ospf area 0
                    %    endif
                    %    if igpIsis:
                      !
                      isis enable 1
                      isis passive
                      !
                    %    endif
                    !
                    %  endif
                    %endif

                    !
                    %if evpnEnabled:
                    router bgp ${mySC.ASN}
                    %  if mySC.Loopback0IP:
                      router-id ${mySC.Loopback0IP}
                    %  endif
                      maximum-paths 4 ecmp 4
                    %  if mySC.Model != "vEOS" and mySC.Model != "vEOS-lab":
                    %    if mySC.Model != "cEOSLab":
                      update wait-for-convergence
                      update wait-install
                    %    endif
                    %  endif
                    %  for peerGroup in mySC.BGPPeerGroups:
                    %    if peerGroup.EVPN:
                    %      if evpnEnabled:
                      neighbor ${peerGroup.Name} peer group
                      neighbor ${peerGroup.Name} remote-as ${peerGroup.NeighborASN }
                      neighbor ${peerGroup.Name} update-source Loopback0
                      neighbor ${peerGroup.Name} send-community extended
                      neighbor ${peerGroup.Name} maximum-routes  0 warning-limit 12000
                    %      endif
                    %    endif
                    %  endfor
                    %  for peerGroup in mySC.BGPPeerGroups:
                    %    for intf in peerGroup.NeighborIntfs:
                    %      if peerGroup.EVPN:
                          neighbor ${intf.IPAddress} peer group ${peerGroup.Name}
                          neighbor ${intf.IPAddress} description ${intf.Host}
                    %      endif

                    %    endfor
                    %  endfor
                    %  if evpnEnabled:
                      address-family evpn
                    %    for peerGroup in mySC.BGPPeerGroups:
                    %      if peerGroup.EVPN:
                        neighbor ${peerGroup.Name} activate
                      !
                    %      endif
                    %    endfor
                      address-family ipv4
                    %    for peerGroup in mySC.BGPPeerGroups:
                    %      if peerGroup.EVPN:
                        no neighbor ${peerGroup.Name} activate
                      !
                    %      endif
                    %    endfor
                    %  endif
                    %endif
                    </%def>

                    <%def name="rriBGPConfig()">
                    !-- BGP EVPN configuration
                    !
                    %if evpnEnabled:
                    %  if rrBGPDynamicNeighbors:
                    peer-filter PE-AS-Range
                      10 match as-range 1-65535 result accept
                    !
                    router bgp ${mySC.ASN}
                    %    if mySC.Loopback0IP:
                      router-id ${mySC.Loopback0IP}
                      bgp cluster-id ${mySC.Loopback0IP}
                    %    endif
                    %    if mySC.Model != "vEOS" and mySC.Model != "vEOS-lab":
                    %      if mySC.Model != "cEOSLab":
                      update wait-for-convergence
                      update wait-install
                    %      endif
                    %    endif

                      bgp log-neighbor-changes
                    %    if evpnEnabled:
                      neighbor iBGP peer group
                      neighbor iBGP send-community extended
                      neighbor iBGP maximum-routes 0 warning-limit 12000
                      neighbor iBGP update-source Loopback0
                      neighbor iBGP route-reflector-client
                      bgp route-reflector preserve-attributes always
                    %    endif
                    %    if evpnEnabled:
                      bgp listen range 0.0.0.0/0 peer-group iBGP peer-filter pe-AS-Range
                    %    endif
                    %    if evpnEnabled:
                      address-family evpn
                        neighbor iBGP activate
                        next-hop resolution disabled
                      !
                      address-family ipv4
                        no neighbor iBGP activate
                      !
                    %    endif
                    %  else:
                    router bgp ${mySC.ASN}
                      router-id ${mySC.Loopback0IP}
                    %    if  evpnEnabled:
                      neighbor iBGP peer group
                      neighbor iBGP route-reflector-client
                      neighbor iBGP update-source Loopback0
                      neighbor iBGP send-community extended
                      neighbor iBGP maximum-routes 0 warning-limit 12000
                    %    endif
                    %    for peerGroup in mySC.BGPPeerGroups:
                    %      if peerGroup.EVPN:
                    %        if evpnEnabled:
                      neighbor iBGP remote-as ${peerGroup.NeighborASN}
                    %          for intf in peerGroup.NeighborIntfs:
                      neighbor ${intf.IPAddress} peer group iBGP
                    %          endfor
                    %        endif
                    %      endif
                    %    endfor
                    %    if evpnEnabled:
                      address-family evpn
                        neighbor iBGP activate
                            next-hop resolution disabled
                      !
                      address-family ipv4
                        no neighbor iBGP activate
                      !
                    %    endif
                    %  endif
                    %endif
                    !
                    </%def>
                    ## ----- Static Routes -----##
                    <%def name="StaticRouteConfig()">
                    % for prefix in mySC.StaticRoutes:
                    ip route ${prefix.Prefix} ${prefix.NextHop} name ${prefix.Name}
                    %endfor
                    !
                    </%def>
                    ## ---- PREFIX LISTS --------##
                    <%def name="PrefixListConfig()">
                    %for name in mySC.PrefixLists:
                    ip prefix-list ${ name.Name }
                    %  for seq in name.PLName:
                    seq ${seq.SeqNum} ${ seq.PermitDeny } ${ seq.Prefix } ${ seq.PrefixLength} ${ seq.MaskLength}
                    %  endfor
                    !
                    %endfor
                    !
                    </%def>
                    ## ---- ROUTE MAP --------##
                    <%def name="RouteMapConfig()">
                    %for peergroup in mySC.PeerGroups:
                    %  if peergroup.RouteMapIn:
                    %    for routemapi in peergroup.RouteMapIn:
                    route-map  ${ peergroup.PeerGroupName }-in ${ routemapi.PermitDeny } ${ routemapi.SeqNum }
                    %       if routemapi.PrefixListIn:
                    match ip address prefix-list ${ routemapi.PrefixListIn}
                    %       endif
                    %       if routemapi.MatchCommunity:
                    match community ${ routemapi.MatchCommunity}
                    %       endif
                    %       if routemapi.SetCommunity:
                    set community ${ routemapi.SetCommunity}
                    %       endif
                    %       if routemapi.LocalPref:
                    set local-preference ${ routemapi.LocalPref}
                    %       endif
                    %       if routemapi.PrependRepeat:
                    set as-path prepend auto repeat ${ routemapi.PrependRepeat }
                    %       endif
                    !
                    %     endfor
                    %   endif
                    %   if peergroup.RouteMapOut:
                    %     for routemapo in peergroup.RouteMapOut:
                    route-map  ${ peergroup.PeerGroupName }-out ${ routemapo.PermitDeny} ${ routemapo.SeqNum}
                    %       if routemapo.PrefixListOut:
                    match ip address prefix-list ${ routemapo.PrefixListOut }
                    %       endif
                    %       if routemapo.MatchCommunity:
                    match community ${ routemapo.MatchCommunity}
                    %       endif
                    %       if routemapo.SetCommunity:
                    set community ${ routemapo.SetCommunity}
                    %       endif
                    %       if routemapo.PrependRepeat:
                    set as-path prepend auto repeat ${ routemapo.PrependRepeat }
                    %       endif
                    !
                    %     endfor
                    %   endif
                    % endfor
                    !
                    </%def>
                    ## ---- EXTERNAL BGP NEIGHBORS --------##
                    <%def name="eBGPNeighborsConfig()">

                    %if mySC.PeerGroups or mySC.eBGPNeighbors:
                    router bgp ${mySC.ASN}
                    <% redistribute = False %>
                    %  for peer_group in mySC.PeerGroups:
                    %    if peer_group.Description:
                    neighbor ${ peer_group.PeerGroupName } description ${ peer_group.Description }
                    %    endif
                    neighbor ${ peer_group.PeerGroupName } peer group
                    %    if peer_group.PeerASN:
                    neighbor ${ peer_group.PeerGroupName } remote-as ${ peer_group.PeerASN }
                    %    endif
                    %    if peer_group.LocalAS:
                    neighbor ${ peer_group.PeerGroupName } local-as ${ peer_group.LocalAS } no-prepend replace-as
                    %    endif
                    %    if peer_group.NextHopSelf == "ENABLED":
                    neighbor ${ peer_group.PeerGroupName } next-hop-self
                    %    endif
                    %    if peer_group.BFD == "ENABLED":
                    neighbor ${ peer_group.PeerGroupName }  bfd
                    %    endif
                    %    if peer_group.eBGPMultiHopTTL:
                    neighbor ${ peer_group.PeerGroupName } ebgp-multihop ${ peer_group.eBGPMultiHopTTL }
                    %    endif
                    neighbor ${ peer_group.PeerGroupName } send-community
                    %    if peer_group.MaxAcceptedRoutes:
                    neighbor ${ peer_group.PeerGroupName } maximum-accepted-routes ${ peer_group.MaxAcceptedRoutes  }
                    %    endif
                    %    if peer_group.RouteMapIn:
                    neighbor ${ peer_group.PeerGroupName } route-map ${ peer_group.PeerGroupName }-in  in
                    %    endif
                    %    if peer_group.RouteMapOut:
                    neighbor ${ peer_group.PeerGroupName } route-map ${ peer_group.PeerGroupName }-out  out
                    %    endif
                    %    if peer_group.eBGPNeighbors:
                    %      for neighbor in peer_group.eBGPNeighbors:
                    neighbor ${ neighbor.NeighborIp } peer group ${ peer_group.PeerGroupName }
                    %        if neighbor.PeerASN:
                    neighbor ${ neighbor.NeighborIp } remote-as ${ neighbor.PeerASN }
                    %        endif
                    %      endfor
                    %    endif
                    %    if peer_group.Aggregates:
                    %      for route in peer_group.Aggregates:
                    aggregate-address ${ route.Route } summary-only
                    %      endfor
                    %    endif
                    %    if peer_group.Redis == "ENABLED":
                    <% redistribute = True %>
                    %    endif
                    %  endfor
                    %  if redistribute == True:
                    redistribute connected
                    redistribute static
                    %    if igpOSPF:
                    redistribute ospf match internal
                    redistribute ospf match external
                    redistribute ospf match nssa-external
                    !
                    router ospf 1
                    redistribute bgp
                    %    endif
                    %    if igpISIS:
                    redistribute isis level-2
                    !
                    router isis 1
                    redistribute bgp
                    %    endif
                    %  endif
                    %endif

                    </%def>
                    ## ---- EXTERNAL INTERFACES --------##
                    <%def name="externalInterfacesConfig()">

                    %if mySC.ExternalInterfaces:
                    %  for interface in mySC.ExternalInterfaces:
                    %    if interface.VlanID:
                    interface ${interface.InterfaceName}
                        no switchport
                        interface ${interface.InterfaceName}.${interface.VlanID}
                        encapsulation dot1q vlan ${interface.VlanID}
                        description ${interface.Description}
                        ip address ${interface.IPPrefix}
                    %    else:
                    interface ${ interface.InterfaceName}
                        no switchport
                        description ${interface.Description}
                        ip address ${interface.IPPrefix}
                    %    endif
                    !
                    %   endfor
                    % endif
                    </%def>
            input_schema:
                fields:
                    values:
                        mlagLinkSubnet:
                            id: mlagLinkSubnet
                            name: mlagLinkSubnet
                            label: 'Subnet of the MLAG peer link'
                            description: 'IP Subnet of the MLAG peer link'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: 169.254.0.0/31
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        internalVlan:
                            id: internalVlan
                            name: internalVlan
                            label: 'VLAN to use for the MLAG peer link'
                            description: 'VLAN to use for the MLAG peer link'
                            required: false
                            type: INPUT_FIELD_TYPE_INTEGER
                            integer_props:
                                default_value: '4094'
                                range: null
                                static_options: null
                                dynamic_options: null
                        mlagPortChannelId:
                            id: mlagPortChannelId
                            name: mlagPortChannelId
                            label: 'MLAG Port-Channel ID'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_INTEGER
                            integer_props:
                                default_value: '2000'
                                range: null
                                static_options: null
                                dynamic_options: null
                        virtualRouterMac:
                            id: virtualRouterMac
                            name: virtualRouterMac
                            label: 'Virtual Router MAC'
                            description: 'Virtual MAC for other hosts or switches to connect to for redundancy'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: '00:1c:73:00:00:99'
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        lacpMode:
                            id: lacpMode
                            name: lacpMode
                            label: 'LACP Mode'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: ACTIVE
                                static_options:
                                    values:
                                        - ACTIVE
                                        - 'ON'
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        commonMlagConfig:
                            id: commonMlagConfig
                            name: commonMlagConfig
                            label: 'Global MLAG Configuration'
                            description: 'This configuration is only used when the MLAG Interface field is populated for the devices in a Edge-Router-Domain. To use MLAG between 2 Edge Routers in the same Edge Router Domain the Edge-Router-Number tag must be consecutive odd and even numbers.'
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - mlagLinkSubnet
                                        - internalVlan
                                        - mlagPortChannelId
                                        - virtualRouterMac
                                        - lacpMode
                        rrAS:
                            id: rrAS
                            name: rrAS
                            label: ASN
                            description: 'Required for EVPN and eBGP'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        rrBGPDynamicNeighbors:
                            id: rrBGPDynamicNeighbors
                            name: rrBGPDynamicNeighbors
                            label: 'RR BGP Dynamic Neighbors'
                            description: 'Only YES is currently supported'
                            required: false
                            type: INPUT_FIELD_TYPE_BOOLEAN
                            boolean_props:
                                default_value: true
                        evpnAndVxlan:
                            id: evpnAndVxlan
                            name: evpnAndVxlan
                            label: 'EVPN and VXLAN'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: NOT-ENABLED
                                static_options:
                                    values:
                                        - NOT-ENABLED
                                        - ENABLED
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        commonBGPConfig:
                            id: commonBGPConfig
                            name: commonBGPConfig
                            label: 'Global BGP'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - rrAS
                                        - rrBGPDynamicNeighbors
                                        - evpnAndVxlan
                        rrLinkPeer:
                            id: rrLinkPeer
                            name: rrLinkPeer
                            label: 'Neighbor Hostname'
                            description: 'Hostname of the P or PE Router directly connected to this RR'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        rrLinkPeerInterface:
                            id: rrLinkPeerInterface
                            name: rrLinkPeerInterface
                            label: 'Neighbor Interface'
                            description: 'This field is only used for interface descriptions'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        rripAddress:
                            id: rripAddress
                            name: rripAddress
                            label: 'Local IP Address'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        rsubnetMask:
                            id: rsubnetMask
                            name: rrsubnetMask
                            label: 'Local Subnet Mask'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: '31'
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        rrNeighborParams:
                            id: rrNeighborParams
                            name: rrNeighborParams
                            label: 'Neighbor Parameters'
                            description: null
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - rrLinkPeer
                                        - rrLinkPeerInterface
                                        - rripAddress
                                        - rsubnetMask
                        rrDownlink:
                            id: rrDownlink
                            name: rrDownlink
                            label: 'Route Reflector Downlink Interface'
                            description: 'To directly connected routers'
                            required: false
                            type: INPUT_FIELD_TYPE_RESOLVER
                            resolver_props:
                                base_field_id: rrNeighborParams
                                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_INTERFACE_TAG
                                input_tag_label: interface
                                tag_filter_query: null
                        loopback0Address:
                            id: loopback0Address
                            name: loopback0Address
                            label: 'Loopback0 Address'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        rrInterfaceParams:
                            id: rrInterfaceParams
                            name: rrInterfaceParams
                            label: 'Fabric link Interface Parameters'
                            description: null
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - rrDownlink
                                        - loopback0Address
                        rrs:
                            id: rrs
                            name: rrs
                            label: 'Route Reflector Devices'
                            description: 'Used for overlay networks'
                            required: false
                            type: INPUT_FIELD_TYPE_RESOLVER
                            resolver_props:
                                base_field_id: rrInterfaceParams
                                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_DEVICE_TAG
                                input_tag_label: device
                                tag_filter_query: null
                        peMLAGInterface1:
                            id: peMLAGInterface1
                            name: erMLAGInterface1
                            label: 'MLAG Interface #1'
                            description: 'Populating these fields enables MLAG. ISIS or OSPF between the MLAG peers will also be configured.'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peMLAGInterface2:
                            id: peMLAGInterface2
                            name: erMLAGInterface2
                            label: 'MLAG Interface#2'
                            description: 'Populating these fields enables MLAG'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        pehostName:
                            id: pehostName
                            name: erhostName
                            label: 'Neighbor Host Name'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peinterface:
                            id: peinterface
                            name: erinterface
                            label: 'Neighbors''s Interface'
                            description: 'This field is only used for interface descriptions'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peipAddress:
                            id: peipAddress
                            name: eripAddress
                            label: 'Local IP Address'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        pesubnetMask:
                            id: pesubnetMask
                            name: ersubnetMask
                            label: 'Subnet Mask'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: '31'
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peneighborDetails:
                            id: peneighborDetails
                            name: erneighborDetails
                            label: 'Neighbor Details'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - pehostName
                                        - peinterface
                                        - peipAddress
                                        - pesubnetMask
                        peneighbors:
                            id: peneighbors
                            name: erneighbors
                            label: Neighbors
                            description: 'Add Interface details if a Edge or Core router is directly connected'
                            required: false
                            type: INPUT_FIELD_TYPE_RESOLVER
                            resolver_props:
                                base_field_id: peneighborDetails
                                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_INTERFACE_TAG
                                input_tag_label: interface
                                tag_filter_query: null
                        peloopback0Address:
                            id: peloopback0Address
                            name: loopback0Address
                            label: 'Loopback0 Address'
                            description: 'For overlay routing and Mgmt.'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        loopback1Address:
                            id: loopback1Address
                            name: loopback1Address
                            label: 'Loopback1 Address'
                            description: 'VXLAN VTEP '
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        rrHostname:
                            id: rrHostname
                            name: rrHostname
                            label: 'RR Hostname'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        rrInterface:
                            id: rrInterface
                            name: rrInterface
                            label: 'RR Interface'
                            description: 'Interface description if directly to RR'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        localInterface:
                            id: localInterface
                            name: localInterface
                            label: 'Local Interface'
                            description: 'optional: used only if directly to RR'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        localIpAddress:
                            id: localIpAddress
                            name: localIpAddress
                            label: 'Local IP  Address'
                            description: 'optional: used only if directly to RR'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        localSubnetMask:
                            id: localSubnetMask
                            name: localSubnetMask
                            label: 'Local Subnet Mask'
                            description: 'optional: used only if directly to RR'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: '31'
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        rrHostnameGroup:
                            id: rrHostnameGroup
                            name: rrHostnameGroup
                            label: 'RR Hostname Group'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - rrHostname
                                        - rrInterface
                                        - localInterface
                                        - localIpAddress
                                        - localSubnetMask
                        rrHostnames:
                            id: rrHostnames
                            name: rrHostnames
                            label: 'Route Reflector Hostnames'
                            description: 'Only RR hostname required unless the RR is directly connected'
                            required: false
                            type: INPUT_FIELD_TYPE_COLLECTION
                            collection_props:
                                base_field_id: rrHostnameGroup
                                key: rrHostname
                        staticprefix:
                            id: staticprefix
                            name: prefix
                            label: Prefix
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        staticnextHop:
                            id: staticnextHop
                            name: nextHop
                            label: 'Next Hop'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        staticname:
                            id: staticname
                            name: name
                            label: Name
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        staticRouteGroup:
                            id: staticRouteGroup
                            name: staticRouteGroup
                            label: 'Static Route Group'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - staticprefix
                                        - staticnextHop
                                        - staticname
                        staticRoutes:
                            id: staticRoutes
                            name: staticRoutes
                            label: 'Static Routes'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_COLLECTION
                            collection_props:
                                base_field_id: staticRouteGroup
                                key: staticprefix
                        prefixListsprefixListName:
                            id: prefixListsprefixListName
                            name: prefixListName
                            label: 'Prefix List Name'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        prefixListsseqNum:
                            id: prefixListsseqNum
                            name: seqNum
                            label: 'Seq Num'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        prefixListsseqprefix:
                            id: prefixListsseqprefix
                            name: prefix
                            label: Prefix
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        prefixListsseqprefixLength:
                            id: prefixListsseqprefixLength
                            name: prefixLength
                            label: Match
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options:
                                    values:
                                        - eq
                                        - ge
                                        - le
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        prefixListsseqmaskLength:
                            id: prefixListsseqmaskLength
                            name: maskLength
                            label: 'Mask Length'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        prefixListsseqpermitDeny:
                            id: prefixListsseqpermitDeny
                            name: permitDeny
                            label: 'Permit Deny'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: permit
                                static_options:
                                    values:
                                        - permit
                                        - deny
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        prefixListsseqNumsvalue:
                            id: prefixListsseqNumsvalue
                            name: value
                            label: 'Seq Num Group'
                            description: 'Group of members for Seq Num'
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - prefixListsseqNum
                                        - prefixListsseqprefix
                                        - prefixListsseqprefixLength
                                        - prefixListsseqmaskLength
                                        - prefixListsseqpermitDeny
                        prefixListsseqNums:
                            id: prefixListsseqNums
                            name: seqNums
                            label: 'Seq Num'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_COLLECTION
                            collection_props:
                                base_field_id: prefixListsseqNumsvalue
                                key: prefixListsseqNum
                        prefixListsvalue:
                            id: prefixListsvalue
                            name: value
                            label: 'Prefix Lists Group'
                            description: 'Group of members for Prefix Lists'
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - prefixListsprefixListName
                                        - prefixListsseqNums
                        prefixLists:
                            id: prefixLists
                            name: prefixLists
                            label: 'Prefix Lists'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_COLLECTION
                            collection_props:
                                base_field_id: prefixListsvalue
                                key: prefixListsprefixListName
                        peerGroupName:
                            id: peerGroupName
                            name: peerGroupName
                            label: 'Peer Group Name'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peerGrouppeerAsn:
                            id: peerGrouppeerAsn
                            name: peerAsn
                            label: 'Peer ASN'
                            description: 'Applies to all neighbors'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peerGroupdescription:
                            id: peerGroupdescription
                            name: description
                            label: Description
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peerGrouplocalAs:
                            id: peerGrouplocalAs
                            name: localAs
                            label: 'Local AS'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peerGroupnextHopSelf:
                            id: peerGroupnextHopSelf
                            name: nextHopSelf
                            label: 'Next Hop Self'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: NOT-ENABLED
                                static_options:
                                    values:
                                        - NOT-ENABLED
                                        - ENABLED
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peerGroupmaximumAcceptedRoutes:
                            id: peerGroupmaximumAcceptedRoutes
                            name: maximumAcceptedRoutes
                            label: 'Maximum Accepted Routes'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peerGroupeBgpMultiHopTtl:
                            id: peerGroupeBgpMultiHopTtl
                            name: eBgpMultiHopTtl
                            label: 'eBGP Multi Hop TTL'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peerGroupbfd:
                            id: peerGroupbfd
                            name: bfd
                            label: BFD
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: NOT-ENABLED
                                static_options:
                                    values:
                                        - NOT-ENABLED
                                        - ENABLED
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peerGrouprouteMapInseqNum:
                            id: peerGrouprouteMapInseqNum
                            name: seqNum
                            label: 'Seq Num'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peerGrouprouteMapIdescription:
                            id: peerGrouprouteMapIdescription
                            name: description
                            label: Description
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peerGrouprouteMapIpermitDeny:
                            id: peerGrouprouteMapIpermitDeny
                            name: permitDeny
                            label: 'Permit Deny'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: permit
                                static_options:
                                    values:
                                        - permit
                                        - deny
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peerGrouprouteMapIprefixList:
                            id: peerGrouprouteMapIprefixList
                            name: prefixList
                            label: 'Prefix List'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options:
                                    values:
                                        - '{"fieldId":"prefixListsprefixListName"}'
                        peerGrouprouteMapInmatchCommunity:
                            id: peerGrouprouteMapInmatchCommunity
                            name: matchCommunity
                            label: 'Match Community'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peerGrouprouteMapInsetCommunity:
                            id: peerGrouprouteMapInsetCommunity
                            name: setCommunity
                            label: 'Set Community'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peerGrouprouteMapInlocalPref:
                            id: peerGrouprouteMapInlocalPref
                            name: localPref
                            label: 'Local Pref'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peerGrouprouteMapInasPathPrependRepeat:
                            id: peerGrouprouteMapInasPathPrependRepeat
                            name: asPathPrependRepeat
                            label: 'AS Path Prepend Repeat'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peerGrouprouteMapInrouteMapInGroup:
                            id: peerGrouprouteMapInrouteMapInGroup
                            name: routeMapInGroup
                            label: 'Route Map In Group'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - peerGrouprouteMapInseqNum
                                        - peerGrouprouteMapIdescription
                                        - peerGrouprouteMapIpermitDeny
                                        - peerGrouprouteMapIprefixList
                                        - peerGrouprouteMapInmatchCommunity
                                        - peerGrouprouteMapInsetCommunity
                                        - peerGrouprouteMapInlocalPref
                                        - peerGrouprouteMapInasPathPrependRepeat
                        peerGrouprouteMapIn:
                            id: peerGrouprouteMapIn
                            name: routeMapIn
                            label: 'Route Map In'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_COLLECTION
                            collection_props:
                                base_field_id: peerGrouprouteMapInrouteMapInGroup
                                key: ""
                        peerGrouprouteMapOutseqNum:
                            id: peerGrouprouteMapOutseqNum
                            name: seqNum
                            label: 'Seq Num'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peerGrouprouteMapOutpermitDeny:
                            id: peerGrouprouteMapOutpermitDeny
                            name: permitDeny
                            label: 'Permit Deny'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: permit
                                static_options:
                                    values:
                                        - permit
                                        - deny
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peerGrouprouteMapOutprefixList:
                            id: peerGrouprouteMapOutprefixList
                            name: prefixList
                            label: 'Prefix List'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options:
                                    values:
                                        - '{"fieldId":"prefixListsprefixListName"}'
                        peerGrouprouteMapOutmatchCommunity:
                            id: peerGrouprouteMapOutmatchCommunity
                            name: matchCommunity
                            label: 'Match Community'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peerGrouprouteMapOutsetCommunity:
                            id: peerGrouprouteMapOutsetCommunity
                            name: setCommunity
                            label: 'Set Community'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peerGrouprouteMapOutasPathPrependRepeat:
                            id: peerGrouprouteMapOutasPathPrependRepeat
                            name: asPathPrependRepeat
                            label: 'AS Path Prepend Repeat'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peerGrouprouteMapOutdescription:
                            id: peerGrouprouteMapOutdescription
                            name: description
                            label: Description
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peerGrouprouteMapOutGroup:
                            id: peerGrouprouteMapOutGroup
                            name: routeMapOutGroup
                            label: 'Route Map Out Group'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - peerGrouprouteMapOutseqNum
                                        - peerGrouprouteMapOutpermitDeny
                                        - peerGrouprouteMapOutprefixList
                                        - peerGrouprouteMapOutmatchCommunity
                                        - peerGrouprouteMapOutsetCommunity
                                        - peerGrouprouteMapOutasPathPrependRepeat
                                        - peerGrouprouteMapOutdescription
                        peerGrouprouteMapOut:
                            id: peerGrouprouteMapOut
                            name: routeMapOut
                            label: 'Route Map Out'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_COLLECTION
                            collection_props:
                                base_field_id: peerGrouprouteMapOutGroup
                                key: ""
                        ebgpNeighborspeerAsn:
                            id: ebgpNeighborspeerAsn
                            name: peerAsn
                            label: 'Peer ASN'
                            description: 'Overrides Group ASN'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        ebgpNeighborsneighborIp:
                            id: ebgpNeighborsneighborIp
                            name: neighborIp
                            label: 'Neighbor IP'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        eBgpNeighborsGroup:
                            id: eBgpNeighborsGroup
                            name: eBgpNeighborsGroup
                            label: 'eBGP Neighbors Group'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - ebgpNeighborspeerAsn
                                        - ebgpNeighborsneighborIp
                        eBgpNeighbors:
                            id: eBgpNeighbors
                            name: eBgpNeighbors
                            label: 'eBGP Neighbors'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_COLLECTION
                            collection_props:
                                base_field_id: eBgpNeighborsGroup
                                key: ebgpNeighborsneighborIp
                        pgredistributeRoutes:
                            id: pgredistributeRoutes
                            name: redistributeRoutes
                            label: 'Redistribute Routes'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: ENABLED
                                static_options:
                                    values:
                                        - ENABLED
                                        - NOT-ENABLED
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        pgaggregateRoute:
                            id: pgaggregateRoute
                            name: aggregateRoute
                            label: 'Aggregate Route'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        pgaggregateRoutesvalue:
                            id: pgaggregateRoutesvalue
                            name: value
                            label: 'Aggregate Routes Group'
                            description: 'Group of members for Aggregate Routes'
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - pgaggregateRoute
                        pgaggregateRoutes:
                            id: pgaggregateRoutes
                            name: aggregateRoutes
                            label: 'Aggregate Routes'
                            description: 'Advertise only summary to peer'
                            required: false
                            type: INPUT_FIELD_TYPE_COLLECTION
                            collection_props:
                                base_field_id: pgaggregateRoutesvalue
                                key: ""
                        peerGroup:
                            id: peerGroup
                            name: peerGroup
                            label: 'Peer Group'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - peerGroupName
                                        - peerGrouppeerAsn
                                        - peerGroupdescription
                                        - peerGrouplocalAs
                                        - peerGroupnextHopSelf
                                        - peerGroupmaximumAcceptedRoutes
                                        - peerGroupeBgpMultiHopTtl
                                        - peerGroupbfd
                                        - peerGrouprouteMapIn
                                        - peerGrouprouteMapOut
                                        - eBgpNeighbors
                                        - pgredistributeRoutes
                                        - pgaggregateRoutes
                        ebgpNeighborspeerGroups:
                            id: ebgpNeighborspeerGroups
                            name: peerGroups
                            label: 'BGP Peer Groups'
                            description: 'Define neighbors and policy'
                            required: false
                            type: INPUT_FIELD_TYPE_COLLECTION
                            collection_props:
                                base_field_id: peerGroup
                                key: peerGroupName
                        externalInterfacedescription:
                            id: externalInterfacedescription
                            name: description
                            label: Description
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        externalInterfaceipPrefix:
                            id: externalInterfaceipPrefix
                            name: ipPrefix
                            label: 'IP Prefix'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        externalInterfacevlanId:
                            id: externalInterfacevlanId
                            name: vlanId
                            label: 'VLAN ID'
                            description: 'Optional. Used for sub-interfaces'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        externalInterfaceGroup:
                            id: externalInterfaceGroup
                            name: externalInterfaceGroup
                            label: 'External Interface Group'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - externalInterfacedescription
                                        - externalInterfaceipPrefix
                                        - externalInterfacevlanId
                        externalInterfaces:
                            id: externalInterfaces
                            name: externalInterfaces
                            label: 'External Interfaces'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_RESOLVER
                            resolver_props:
                                base_field_id: externalInterfaceGroup
                                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_INTERFACE_TAG
                                input_tag_label: interface
                                tag_filter_query: null
                        peLinkDetails:
                            id: peLinkDetails
                            name: erLinkDetails
                            label: 'Link Details'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - peMLAGInterface1
                                        - peMLAGInterface2
                                        - peneighbors
                                        - peloopback0Address
                                        - loopback1Address
                                        - rrHostnames
                                        - staticRoutes
                                        - prefixLists
                                        - ebgpNeighborspeerGroups
                                        - externalInterfaces
                        peDetails:
                            id: peDetails
                            name: erDetails
                            label: 'Edge Router Domain Members'
                            description: 'Single Device or MLAG Pair'
                            required: false
                            type: INPUT_FIELD_TYPE_RESOLVER
                            resolver_props:
                                base_field_id: peLinkDetails
                                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_DEVICE_TAG
                                input_tag_label: device
                                tag_filter_query: null
                        peDomain:
                            id: peDomain
                            name: erDomain
                            label: 'Edge Router Domain'
                            description: 'Single Device or MLAG Pair'
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - peDetails
                        peDomains:
                            id: peDomains
                            name: erDomains
                            label: 'Edge Router Domains'
                            description: 'Single device or Pair of devices'
                            required: false
                            type: INPUT_FIELD_TYPE_RESOLVER
                            resolver_props:
                                base_field_id: peDomain
                                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_DEVICE_TAG
                                input_tag_label: Edge-Router-Domain
                                tag_filter_query: null
                        prrhostName:
                            id: prrhostName
                            name: prrhostName
                            label: 'RR Host Name'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        prrinterface:
                            id: prrinterface
                            name: prrinterface
                            label: 'RR Interface'
                            description: 'This field is only used for interface descriptions'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        prripAddress:
                            id: prripAddress
                            name: prripAddress
                            label: 'Local IP Address'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        prrsubnetMask:
                            id: prrsubnetMask
                            name: prrsubnetMask
                            label: 'Local Subnet Mask'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: '31'
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        prrDetails:
                            id: prrDetails
                            name: prrDetails
                            label: 'RR Details'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - prrhostName
                                        - prrinterface
                                        - prripAddress
                                        - prrsubnetMask
                        rRs:
                            id: rRs
                            name: rRs
                            label: 'Route Reflectors'
                            description: 'Only required if a RR is directly connected to this P Router'
                            required: false
                            type: INPUT_FIELD_TYPE_RESOLVER
                            resolver_props:
                                base_field_id: prrDetails
                                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_INTERFACE_TAG
                                input_tag_label: interface
                                tag_filter_query: null
                        phostName:
                            id: phostName
                            name: phostName
                            label: 'Neighbor Host Name'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        pinterface:
                            id: pinterface
                            name: pinterface
                            label: 'Neighbor Interface'
                            description: 'This field is only used for interface descriptions'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        ipAddress:
                            id: ipAddress
                            name: pipAddress
                            label: 'Local IP Address'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        psubnetMask:
                            id: psubnetMask
                            name: psubnetMask
                            label: 'Subnet Mask'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: '31'
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        pneighborDetails:
                            id: pneighborDetails
                            name: pneighborDetails
                            label: 'Neighbor Details'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - phostName
                                        - pinterface
                                        - ipAddress
                                        - psubnetMask
                        pneighbor:
                            id: pneighbor
                            name: pneighbor
                            label: Neighbors
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_RESOLVER
                            resolver_props:
                                base_field_id: pneighborDetails
                                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_INTERFACE_TAG
                                input_tag_label: interface
                                tag_filter_query: null
                        ploopback0Address:
                            id: ploopback0Address
                            name: loopback0Address
                            label: 'Loopback0 Address'
                            description: 'For overlay routing and Mgmt.'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        pLinkDetails:
                            id: pLinkDetails
                            name: pLinkDetails
                            label: 'P Link Details'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - rRs
                                        - pneighbor
                                        - ploopback0Address
                        pRouters:
                            id: pRouters
                            name: pRouters
                            label: 'Core Routers'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_RESOLVER
                            resolver_props:
                                base_field_id: pLinkDetails
                                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_DEVICE_TAG
                                input_tag_label: device
                                tag_filter_query: null
                        igp:
                            id: igp
                            name: igp
                            label: 'Underlay Routing'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: OSPF
                                static_options:
                                    values:
                                        - OSPF
                                        - ISIS
                                        - NONE
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        redistributeConnected:
                            id: redistributeConnected
                            name: redistributeConnected
                            label: 'Redistribute Connected'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: ENABLED
                                static_options:
                                    values:
                                        - NOT-ENABLED
                                        - ENABLED
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        redistributeStatic:
                            id: redistributeStatic
                            name: redistributeStatic
                            label: 'Redistribute Static'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: ENABLED
                                static_options:
                                    values:
                                        - NOT-ENABLED
                                        - ENABLED
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        pod:
                            id: pod
                            name: pod
                            label: 'Network Name'
                            description: 'A single pe-rr fabric instance'
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - commonMlagConfig
                                        - commonBGPConfig
                                        - rrs
                                        - peDomains
                                        - pRouters
                                        - igp
                                        - redistributeConnected
                                        - redistributeStatic
                        pods:
                            id: pods
                            name: pods
                            label: 'Network Name'
                            description: 'Tags to use: Network: "name",  RR-Number, Edge-Router-Domain: , Edge-Router-Number:, Core-Router-Number: '
                            required: false
                            type: INPUT_FIELD_TYPE_RESOLVER
                            resolver_props:
                                base_field_id: pod
                                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_DEVICE_TAG
                                input_tag_label: Network
                                tag_filter_query: null
                        root:
                            id: root
                            name: ""
                            label: ""
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - pods
                layout:
                    value: |
                      {
                        "pod": {
                          "key": "pod",
                          "type": "INPUT",
                          "order": [
                            "igp",
                            "redistributeConnected",
                            "redistributeStatic",
                            "commonBGPConfig",
                            "peDomains",
                            "pRouters",
                            "rrs",
                            "commonMlagConfig"
                          ]
                        },
                        "pods": {
                          "key": "pods",
                          "isPageLayout": true,
                          "type": "INPUT",
                          "showDefaultRow": false
                        },
                        "rrInterfaceParams": {
                          "key": "rrInterfaceParams",
                          "type": "INPUT",
                          "order": [
                            "loopback0Address",
                            "rrDownlink"
                          ]
                        },
                        "peLinkDetails": {
                          "key": "peLinkDetails",
                          "type": "INPUT",
                          "order": [
                            "peloopback0Address",
                            "loopback1Address",
                            "rrHostnames",
                            "peneighbors",
                            "peMLAGInterface1",
                            "peMLAGInterface2",
                            "staticRoutes",
                            "prefixLists",
                            "ebgpNeighborspeerGroups",
                            "externalInterfaces"
                          ]
                        },
                        "asNumber": {
                          "key": "asNumber",
                          "type": "INPUT",
                          "dependency": {
                            "asNumber": {
                              "value": [
                                "65100"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "peDetails": {
                          "key": "peDetails",
                          "isPageLayout": true,
                          "type": "INPUT",
                          "showDefaultRow": false
                        },
                        "peMLAGInterface1": {
                          "key": "peMLAGInterface1",
                          "type": "INPUT",
                          "dependency": {
                            "peMLAGInterface2": {
                              "value": [
                                "dummy"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "peMLAGInterface2": {
                          "key": "peMLAGInterface2",
                          "type": "INPUT",
                          "dependency": {}
                        },
                        "mlagLinkSubnet": {
                          "key": "mlagLinkSubnet",
                          "type": "INPUT",
                          "dependency": {}
                        },
                        "internalVlan": {
                          "key": "internalVlan",
                          "type": "INPUT",
                          "dependency": {}
                        },
                        "mlagPortChannelId": {
                          "key": "mlagPortChannelId",
                          "type": "INPUT",
                          "dependency": {}
                        },
                        "virtualRouterMac": {
                          "key": "virtualRouterMac",
                          "type": "INPUT",
                          "dependency": {}
                        },
                        "peASbase": {
                          "key": "peASbase",
                          "type": "INPUT",
                          "dependency": {}
                        },
                        "pLinkDetails": {
                          "key": "pLinkDetails",
                          "type": "INPUT",
                          "order": [
                            "ploopback0Address",
                            "rRs",
                            "pneighbor"
                          ]
                        },
                        "fabricLinksSubnet": {
                          "key": "fabricLinksSubnet",
                          "type": "INPUT",
                          "dependency": {}
                        },
                        "fabricSubnetMask": {
                          "key": "fabricSubnetMask",
                          "type": "INPUT",
                          "dependency": {}
                        },
                        "peLoopback1Subnet": {
                          "key": "peLoopback1Subnet",
                          "type": "INPUT",
                          "dependency": {
                            "mpls": {
                              "value": [
                                "SR",
                                "LDP",
                                "NONE",
                                "SR-TE",
                                "RSVP"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "3bb4bb4d-3ffa-49ab-8318-e588edddf4ee": {
                          "key": "3bb4bb4d-3ffa-49ab-8318-e588edddf4ee",
                          "type": "INPUT",
                          "dependency": {
                            "igp": {
                              "value": [
                                "OSPF"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "4d1b8f45-0f26-4049-82d3-4dddd16480b4": {
                          "key": "4d1b8f45-0f26-4049-82d3-4dddd16480b4",
                          "type": "INPUT",
                          "dependency": {
                            "igp": {
                              "value": [
                                "OSPF"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "4e6cd56c-54c3-420c-bd74-96fbf3c8010a": {
                          "key": "4e6cd56c-54c3-420c-bd74-96fbf3c8010a",
                          "type": "INPUT",
                          "dependency": {
                            "igp": {
                              "value": [
                                "OSPF"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "rrs": {
                          "key": "rrs",
                          "isPageLayout": true,
                          "type": "INPUT",
                          "showDefaultRow": false
                        },
                        "peLoopback0Subnet": {
                          "key": "peLoopback0Subnet",
                          "type": "INPUT",
                          "dependency": {}
                        },
                        "rrLoopback0Subnet": {
                          "key": "rrLoopback0Subnet",
                          "type": "INPUT",
                          "dependency": {}
                        },
                        "loopback1Address": {
                          "key": "loopback1Address",
                          "dependency": {
                            "evpnAndVxlan": {
                              "value": [
                                "NOT-ENABLED"
                              ],
                              "mode": "HIDE"
                            }
                          },
                          "type": "INPUT"
                        },
                        "fpenodeSegmentIndex": {
                          "key": "fpenodeSegmentIndex",
                          "type": "INPUT",
                          "dependency": {
                            "mpls": {
                              "value": [
                                "LDP",
                                "RSVP",
                                "NONE",
                                "VXLAN"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "pnodeSegmentIndex": {
                          "key": "pnodeSegmentIndex",
                          "type": "INPUT",
                          "dependency": {
                            "mpls": {
                              "value": [
                                "LDP",
                                "RSVP",
                                "NONE",
                                "VXLAN"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "srTiFla": {
                          "key": "srTiFla",
                          "valueToLabelMap": {
                            "YES": "OK",
                            "NO": "NO",
                            "ENABLED": "ENABLED",
                            "NOT-ENABLED": "NOT-ENABLED"
                          },
                          "dependency": {
                            "mpls": {
                              "value": [
                                "NONE",
                                "VXLAN",
                                "RSVP",
                                "LDP"
                              ],
                              "mode": "HIDE"
                            }
                          },
                          "type": "INPUT"
                        },
                        "557303b1-6ee1-48cf-858a-254ee3c0f2c7": {
                          "key": "557303b1-6ee1-48cf-858a-254ee3c0f2c7",
                          "type": "INPUT",
                          "dependency": {
                            "mpls": {
                              "value": [
                                "VXLAN",
                                "RSVP",
                                "LDP",
                                "SR"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "2be1fb95-d687-47fd-8c26-e23068f12783": {
                          "key": "2be1fb95-d687-47fd-8c26-e23068f12783",
                          "type": "INPUT",
                          "dependency": {
                            "mpls": {
                              "value": [
                                "VXLAN",
                                "RSVP",
                                "LDP",
                                "SR"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "0d68c481-d05c-4068-9547-5706d2600697": {
                          "key": "0d68c481-d05c-4068-9547-5706d2600697",
                          "type": "INPUT",
                          "dependency": {
                            "mpls": {
                              "value": [
                                "VXLAN",
                                "RSVP",
                                "LDP",
                                "SR"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "15d6861b-c312-49bc-95a6-1cf0a68e5318": {
                          "key": "15d6861b-c312-49bc-95a6-1cf0a68e5318",
                          "dependency": {
                            "mpls": {
                              "value": [
                                "VXLAN",
                                "RSVP",
                                "SR",
                                "LDP"
                              ],
                              "mode": "HIDE"
                            }
                          },
                          "type": "INPUT"
                        },
                        "d0ae26fb-34cd-4322-8775-4058b6b30d32": {
                          "key": "d0ae26fb-34cd-4322-8775-4058b6b30d32",
                          "type": "INPUT",
                          "dependency": {
                            "mpls": {
                              "value": [
                                "VXLAN",
                                "RSVP",
                                "LDP",
                                "SR"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "fe5eb0d2-6796-4487-b3be-e3914a66ae23": {
                          "key": "fe5eb0d2-6796-4487-b3be-e3914a66ae23",
                          "type": "INPUT",
                          "dependency": {
                            "mpls": {
                              "value": [
                                "VXLAN",
                                "RSVP",
                                "LDP",
                                "SR"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "3ee8cb8c-9693-44c5-88e5-06c6f6c2fb5e": {
                          "key": "3ee8cb8c-9693-44c5-88e5-06c6f6c2fb5e",
                          "type": "INPUT",
                          "dependency": {
                            "mpls": {
                              "value": [
                                "VXLAN",
                                "RSVP",
                                "LDP",
                                "SR"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "0d9e30e5-5032-44ec-ae17-03180f1c2244": {
                          "key": "0d9e30e5-5032-44ec-ae17-03180f1c2244",
                          "type": "INPUT",
                          "order": [
                            "557303b1-6ee1-48cf-858a-254ee3c0f2c7",
                            "1b0abd50-9227-4ce5-a317-4012bbdfa0c0",
                            "2be1fb95-d687-47fd-8c26-e23068f12783",
                            "0d68c481-d05c-4068-9547-5706d2600697",
                            "fe5eb0d2-6796-4487-b3be-e3914a66ae23",
                            "d0ae26fb-34cd-4322-8775-4058b6b30d32",
                            "15d6861b-c312-49bc-95a6-1cf0a68e5318",
                            "3ee8cb8c-9693-44c5-88e5-06c6f6c2fb5e"
                          ]
                        },
                        "1b0abd50-9227-4ce5-a317-4012bbdfa0c0": {
                          "key": "1b0abd50-9227-4ce5-a317-4012bbdfa0c0",
                          "type": "INPUT",
                          "dependency": {
                            "mpls": {
                              "value": [
                                "VXLAN",
                                "RSVP",
                                "LDP",
                                "SR"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "endPoint": {
                          "key": "endPoint",
                          "type": "INPUT",
                          "order": [
                            "tepolname",
                            "tepol"
                          ]
                        },
                        "tepol": {
                          "key": "tepol",
                          "type": "INPUT",
                          "isPageLayout": true
                        },
                        "tepolname": {
                          "key": "tepolname",
                          "dependency": {
                            "mpls": {
                              "value": [
                                "SR-TE"
                              ],
                              "mode": "SHOW"
                            }
                          },
                          "type": "INPUT"
                        },
                        "tename": {
                          "key": "tename",
                          "dependency": {
                            "mpls": {
                              "value": [
                                "SR-TE"
                              ],
                              "mode": "SHOW"
                            }
                          },
                          "type": "INPUT"
                        },
                        "tedescription": {
                          "key": "tedescription",
                          "dependency": {
                            "mpls": {
                              "value": [
                                "SR-TE"
                              ],
                              "mode": "SHOW"
                            }
                          },
                          "type": "INPUT"
                        },
                        "color": {
                          "key": "color",
                          "dependency": {
                            "mpls": {
                              "value": [
                                "SR-TE"
                              ],
                              "mode": "SHOW"
                            }
                          },
                          "type": "INPUT"
                        },
                        "matchAllRTs": {
                          "key": "matchAllRTs",
                          "type": "INPUT",
                          "dependency": {
                            "mpls": {
                              "value": [
                                "VXLAN",
                                "NONE",
                                "RSVP",
                                "LDP",
                                "SR"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "5c1af054-423b-4fe7-9c6c-c8f4df405184": {
                          "key": "5c1af054-423b-4fe7-9c6c-c8f4df405184",
                          "dependency": {
                            "mpls": {
                              "value": [
                                "VXLAN",
                                "RSVP",
                                "LDP",
                                "SR"
                              ],
                              "mode": "HIDE"
                            }
                          },
                          "type": "INPUT"
                        },
                        "a0bb1533-b410-4c5f-8642-7e9c4b1bc28b": {
                          "key": "a0bb1533-b410-4c5f-8642-7e9c4b1bc28b",
                          "dependency": {
                            "mpls": {
                              "value": [
                                "VXLAN",
                                "RSVP",
                                "LDP",
                                "SR"
                              ],
                              "mode": "HIDE"
                            }
                          },
                          "type": "INPUT"
                        },
                        "rtValue": {
                          "key": "rtValue",
                          "type": "INPUT",
                          "dependency": {
                            "mpls": {
                              "value": [
                                "VXLAN",
                                "NONE",
                                "RSVP",
                                "LDP",
                                "SR"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "bindingId": {
                          "key": "bindingId",
                          "type": "INPUT",
                          "dependency": {
                            "mpls": {
                              "value": [
                                "VXLAN",
                                "NONE",
                                "RSVP",
                                "LDP",
                                "SR"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "teEndPoints": {
                          "key": "teEndPoints",
                          "type": "INPUT",
                          "isPageLayout": true
                        },
                        "polvalue": {
                          "key": "polvalue",
                          "type": "INPUT",
                          "order": [
                            "tename",
                            "tedescription",
                            "color",
                            "pathPreference",
                            "matchAllRTs",
                            "rTs",
                            "bindingId"
                          ]
                        },
                        "preference": {
                          "key": "preference",
                          "dependency": {
                            "mpls": {
                              "value": [
                                "SR-TE"
                              ],
                              "mode": "SHOW"
                            }
                          },
                          "type": "INPUT"
                        },
                        "segmentList": {
                          "key": "segmentList",
                          "dependency": {
                            "mpls": {
                              "value": [
                                "SR-TE"
                              ],
                              "mode": "SHOW"
                            }
                          },
                          "type": "INPUT"
                        },
                        "peDomains": {
                          "key": "peDomains",
                          "type": "INPUT",
                          "showDefaultRow": false
                        },
                        "pRouters": {
                          "key": "pRouters",
                          "showDefaultRow": false,
                          "type": "INPUT",
                          "isPageLayout": true
                        },
                        "isisAuthKey": {
                          "key": "isisAuthKey",
                          "type": "INPUT",
                          "dependency": {
                            "igp": {
                              "value": [
                                "OSPF"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "ospfAuthKey": {
                          "key": "ospfAuthKey",
                          "type": "INPUT",
                          "dependency": {
                            "igp": {
                              "value": [
                                "ISIS"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "peneighbors": {
                          "key": "peneighbors",
                          "type": "INPUT",
                          "showDefaultRow": false
                        },
                        "rRs": {
                          "key": "rRs",
                          "type": "INPUT",
                          "showDefaultRow": false
                        },
                        "pneighbor": {
                          "key": "pneighbor",
                          "type": "INPUT",
                          "showDefaultRow": false
                        },
                        "rrBGPDynamicNeighbors": {
                          "key": "rrBGPDynamicNeighbors",
                          "dependency": {
                            "igp": {
                              "value": [
                                "OSPF",
                                "ISIS",
                                "NONE"
                              ],
                              "mode": "HIDE"
                            }
                          },
                          "type": "INPUT"
                        },
                        "evpnEnabled": {
                          "key": "evpnEnabled",
                          "dependency": {
                            "rrAS": {
                              "value": [],
                              "mode": "HIDE"
                            }
                          },
                          "type": "INPUT"
                        },
                        "l3vpnEnabled": {
                          "key": "l3vpnEnabled",
                          "dependency": {
                            "rrAS": {
                              "value": [],
                              "mode": "HIDE"
                            }
                          },
                          "type": "INPUT"
                        },
                        "bgpAuthKey": {
                          "key": "bgpAuthKey",
                          "dependency": {
                            "rrAS": {
                              "value": [],
                              "mode": "HIDE"
                            }
                          },
                          "type": "INPUT"
                        },
                        "staticRoutes": {
                          "key": "staticRoutes",
                          "type": "INPUT",
                          "isPageLayout": false
                        },
                        "prefixLists": {
                          "key": "prefixLists",
                          "type": "INPUT",
                          "isPageLayout": true
                        },
                        "prefixListsseqNums": {
                          "key": "prefixListsseqNums",
                          "type": "INPUT",
                          "isPageLayout": false
                        },
                        "prefixListsseqNumsvalue": {
                          "key": "prefixListsseqNumsvalue",
                          "type": "INPUT",
                          "order": [
                            "prefixListsseqNum",
                            "prefixListsseqpermitDeny",
                            "prefixListsseqprefix",
                            "prefixListsseqprefixLength",
                            "prefixListsseqmaskLength"
                          ]
                        },
                        "peerGrouprouteMapOutGroup": {
                          "key": "peerGrouprouteMapOutGroup",
                          "type": "INPUT",
                          "order": [
                            "peerGrouprouteMapOutseqNum",
                            "peerGrouprouteMapOutdescription",
                            "peerGrouprouteMapOutpermitDeny",
                            "peerGrouprouteMapOutprefixList",
                            "peerGrouprouteMapOutmatchCommunity",
                            "peerGrouprouteMapOutsetCommunity",
                            "peerGrouprouteMapOutasPathPrependRepeat"
                          ]
                        },
                        "ebgpNeighborspeerGroups": {
                          "key": "ebgpNeighborspeerGroups",
                          "type": "INPUT",
                          "isPageLayout": true
                        },
                        "eBgpNeighborsGroup": {
                          "key": "eBgpNeighborsGroup",
                          "type": "INPUT",
                          "order": [
                            "ebgpNeighborsneighborIp",
                            "ebgpNeighborspeerAsn"
                          ]
                        },
                        "eBgpNeighbors": {
                          "key": "eBgpNeighbors",
                          "isPageLayout": false,
                          "type": "INPUT"
                        },
                        "externalInterfaces": {
                          "key": "externalInterfaces",
                          "type": "INPUT",
                          "showDefaultRow": false,
                          "isPageLayout": false
                        },
                        "redistributeConnected": {
                          "key": "redistributeConnected",
                          "type": "INPUT",
                          "dependency": {
                            "igp": {
                              "value": [
                                "OSPF",
                                "ISIS",
                                "NONE"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "redistributeStatic": {
                          "key": "redistributeStatic",
                          "type": "INPUT",
                          "dependency": {
                            "igp": {
                              "value": [
                                "OSPF",
                                "ISIS",
                                "NONE"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "rrHostname": {
                          "key": "rrHostname",
                          "type": "INPUT",
                          "dependency": {}
                        },
                        "peerGroup": {
                          "key": "peerGroup",
                          "type": "INPUT",
                          "order": [
                            "peerGroupName",
                            "peerGroupdescription",
                            "peerGrouppeerAsn",
                            "eBgpNeighbors",
                            "pgaggregateRoutes",
                            "pgredistributeRoutes",
                            "peerGrouplocalAs",
                            "peerGroupnextHopSelf",
                            "peerGroupmaximumAcceptedRoutes",
                            "peerGroupeBgpMultiHopTtl",
                            "peerGroupbfd",
                            "peerGrouprouteMapIn",
                            "peerGrouprouteMapOut"
                          ]
                        },
                        "loopback0Address": {
                          "key": "loopback0Address",
                          "type": "INPUT",
                          "dependency": {
                            "evpnAndVxlan": {
                              "value": [
                                "NOT-ENABLED"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "rrLinkPeer": {
                          "key": "rrLinkPeer",
                          "type": "INPUT",
                          "dependency": {
                            "evpnAndVxlan": {
                              "value": [
                                "NOT-ENABLED"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "rrLinkPeerInterface": {
                          "key": "rrLinkPeerInterface",
                          "type": "INPUT",
                          "dependency": {
                            "evpnAndVxlan": {
                              "value": [
                                "NOT-ENABLED"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "rripAddress": {
                          "key": "rripAddress",
                          "type": "INPUT",
                          "dependency": {
                            "evpnAndVxlan": {
                              "value": [
                                "NOT-ENABLED"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "rsubnetMask": {
                          "key": "rsubnetMask",
                          "type": "INPUT",
                          "dependency": {
                            "evpnAndVxlan": {
                              "value": [
                                "NOT-ENABLED"
                              ],
                              "mode": "HIDE"
                            }
                          }
                        },
                        "rrDownlink": {
                          "key": "rrDownlink",
                          "type": "INPUT",
                          "showDefaultRow": false
                        }
                      }
