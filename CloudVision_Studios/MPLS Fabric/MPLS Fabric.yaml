-
    service: arista.studio.v1.StudioConfigService
    method: Set
    body:
        value:
            key:
                studio_id: 8de0631a-ddf9-4294-b6b5-c49dd9905e67
                workspace_id: 09b493e0-460c-472a-abfb-522a4d491807
            display_name: 'MPLS Fabric'
            description: 'ver. 2.0 Deploy and manage non-overlay networks with OSPF or ISIS or EVPN and L3VPN networks with MPLS or VXLAN.'
            template:
                type: TEMPLATE_TYPE_MAKO
                body: "<%\nimport sys, os, json, ipaddress, re\nfrom typing import List\nimport tagsearch_python.tagsearch_pb2_grpc as tsgr\nimport tagsearch_python.tagsearch_pb2 as tspb\nfrom arista.tag.v2.services import TagServiceStub, TagAssignmentServiceStub, TagConfigServiceStub, TagAssignmentConfigServiceStub\nfrom arista.tag.v2.services.gen_pb2 import TagRequest, TagConfigSetRequest, TagStreamRequest, TagConfigStreamRequest, TagAssignmentStreamRequest, TagAssignmentConfigSetRequest, TagAssignmentConfigStreamRequest\nfrom arista.tag.v2.tag_pb2 import Tag, TagKey, TagAssignment, TagAssignmentKey, TagAssignmentConfig\n\nclass InterfaceConfig:\n  def __init__(self):\n    self.Port= \"\"\n    self.IPAddress= \"\"\n    self.Mask= \"\"\n    self.IPNetwork = \"\"\n    self.Host= \"\"\n    self.NeighborHostname = \"\"\n    self.NeighborPort= \"\"\n    self.ChannelGroup = \"\"\n\nclass Mlag:\n  def __init__(self):\n    self.ID = \"\"\n    self.PeerLink = False\n    self.Interfaces = []\n    self.MlagIPAddr = \"\"\n    self.MlagNetmask = \"\"\n    self.MlagNetwork = \"\"\n    self.MlagIPPeerAddr = \"\"\n    self.MlagPeerName = \"\"\n\nclass NeighborIntf:\n  def __init__(self):\n    self.IPAddress= \"\"\n    self.Port= \"\"\n    self.Host= \"\"\n\nclass TEPolicy:\n  def __init__(self):\n    self.Name = \"\"\n    self.Description = \"\"\n    self.Color = \"\"\n    self.Preference = {}\n    self.BindingID = \"\"\n    self.AllRTs = \"\"\n    self.RTs = []\n    self.TEEndPointLoopback0 = \"\"\n\nclass BGPPeerGroup:\n  def __init__(self):\n    self.Name= \"\"\n    self.EVPN=False\n    self.Peerpe=False\n    self.NeighborASN= \"\"\n    self.NeighborIntfs= []\n\n\nclass SwitchConfig:\n  def __init__(self):\n    self.Model =     \"\"\n    self.EOSVersion = \"\"\n    self.Role=            \"\"\n    self.Hostname = \"\"\n    self.NodeNum = 0\n    self.FabricNetwork = []\n    self.FabricNetmask = \"\"\n    self.Interfaces = []\n    self.PortChannels = []\n    self.MlagMembers =    Mlag()\n    self.Loopback0IP = \"\"\n    self.Loopback0Network= \"\"\n    self.MlagIPAddr= \"\"\n    self.MlagIPPeerAddr = \"\"\n    self.MlagNetmask=\"\"\n    self.MlagNetwork= \"\"\n    self.MlagPeerName= \"\"\n    self.LogicalVTEP= \"\"\n    self.VirtualVTEP= \"\"\n    self.ASN= \"\"\n    self.BGPPeerGroups =  []\n    self.SegmentIndex = \"\"\n    self.teEndPoints =  {}\n    self.tePolicy = []\n  def interfaces(self):\n    return { i : self.Interfaces[i].data() for i in range(0, len(self.Interfaces) ) }\n\ndef get_isis_addr(area_id, area_number, lo0):\n    area_id_str = str(area_id)\n    if len(area_id_str) != 2:\n        area_id_str = '0'+area_id_str\n\n    area_number_str = str(area_number)\n    len_area_number_str = len(area_number_str)\n    for i in range(0, 4 - len_area_number_str) :\n        area_number_str = '0' + area_number_str\n\n    octets = lo0.split('.')\n    lo0_filled_with0 = \"\"\n    for octet in octets :\n        temp = octet\n        for i in range(0, 3 - len(octet)):\n            temp =  '0' + temp\n        lo0_filled_with0 = lo0_filled_with0 + temp\n    sys_id = lo0_filled_with0[0:4] +'.'+lo0_filled_with0[4:8]+'.'+lo0_filled_with0[8:12]\n    return area_id_str+'.'+area_number_str+'.'+sys_id+'.00'\n\n\n\n\ntagValues = {}\nmyPod = None\nmyNodeNum = None\nmyRole = None\nmlagTagged = False\ndcLabel = 'Network'\ndcPodLabel = 'Network'\ndcpeNumLabel = 'Edge-Router-Number'\ndcrrNumLabel = 'RR-Number'\ndcpNumLabel = 'Core-Router-Number'\nmyDevice = ctx.getDevice()\nmyDeviceID = ctx.getDevice().id\nhostnameLabel = 'device'\npeDomainLabel = 'Edge-Router-Domain'\nmodelLabel = 'model'\neosVersionLabel = 'eos'\nhostnameDeviceIDDict = {}\ndeviceIDNodeNumDict = {}\ndeviceIDSwitchConfigDict = {}\nmypeDomain = \"\"\npeDomainToDeviceIDDict = {}\ndeviceIDHostnameDict = {}\nhighestpeNumber = 0\nhighestrrNumber = 0\nhighestpNumber = 0\n\ntsclient = ctx.getApiClient(tsgr.TagSearchStub)\n\ntvs = tspb.TagValueSearchRequest(label=dcPodLabel, workspace_id=ctx.studio.workspaceId)\ntvsresp = tsclient.GetTagValueSuggestions(tvs)\nfor tag in tvsresp.tags:\n  tagtmr = tspb.TagMatchRequestV2(query=\"%s:%s\" % (tag.label, tag.value), workspace_id=ctx.studio.workspaceId)\n  tagresp = tsclient.GetTagMatchesV2(tagtmr)\n  for match in tagresp.matches:\n    if match.device.device_id == myDeviceID:\n      myPod = tag.value\n\ntvs = tspb.TagValueSearchRequest(label=dcpeNumLabel, workspace_id=ctx.studio.workspaceId)\ntvsresp = tsclient.GetTagValueSuggestions(tvs)\nfor tag in tvsresp.tags:\n  tagtmr = tspb.TagMatchRequestV2(query=\"%s:%s\" % (tag.label, tag.value), workspace_id=ctx.studio.workspaceId)\n  tagresp = tsclient.GetTagMatchesV2(tagtmr)\n  for match in tagresp.matches:\n    deviceIDNodeNumDict[match.device.device_id] = tag.value\n    sc = deviceIDSwitchConfigDict.get(match.device.device_id, SwitchConfig())\n    sc.Role = \"pe\"\n    sc.NodeNum = int(tag.value)\n    if highestpeNumber < sc.NodeNum:\n      highestpeNumber = sc.NodeNum\n    deviceIDSwitchConfigDict[match.device.device_id] = sc\n    if match.device.device_id == myDeviceID:\n      myNodeNum = int(tag.value)\n      myRole = \"pe\"\n\ntvs = tspb.TagValueSearchRequest(label=dcpNumLabel, workspace_id=ctx.studio.workspaceId)\ntvsresp = tsclient.GetTagValueSuggestions(tvs)\nfor tag in tvsresp.tags:\n  tagtmr = tspb.TagMatchRequestV2(query=\"%s:%s\" % (tag.label, tag.value), workspace_id=ctx.studio.workspaceId)\n  tagresp = tsclient.GetTagMatchesV2(tagtmr)\n  for match in tagresp.matches:\n    deviceIDNodeNumDict[match.device.device_id] = tag.value\n    sc = deviceIDSwitchConfigDict.get(match.device.device_id, SwitchConfig())\n    sc.Role = \"p\"\n    sc.NodeNum = int(tag.value)\n    if highestpNumber < sc.NodeNum:\n      highestpNumber = sc.NodeNum\n    deviceIDSwitchConfigDict[match.device.device_id] = sc\n    if match.device.device_id == myDeviceID:\n      myNodeNum = int(tag.value)\n      myRole = \"p\"\n\ntvs = tspb.TagValueSearchRequest(label=dcrrNumLabel, workspace_id=ctx.studio.workspaceId)\ntvsresp = tsclient.GetTagValueSuggestions(tvs)\nfor tag in tvsresp.tags:\n  tagtmr = tspb.TagMatchRequestV2(query=\"%s:%s\" % (tag.label, tag.value), workspace_id=ctx.studio.workspaceId)\n  tagresp = tsclient.GetTagMatchesV2(tagtmr)\n  for match in tagresp.matches:\n    deviceIDNodeNumDict[match.device.device_id] = tag.value\n    sc = deviceIDSwitchConfigDict.get(match.device.device_id, SwitchConfig())\n    sc.Role = \"rr\"\n    sc.NodeNum = int(tag.value)\n    if highestrrNumber < sc.NodeNum:\n      highestrrNumber = sc.NodeNum\n    deviceIDSwitchConfigDict[match.device.device_id] = sc\n    if match.device.device_id == myDeviceID:\n      myNodeNum = int(tag.value)\n      myRole = \"rr\"\n\ntvs = tspb.TagValueSearchRequest(label=hostnameLabel, workspace_id=ctx.studio.workspaceId)\ntvsresp = tsclient.GetTagValueSuggestions(tvs)\nfor tag in tvsresp.tags:\n  tagtmr = tspb.TagMatchRequestV2(query=\"%s:%s\" % (tag.label, tag.value), workspace_id=ctx.studio.workspaceId)\n  tagresp = tsclient.GetTagMatchesV2(tagtmr)\n  for match in tagresp.matches:\n    sc = deviceIDSwitchConfigDict.get(match.device.device_id, SwitchConfig())\n    sc.Hostname = tag.value\n    deviceIDSwitchConfigDict[match.device.device_id] = sc\n    hostnameDeviceIDDict[tag.value] = match.device.device_id\n    deviceIDHostnameDict[match.device.device_id] = tag.value\n    if match.device.device_id == myDeviceID:\n      myHostname = tag.value\n\ntvs = tspb.TagValueSearchRequest(label=peDomainLabel, workspace_id=ctx.studio.workspaceId)\ntvsresp = tsclient.GetTagValueSuggestions(tvs)\nfor tag in tvsresp.tags:\n  tagtmr = tspb.TagMatchRequestV2(query=\"%s:%s\" % (tag.label, tag.value), workspace_id=ctx.studio.workspaceId)\n  tagresp = tsclient.GetTagMatchesV2(tagtmr)\n  for match in tagresp.matches:\n    peDomainList = peDomainToDeviceIDDict.get(tag.value)\n    if peDomainList == None :\n      peDomainList = []\n    peDomainList.append(match.device.device_id)\n    peDomainToDeviceIDDict[tag.value] = peDomainList\n    if match.device.device_id == myDeviceID:\n      mypeDomain = tag.value\n\ntvs = tspb.TagValueSearchRequest(label=eosVersionLabel, workspace_id=ctx.studio.workspaceId)\ntvsresp = tsclient.GetTagValueSuggestions(tvs)\nfor tag in tvsresp.tags:\n  tagtmr = tspb.TagMatchRequestV2(query=\"%s:%s\" % (tag.label, tag.value), workspace_id=ctx.studio.workspaceId)\n  tagresp = tsclient.GetTagMatchesV2(tagtmr)\n  for match in tagresp.matches:\n    sc = deviceIDSwitchConfigDict.get(match.device.device_id, SwitchConfig())\n    sc.EOSVersion = tag.value\n    deviceIDSwitchConfigDict[match.device.device_id] = sc\n    if match.device.device_id == myDeviceID:\n      myEOSVersion = tag.value\n\ntvs = tspb.TagValueSearchRequest(label=modelLabel, workspace_id=ctx.studio.workspaceId)\ntvsresp = tsclient.GetTagValueSuggestions(tvs)\nfor tag in tvsresp.tags:\n  tagtmr = tspb.TagMatchRequestV2(query=\"%s:%s\" % (tag.label, tag.value), workspace_id=ctx.studio.workspaceId)\n  tagresp = tsclient.GetTagMatchesV2(tagtmr)\n  for match in tagresp.matches:\n    sc = deviceIDSwitchConfigDict.get(match.device.device_id, SwitchConfig())\n    sc.Model = tag.value\n    deviceIDSwitchConfigDict[match.device.device_id] = sc\n    if match.device.device_id == myDeviceID:\n      myModel = tag.value\n\nif not myPod or not myNodeNum:\n    return\n\ndef create_tag(tag_key):\n    '''\n    tag_key is a TagKey\n    '''\n    tcsr = TagConfigSetRequest()\n    tcsr.value.key.workspace_id.value = tag_key.workspace_id.value\n    tcsr.value.key.element_type = tag_key.element_type\n    tcsr.value.key.label.value = tag_key.label.value\n    tcsr.value.key.value.value = tag_key.value.value\n    client = ctx.getApiClient(TagConfigServiceStub)\n    client.Set(tcsr)\n\ndef apply_tag(tag_assignment_key):\n    '''\n    tag_assignment_key is a TagAssignmentKey\n    '''\n    tacsr = TagAssignmentConfigSetRequest()\n    tacsr.value.key.workspace_id.value = tag_assignment_key.workspace_id.value\n    tacsr.value.key.element_type = tag_assignment_key.element_type\n    tacsr.value.key.label.value = tag_assignment_key.label.value\n    tacsr.value.key.value.value = tag_assignment_key.value.value\n    tacsr.value.key.device_id.value = tag_assignment_key.device_id.value\n    tacsr.value.key.interface_id.value = tag_assignment_key.interface_id.value\n    tacsr.value.remove.value = False\n    client = ctx.getApiClient(TagAssignmentConfigServiceStub)\n    client.Set(tacsr)\n\ndef remove_tag(tag_assignment_key):\n    '''\n    tag_assignment_key is a TagAssignmentKey\n    '''\n    tacsr = TagAssignmentConfigSetRequest()\n    tacsr.value.key.workspace_id.value = tag_assignment_key.workspace_id.value\n    tacsr.value.key.element_type = tag_assignment_key.element_type\n    tacsr.value.key.label.value = tag_assignment_key.label.value\n    tacsr.value.key.value.value = tag_assignment_key.value.value\n    tacsr.value.key.device_id.value = tag_assignment_key.device_id.value\n    tacsr.value.key.interface_id.value = tag_assignment_key.interface_id.value\n    tacsr.value.remove.value = True\n    client = ctx.getApiClient(TagAssignmentConfigServiceStub)\n    client.Set(tacsr)\n\ndef get_tag_values_applied_to_device(tag_assignment_key):\n    label = tag_assignment_key.label.value\n    value = tag_assignment_key.value.value\n    device_id = tag_assignment_key.device_id.value\n    workspace_id = tag_assignment_key.workspace_id.value\n    tsclient = ctx.getApiClient(tsgr.TagSearchStub)\n    matching_tags = []\n    tvsr = tspb.TagValueSearchRequest(label=label, workspace_id=workspace_id, topology_studio_request=True)\n    for tag in tsclient.GetTagValueSuggestions(tvsr).tags:\n      if not tag.value:\n        continue\n      query= \"{}:\\\"{}\\\" AND device:{}\".format(tag.label, tag.value, device_id)\n      tagmr = tspb.TagMatchRequestV2(query=query, workspace_id=workspace_id, topology_studio_request=True)\n      tagmresp =  tsclient.GetTagMatchesV2(tagmr)\n      for match in tagmresp.matches:\n        if match.device.device_id == device_id:\n          matching_tags.append(tag)\n    return matching_tags\n\ndef set_bgp_tags(ASN, Lo0):\n        tag_labels = {\"router_bgp.as\": ASN, \"router_bgp.router_id\": Lo0}\n        for label, config_path in tag_labels.items():\n            tag_key = TagKey()\n            tag_key.workspace_id.value = workspace_id=ctx.studio.workspaceId\n            tag_key.element_type = 1\n            tag_key.label.value = label\n            tag_key.value.value = str(config_path)\n            create_tag(tag_key)\n\n            tag_assignment_key = TagAssignmentKey()\n            tag_assignment_key.workspace_id.value = workspace_id=ctx.studio.workspaceId\n            tag_assignment_key.element_type = 1\n            tag_assignment_key.label.value = label\n            tag_assignment_key.value.value = str(config_path)\n            tag_assignment_key.device_id.value = ctx.getDevice().id\n            apply_tag(tag_assignment_key)\n\n            tag_assignment_key = TagAssignmentKey()\n            tag_assignment_key.workspace_id.value = workspace_id=ctx.studio.workspaceId\n            tag_assignment_key.element_type = 1\n            tag_assignment_key.label.value = label\n            tag_assignment_key.device_id.value =  ctx.getDevice().id\n            applied_tags = get_tag_values_applied_to_device(tag_assignment_key)\n            for tag in applied_tags:\n                if tag.value != str(config_path):\n                    tag_assignment_key.value.value = tag.value\n                    remove_tag(tag_assignment_key)\n\n\npodsInputs = pods.resolve()\nigpOSPF = False\nigpIsis = False\nigp = podsInputs[\"pod\"][\"igp\"]\nif igp == \"OSPF\":\n  igpOSPF = True\nif igp == \"ISIS\":\n  igpIsis = True\nredisConnected = False\nredCon = podsInputs[\"pod\"][\"redistributeConnected\"]\nif redCon == \"ENABLED\":\n  redisConnected = True\nisisAuthKey = podsInputs[\"pod\"][\"isisAuthKey\"]\nospfAuthKey = podsInputs[\"pod\"][\"ospfAuthKey\"]\nmplsSegmentRouting = False\nmplsSRTE = False\nmplsLdp = False\nmplsRsvp = False\nvxlan = False\nmpls = podsInputs[\"pod\"][\"mpls\"]\nif mpls == \"SR\":\n  mplsSegmentRouting = True\nif mpls == \"SR-TE\":\n  mplsSRTE = True\nif mpls == \"LDP\":\n  mplsLdp = True\nif mpls == \"RSVP\":\n  mplsRsvp = True\nif mpls == \"VXLAN\":\n  vxlan = True\n\nsrTiFla = \"\"\ntiFla = podsInputs[\"pod\"][\"srTiFla\"]\nif tiFla == \"ENABLED\":\n  srTiFla = \"True\"\n\nlacpmode = False\nlacp = mpls = podsInputs[\"pod\"][\"commonMlagConfig\"][\"lacpMode\"]\nif lacp == \"ACTIVE\":\n  lacpmode = True\n\nvlans = []\n\nevpnEnabled = podsInputs[\"pod\"][\"commonBGPConfig\"][\"evpnEnabled\"]\nl3vpnEnabled = podsInputs[\"pod\"][\"commonBGPConfig\"][\"l3vpnEnabled\"]\nbgpAuthKey = podsInputs[\"pod\"][\"commonBGPConfig\"][\"bgpAuthKey\"]\npeDomains = podsInputs[\"pod\"][\"peDomains\"].resolve()\nfor key in deviceIDSwitchConfigDict:\n  sc = deviceIDSwitchConfigDict[key]\n  if sc.Role == \"rr\":\n    sc.ASN = podsInputs[\"pod\"][\"commonBGPConfig\"][\"rrAS\"]\n    sc.Loopback0IP = podsInputs[\"pod\"][\"rrs\"].resolve(sc.Hostname)[\"rrInterfaceParams\"][\"loopback0Address\"]\n  else :\n    peASN = podsInputs[\"pod\"][\"commonBGPConfig\"][\"rrAS\"]\n    sc.ASN = str(peASN)\n    if sc.Role == \"pe\":\n      sc.Loopback0IP = peDomains[\"peDomain\"][\"peDetails\"].resolve()[\"peLinkDetails\"][\"loopback0Address\"]\n      if vxlan == True:\n        sc.LogicalVTEP = peDomains[\"peDomain\"][\"peDetails\"].resolve()[\"peLinkDetails\"][\"loopback1Address\"]\n    if sc.Role == \"p\":\n      sc.Loopback0IP =  podsInputs[\"pod\"][\"pRouters\"].resolve()[\"pLinkDetails\"][\"loopback0Address\"]\n\n\nrrs = podsInputs[\"pod\"][\"rrs\"].resolve()\nrrInterface = rrs[\"rrInterfaceParams\"][\"rrDownlink\"]\n\nmySC = deviceIDSwitchConfigDict[myDeviceID]\n\nrrBGPDynamicNeighbors = podsInputs[\"pod\"][\"commonBGPConfig\"][\"rrBGPDynamicNeighbors\"]\nasnBGPPeerDict = {}\nmySCList = []\n\n\nif myRole == \"rr\":\n  isisNet = get_isis_addr(49, 1, podsInputs[\"pod\"][\"rrs\"].resolve()[\"rrInterfaceParams\"][\"loopback0Address\"])\n  if rrInterface:\n    for intf in myDevice.getInterfaces():\n      intfName = intf.name\n      val = val = rrInterface.resolve(intfName, strict=True)\n      if not val:\n        continue\n      intf = InterfaceConfig()\n      intf.Port = intfName\n      intf.NeighborHostname = val[\"rrNeighborParams\"][\"rrLinkPeer\"]\n      intf.NeighborPort = val[\"rrNeighborParams\"][\"rrLinkPeerInterface\"]\n      neighborDeviceID = hostnameDeviceIDDict[intf.NeighborHostname]\n      neighborNodeNum = deviceIDNodeNumDict.get(neighborDeviceID)\n      assert neighborNodeNum, \"neighbor missing: %s\" % neighborDeviceID\n\n      intf.IPAddress = val[\"rrNeighborParams\"][\"rripAddress\"]\n      intf.Mask = val[\"rrNeighborParams\"][\"rrsubnetMask\"]\n      mySC.Interfaces.append(intf)\n      neighborSC = deviceIDSwitchConfigDict[neighborDeviceID]\n      neighborIntf = InterfaceConfig()\n      neighborIntf.Port = intf.NeighborPort\n      neighborIntf.NeighborPort = intf.Port\n\n      neighborSC.Interfaces.append(neighborIntf)\n      if not rrBGPDynamicNeighbors:\n        scList = asnBGPPeerDict.get(neighborSC.ASN)\n        if scList == None:\n          scList = []\n        scList.append(neighborSC)\n        asnBGPPeerDict[neighborSC.ASN] = scList\n  for key in asnBGPPeerDict :\n    scList = asnBGPPeerDict.get(key)\n    peerGroup = BGPPeerGroup()\n    vpnPeerGroup = BGPPeerGroup()\n    vpnPeerGroup.EVPN  = True\n    peerGroupNum = str(scList[0].NodeNum // 2 + scList[0].NodeNum%2)\n    pes = len(scList)\n    if pes == 2:\n      peerGroup.Name = \"PEPair\" + peerGroupNum\n      vpnPeerGroup.Name = \"PEPair\" + peerGroupNum\n    else:\n      peerGroup.Name = \"PE\" + peerGroupNum\n      vpnPeerGroup.Name = \"PE\" + peerGroupNum\n    peerGroup.NeighborASN = vpnPeerGroup.NeighborASN = key\n    neighborLoopbacks = []\n    neighborIntfs = []\n    for sc in scList :\n      bgpPeerIntf  = NeighborIntf()\n      evpnPeerIntf = NeighborIntf()\n      evpnPeerIntf.Host = sc.Hostname\n      bgpPeerIntf.Host = sc.Hostname\n      evpnPeerIntf.Port = \"Loopback0\"\n      bgpPeerIntf.IPAddress = sc.Interfaces[0].IPAddress\n      evpnPeerIntf.IPAddress = sc.Loopback0IP\n      neighborIntfs.append(bgpPeerIntf)\n      neighborLoopbacks.append(evpnPeerIntf)\n    peerGroup.NeighborIntfs = neighborIntfs\n    vpnPeerGroup.NeighborIntfs = neighborLoopbacks\n    mySC.BGPPeerGroups.append(peerGroup)\n    mySC.BGPPeerGroups.append(vpnPeerGroup)\n\n\nmlagEnabled = False\nmlagSubnetMask = 31\ncommonMlagConfig = podsInputs[\"pod\"][\"commonMlagConfig\"]\n\nif myRole == \"pe\":\n  mlag = Mlag()\n  mySC.MlagNetwork = ipaddress.ip_network(commonMlagConfig[\"mlagLinkSubnet\"])\n  mySC.MlagIPAddr = mySC.MlagNetwork[(myNodeNum % 2) - 1]\n  mySC.MlagNetmask = mlagSubnetMask\n  mySC.MlagIPPeerAddr = mySC.MlagNetwork[myNodeNum % 2]\n  mlagIntf1 = InterfaceConfig()\n  mlagIntf2 = InterfaceConfig()\n  if podsInputs[\"pod\"][\"peDomains\"].resolve()[\"peDomain\"][\"peDetails\"].resolve()[\"peLinkDetails\"][\"peMLAGInterface1\"]:\n    mlagIntf1.Port = podsInputs[\"pod\"][\"peDomains\"].resolve()[\"peDomain\"][\"peDetails\"].resolve()[\"peLinkDetails\"][\"peMLAGInterface1\"]\n  if podsInputs[\"pod\"][\"peDomains\"].resolve()[\"peDomain\"][\"peDetails\"].resolve()[\"peLinkDetails\"][\"peMLAGInterface2\"]:\n    mlagIntf2.Port = podsInputs[\"pod\"][\"peDomains\"].resolve()[\"peDomain\"][\"peDetails\"].resolve()[\"peLinkDetails\"][\"peMLAGInterface2\"]\n  if mlagIntf1.Port != \"\" :\n    mlag.Interfaces.append(mlagIntf1)\n  if mlagIntf2.Port != \"\" :\n    mlag.Interfaces.append(mlagIntf2)\n  if mlagIntf1.Port !=\"\" or mlagIntf2.Port != \"\":\n    mySC.MlagMembers = mlag\n    mlagEnabled = True\n    mlagedDevices = peDomainToDeviceIDDict.get(mypeDomain)\n    if mlagedDevices != None and len(mlagedDevices) == 2 :\n      peerDeviceID = \"\"\n      bgpPeerIntf  = NeighborIntf()\n      if mlagedDevices[0] == myDeviceID:\n        peerDeviceID = mlagedDevices[1]\n      elif mlagedDevices[1] == myDeviceID:\n        peerDeviceID = mlagedDevices[0]\n      bgpPeerIntf.Host = deviceIDHostnameDict[peerDeviceID]\n      mySC.MlagPeerName = deviceIDHostnameDict[peerDeviceID]\n      bgpPeerIntf.Port = \"MLAG\"\n      bgpPeerIntf.IPAddress = mySC.MlagIPPeerAddr\n      bgpPeerGroup = BGPPeerGroup()\n      bgpPeerGroup.Name = \"Peer_PE\"\n      bgpPeerGroup.NeighborASN = mySC.ASN\n      bgpPeerGroup.Peerpe = True\n      bgpPeerGroup.NeighborIntfs.append(bgpPeerIntf)\n      mySC.BGPPeerGroups.append(bgpPeerGroup)\n  isisNet = get_isis_addr(49, 1, peDomains[\"peDomain\"][\"peDetails\"].resolve()[\"peLinkDetails\"][\"loopback0Address\"])\n  nodesegmentindex = peDomains[\"peDomain\"][\"peDetails\"].resolve()[\"peLinkDetails\"][\"penodeSegmentIndex\"]\n  mySC.SegmentIndex = nodesegmentindex\n  for ep in peDomains[\"peDomain\"][\"peDetails\"].resolve()[\"peLinkDetails\"][\"teEndPoints\"]:\n    epName = ep.name\n    epDeviceId = hostnameDeviceIDDict[epName]\n    epLoopback0 = podsInputs[\"pod\"][\"peDomains\"].resolve(epDeviceId)[\"peDomain\"][\"peDetails\"].resolve(epDeviceId)[\"peLinkDetails\"][\"loopback0Address\"]\n    epPolicies = []\n    for policy in ep.policy:\n      epPolicy = TEPolicy()\n      epPolicy.Name = policy.name\n      epPolicy.Description = policy.description\n      epPolicy.Color = policy.color\n      epPolicy.AllRTs = policy.matchAllRTs\n      epPolicy.BindingID = policy.bindingId\n      for pref in policy.pathPreference:\n        segList = \"\"\n        for hostname in pref.segmentList.strip().split():\n          deviceId = hostnameDeviceIDDict[hostname]\n          deviceSC =  deviceIDSwitchConfigDict[deviceId]\n          if deviceSC.Role == \"pe\":\n            segId = podsInputs[\"pod\"][\"peDomains\"].resolve(deviceId)[\"peDomain\"][\"peDetails\"].resolve(deviceId)[\"peLinkDetails\"][\"penodeSegmentIndex\"]\n            segId = int(segId) + 900000\n          elif deviceSC.Role == \"p\":\n            segId = podsInputs[\"pod\"][\"pRouters\"].resolve(deviceId)[\"pLinkDetails\"][\"pnodeSegmentIndex\"]\n            segId = int(segId) + 900000\n          else:\n            raise Exception(\"Device [%s] is not PE or a P device\" %hostname)\n          segList = segList + \" \" + str(segId)\n        epPolicy.Preference[pref.preference] = segList\n      epPolicy.TEEndPointLoopback0 = epLoopback0\n\n      for rt in policy.rTs:\n        epPolicy.RTs.append(rt.rtValue)\n      epPolicies.append(epPolicy)\n    mySC.teEndPoints[epName] = epPolicies\n\n  if peDomains[\"peDomain\"][\"peDetails\"].resolve()[\"peLinkDetails\"][\"rrHostnames\"]:\n    for intf in myDevice.getInterfaces():\n      intfName = intf.name\n      val = []\n      for rr in peDomains[\"peDomain\"][\"peDetails\"].resolve()[\"peLinkDetails\"][\"rrHostnames\"]:\n        if intfName == rr.localInterface:\n          val = rr\n      if val:\n        intf = InterfaceConfig()\n        intf.Port = intfName\n        intf.NeighborHostname = val.rrHostname\n        intf.NeighborPort = val.localInterface\n        neighborDeviceID = hostnameDeviceIDDict[intf.NeighborHostname]\n        neighborNodeNum = deviceIDNodeNumDict.get(neighborDeviceID)\n        assert neighborNodeNum, \"rr neighbor missing: %s\" % neighborDeviceID\n\n        intf.IPAddress = val.localIpAddress\n        intf.Mask = val.localSubnetMask\n        mySC.Interfaces.append(intf)\n        neighborSC = deviceIDSwitchConfigDict[neighborDeviceID]\n        neighborIntf = InterfaceConfig()\n        neighborIntf.Port = intf.NeighborPort\n        neighborIntf.NeighborPort = intf.Port\n        neighborIntf.IPNetwork = intf.IPNetwork\n\n        neighborIntf.Mask = fabricSubnetMask\n        neighborSC.Interfaces.append(neighborIntf)\n        scList = asnBGPPeerDict.get(neighborSC.ASN)\n        if scList == None:\n          scList = []\n        scList.append(neighborSC)\n        asnBGPPeerDict[neighborSC.ASN] = scList\n    index = 0\n    for rr in peDomains[\"peDomain\"][\"peDetails\"].resolve()[\"peLinkDetails\"][\"rrHostnames\"]:\n      val = []\n      if rr.localInterface == \"\":\n        port = str(index)\n        rr.localInterface = port\n        val = rr\n        index = index = 1\n      if val:\n        intf = InterfaceConfig()\n        intf.Port = rr.localInterface\n        intf.NeighborHostname = val.rrHostname\n        intf.NeighborPort = val.localInterface\n        neighborDeviceID = hostnameDeviceIDDict[intf.NeighborHostname]\n        neighborNodeNum = deviceIDNodeNumDict.get(neighborDeviceID)\n        assert neighborNodeNum, \"rr neighbor missing: %s\" % neighborDeviceID\n\n        intf.IPAddress = val.localIpAddress\n        intf.Mask = val.localSubnetMask\n        mySC.Interfaces.append(intf)\n        neighborSC = deviceIDSwitchConfigDict[neighborDeviceID]\n        neighborIntf = InterfaceConfig()\n        neighborIntf.Port = intf.NeighborPort\n        neighborIntf.NeighborPort = intf.Port\n        neighborIntf.IPNetwork = intf.IPNetwork\n\n        neighborIntf.Mask = fabricSubnetMask\n        neighborSC.Interfaces.append(neighborIntf)\n        scList = asnBGPPeerDict.get(neighborSC.ASN)\n        if scList == None:\n          scList = []\n        scList.append(neighborSC)\n        asnBGPPeerDict[neighborSC.ASN] = scList\n  pe2peLink = peDomains[\"peDomain\"][\"peDetails\"].resolve()[\"peLinkDetails\"][\"peneighbors\"]\n  if pe2peLink :\n    for intf in myDevice.getInterfaces():\n      intfName = intf.name\n      val = pe2peLink.resolve(intfName, strict=True)\n      if val:\n        intf = InterfaceConfig()\n        intf.Port = intfName\n        intf.NeighborHostname = val[\"peneighborDetails\"][\"pehostName\"]\n        intf.NeighborPort = val[\"peneighborDetails\"][\"peinterface\"]\n        intf.IPAddress = val[\"peneighborDetails\"][\"peipAddress\"]\n        intf.Mask = val[\"peneighborDetails\"][\"pesubnetMask\"]\n        neighborDeviceID = hostnameDeviceIDDict[intf.NeighborHostname]\n        neighborNodeNum = deviceIDNodeNumDict.get(neighborDeviceID)\n        assert neighborNodeNum, \"neighbor missing: %s\" % neighborDeviceID\n        mySC.Interfaces.append(intf)\n  for key in asnBGPPeerDict :\n    scList = asnBGPPeerDict.get(key)\n    peerGroup = BGPPeerGroup()\n    vpnPeerGroup = BGPPeerGroup()\n    vpnPeerGroup.EVPN  = True\n    peerGroup.Name = \"RR\"\n    vpnPeerGroup.Name = \"RR\"\n    peerGroup.NeighborASN = key\n    vpnPeerGroup.NeighborASN = key\n    neighborLoopbacks = []\n    neighborIntfs = []\n    for sc in scList :\n      bgpPeerIntf  = NeighborIntf()\n      evpnPeerIntf = NeighborIntf()\n      evpnPeerIntf.Host = sc.Hostname\n      bgpPeerIntf.Host = sc.Hostname\n      bgpPeerIntf.Port = sc.Interfaces[0].Port\n      evpnPeerIntf.Port = \"Loopback0\"\n      bgpPeerIntf.IPAddress = sc.Interfaces[0].IPAddress\n      evpnPeerIntf.IPAddress = sc.Loopback0IP\n      neighborIntfs.append(bgpPeerIntf)\n      neighborLoopbacks.append(evpnPeerIntf)\n    peerGroup.NeighborIntfs = neighborIntfs\n    vpnPeerGroup.NeighborIntfs = neighborLoopbacks\n    mySC.BGPPeerGroups.append(peerGroup)\n    mySC.BGPPeerGroups.append(vpnPeerGroup)\n\n\n\nif myRole == \"p\":\n  isisNet = get_isis_addr(49, 1, podsInputs[\"pod\"][\"pRouters\"].resolve()[\"pLinkDetails\"][\"loopback0Address\"])\n  p2rrInterface = podsInputs[\"pod\"][\"pRouters\"].resolve()[\"pLinkDetails\"][\"rRs\"]\n  nodesegmentindex = podsInputs[\"pod\"][\"pRouters\"].resolve()[\"pLinkDetails\"][\"pnodeSegmentIndex\"]\n  if p2rrInterface:\n    for intf in myDevice.getInterfaces():\n      intfName = intf.name\n      val = p2rrInterface.resolve(intfName, strict=True)\n      if val:\n        intf = InterfaceConfig()\n        intf.Port = intfName\n        intf.NeighborHostname = val[\"prrDetails\"][\"prrhostName\"]\n        intf.NeighborPort = val[\"prrDetails\"][\"prrinterface\"]\n        neighborDeviceID = hostnameDeviceIDDict[intf.NeighborHostname]\n        neighborNodeNum = deviceIDNodeNumDict.get(neighborDeviceID)\n        assert neighborNodeNum, \"rr neighbor missing: %s\" % neighborDeviceID\n\n        intf.IPAddress = val[\"prrDetails\"][\"prripAddress\"]\n        intf.Mask = val[\"prrDetails\"][\"prrsubnetMask\"]\n        mySC.Interfaces.append(intf)\n        neighborSC = deviceIDSwitchConfigDict[neighborDeviceID]\n        neighborIntf = InterfaceConfig()\n        neighborIntf.Port = intf.NeighborPort\n        neighborIntf.NeighborPort = intf.Port\n        neighborIntf.IPNetwork = intf.IPNetwork\n\n        neighborSC.Interfaces.append(neighborIntf)\n        scList = asnBGPPeerDict.get(neighborSC.ASN)\n        if scList == None:\n          scList = []\n        scList.append(neighborSC)\n        asnBGPPeerDict[neighborSC.ASN] = scList\n  p2peLink = podsInputs[\"pod\"][\"pRouters\"].resolve()[\"pLinkDetails\"][\"pneighbor\"]\n  if p2peLink :\n    for intf in myDevice.getInterfaces():\n      intfName = intf.name\n      val = p2peLink.resolve(intfName, strict=True)\n      if val:\n        intf = InterfaceConfig()\n        intf.Port = intfName\n        intf.NeighborHostname = val[\"pneighborDetails\"][\"phostName\"]\n        intf.NeighborPort = val[\"pneighborDetails\"][\"pinterface\"]\n        intf.IPAddress = val[\"pneighborDetails\"][\"pipAddress\"]\n        intf.Mask = val[\"pneighborDetails\"][\"psubnetMask\"]\n        neighborDeviceID = hostnameDeviceIDDict[intf.NeighborHostname]\n        neighborNodeNum = deviceIDNodeNumDict.get(neighborDeviceID)\n        assert neighborNodeNum, \"p neighbor missing: %s\" % neighborDeviceID\n        mySC.Interfaces.append(intf)\n  for key in asnBGPPeerDict :\n    scList = asnBGPPeerDict.get(key)\n    peerGroup = BGPPeerGroup()\n    vpnPeerGroup = BGPPeerGroup()\n    vpnPeerGroup.EVPN  = True\n    peerGroup.Name = \"RR\"\n    vpnPeerGroup.Name = \"RR\"\n    peerGroup.NeighborASN = key\n    vpnPeerGroup.NeighborASN = key\n    neighborLoopbacks = []\n    neighborIntfs = []\n    for sc in scList :\n      bgpPeerIntf  = NeighborIntf()\n      evpnPeerIntf = NeighborIntf()\n      evpnPeerIntf.Host = sc.Hostname\n      bgpPeerIntf.Host = sc.Hostname\n      bgpPeerIntf.Port = sc.Interfaces[0].Port\n      evpnPeerIntf.Port = \"Loopback0\"\n      bgpPeerIntf.IPAddress = sc.Interfaces[0].IPAddress\n      evpnPeerIntf.IPAddress = sc.Loopback0IP\n      neighborIntfs.append(bgpPeerIntf)\n      neighborLoopbacks.append(evpnPeerIntf)\n    peerGroup.NeighborIntfs = neighborIntfs\n    vpnPeerGroup.NeighborIntfs = neighborLoopbacks\n    mySC.BGPPeerGroups.append(peerGroup)\n    mySC.BGPPeerGroups.append(vpnPeerGroup)\n\n\ninternalVlan = commonMlagConfig[\"internalVlan\"]\nmlagPortChannelId = commonMlagConfig[\"mlagPortChannelId\"]\nvirtualRouterMac = commonMlagConfig[\"virtualRouterMac\"]\nif mySC.ASN:\n  if mySC.Loopback0IP:\n    set_bgp_tags(mySC.ASN, mySC.Loopback0IP)\n%>\n\n!--  Configuration Section --!\n! My Device\nbanner motd\nDevice: ${myDeviceID}\nRole: ${myRole} ${myNodeNum}\nNetwork: ${myPod}\n%if myRole == \"pe\" :\nPE-Domain: ${mypeDomain}\n%endif\nAccess by authorized users only!\nEOF\n!\n%if evpnEnabled or l3vpnEnabled:\nservice routing protocols model multi-agent\n%endif\n!\n!-- Fabric interfaces --!\n\n%for intf in mySC.Interfaces:\n%if  intf.Port != \"0\":\n%if  intf.Port != \"1\":\n%if  intf.Port != \"2\":\n%if  intf.Port != \"3\":\ninterface ${intf.Port}\n  description To ${intf.NeighborHostname}-${intf.NeighborPort}\n%if mySC.Model != \"vEOS\" and mySC.Model != \"vEOS-lab\":\n%if mySC.Model != \"cEOSLab\":\n  mtu 9214\n%endif\n%endif\n\n  no switchport\n  ip address ${intf.IPAddress}/${intf.Mask}\n  %if igpOSPF:\n  ip ospf network point-to-point\n  ip ospf area 0\n    %if ospfAuthKey:\n  ip ospf authentication message-digest\n  ip ospf message-digest-key 1 md5 0 ${ospfAuthKey}\n    %endif\n  %endif\n  %if igpIsis:\n  isis enable 1\n  isis network point-to-point\n    %if isisAuthKey:\n  isis authentication mode sha key-id 1 level-2\n  isis authentication key-id 1 algorithm sha-256 key 0 ${isisAuthKey} level-2\n    %endif\n  !\n  %endif\n!\n%endif\n%endif\n%endif\n%endif\n%endfor\n${igpConfig()}\n%if myRole == \"pe\":\n  %if mlagEnabled:\n${mlagConfig()}\n  %endif\n!\n${peBGPConfig()}\n!\n%endif\n%if myRole == \"rr\":\n${rrBGPConfig()}\n!\n%endif\n\n!-- MLAG Section --!\n\n<%def name=\"mlagConfig()\">\n\nno spanning-tree vlan-id ${internalVlan}\n%for mlag in mySC.MlagMembers.Interfaces:\ninterface ${mlag.Port}\n  description MLAG-PEER-LINK to ${mySC.MlagPeerName}\n% if lacpmode == False:\n  channel-group ${mlagPortChannelId} mode on\n% else:\n  channel-group ${mlagPortChannelId} mode active\n%endif\n!\n%endfor\n!-- MLAG configuration --!\ninterface Port-Channel ${mlagPortChannelId}\n  description MLAG-PEER-LINK\n  switchport\n  switchport mode trunk\n  switchport trunk group MLAG-PEER\n!\ninterface Vlan ${internalVlan}\n  description MLAG to ${mySC.MlagPeerName}\n  no autostate\n  ip address ${mySC.MlagIPAddr}/${mySC.MlagNetmask}\n  %if mySC.Model != \"vEOS\" and mySC.Model != \"vEOS-lab\":\n  %if mySC.Model != \"cEOSLab\":\n  mtu 9214\n  %endif\n  %endif\n  %if igpOSPF:\n  ip ospf network point-to-point\n  ip ospf area 0\n  %endif\n  %if igpIsis:\n  isis enable 1\n  isis network point-to-point\n  !\n  %endif\n!\nvlan ${internalVlan}\n  name MLAG-PEER-VLAN\n  trunk group MLAG-PEER\n!\nmlag configuration\n  domain-id MLAG\n  local-interface Vlan${internalVlan}\n  peer-address ${mySC.MlagIPPeerAddr}\n  peer-link Port-Channel${mlagPortChannelId}\n  reload-delay mlag 300\n  reload-delay non-mlag 360\n!\n</%def>\n\n!-- IGP Section --!\n\n<%def name=\"igpConfig()\">\n%if mySC.Loopback0IP:\ninterface Loopback0\n  description Router ID\n  ip address ${mySC.Loopback0IP}/32\n  %if igpOSPF:\n  ip ospf area 0\n  %endif\n  %if igpIsis:\n  !\n  isis enable 1\n  isis passive\n  !\n    %if myRole != \"rr\":\n      %if mplsSegmentRouting or mplsSRTE:\n      node-segment ipv4 index ${nodesegmentindex}\n      %endif\n    %endif\n  %endif\n!\n%endif\nip routing\n!\n%if myRole != \"rr\":\n%if mplsSegmentRouting or mplsSRTE:\nmpls ip\n!\n%endif\n%if mplsLdp:\nmpls ip\n!\nmpls ldp\n   router-id interface Loopback0\n   no shutdown\n!\n%endif\n%if mplsRsvp:\nmpls ip\n!\nmpls rsvp\n   no shutdown\n%endif\n%endif\n%if igpOSPF:\nrouter ospf 1\n  %if mySC.Loopback0IP:\nrouter-id ${mySC.Loopback0IP}\n  %endif\nbfd default\n  %if redisConnected:\nredistribute connected\n  %endif\n!\n%endif\n%if igpIsis:\n%if isisNet != \"49.0001.000...00\":\nrouter isis 1\n  %if isisAuthKey:\n    authentication mode md5\n    authentication key ${isisAuthKey}\n  %endif\n   net ${isisNet}\n   is-type level-2\n   advertise passive-only\n   %if redisConnected:\n     redistribute connected\n   %endif\n   !\n   address-family ipv4 unicast\n   bfd all-interfaces\n   !\n   %if myRole != \"rr\":\n     %if mplsSegmentRouting or mplsSRTE:\n       %if srTiFla:\n       timers local-convergence-delay protected-prefixes\n       fast-reroute ti-lfa mode link-protection level-2\n      !\n      %endif\n     segment-routing mpls\n        router-id ${mySC.Loopback0IP}\n        no shutdown\n        !\n      %if mplsSRTE:\n       router traffic-engineering\n         router-id ipv4 ${mySC.Loopback0IP}\n         segment-routing\n           rib system-colored-tunnel-rib\n           %if mySC.teEndPoints:\n            %for ep, policies in mySC.teEndPoints.items():\n              %for policy in policies:\n                policy endpoint ${policy.TEEndPointLoopback0} color ${policy.Color}\n                  name ${policy.Name}\n                  description ${policy.Description} ${ep}\n                  binding-sid ${policy.BindingID}\n                  %for pref in policy.Preference:\n                    <%segList = policy.Preference[pref]%>\n                  path-group preference ${pref}\n                    segment-list label-stack ${segList}\n                  %endfor\n                %endfor\n            %endfor\n           %endif\n       %endif\n    %endif\n    %endif\n!\n%endif\n%endif\n</%def>\n\n!-- BGP Section --!\n\n<%def name=\"peBGPConfig()\">\n!-- BGP EVPN configuration\n%if vxlan:\ninterface vxlan 1\n  vxlan source-interface Loopback1\n  vxlan udp-port 4789\n  %if mlagEnabled:\n  vxlan virtual-router encapsulation mac-address mlag-system-id\n  %endif\n!\n%if mySC.LogicalVTEP:\ninterface Loopback1\n  description VXLAN Tunnel Source\n  ip address ${mySC.LogicalVTEP}/32\n  %if igpOSPF:\n  ip ospf area 0\n  %endif\n  %if igpIsis:\n  !\n  isis enable 1\n  isis passive\n  !\n  %endif\n!\n%endif\n%endif\n\n!\n%if mplsSRTE:\n  %if mySC.teEndPoints:\n    %for ep, policies in mySC.teEndPoints.items():\n      <%policyNumber = 10%>\n      %for policy in policies:\n        %if policy.RTs:\n          %for rt in policy.RTs:\n          ip extcommunity-list ${policy.Name} permit rt ${rt}\n          %endfor\n        %endif\n        !\n        route-map EVPN-COLORING permit ${policyNumber}\n        %if policy.AllRTs == False:\n          match extcommunity ${policy.Name}\n        %endif\n          set extcommunity color ${policy.Color} additive\n       !\n        <%policyNumber = policyNumber + 10%>\n      %endfor\n     %endfor\n     route-map EVPN-COLORING permit 1000\n  %endif\n\n%endif\n!\n%if evpnEnabled or l3vpnEnabled:\nrouter bgp ${mySC.ASN}\n%if mySC.Loopback0IP:\n  router-id ${mySC.Loopback0IP}\n%endif\n  maximum-paths 4 ecmp 4\n%if mySC.Model != \"vEOS\" and mySC.Model != \"vEOS-lab\":\n  %if mySC.Model != \"cEOSLab\":\n  update wait-for-convergence\n  update wait-install\n  %endif\n%endif\n%for peerGroup in mySC.BGPPeerGroups:\n  %if peerGroup.EVPN:\n    %if evpnEnabled or l3vpnEnabled:\n  neighbor ${peerGroup.Name} peer group\n  neighbor ${peerGroup.Name} remote-as ${peerGroup.NeighborASN }\n  neighbor ${peerGroup.Name} update-source Loopback0\n  neighbor ${peerGroup.Name} send-community extended\n  neighbor ${peerGroup.Name} maximum-routes  0 warning-limit 12000\n  %if bgpAuthKey:\n  neighbor ${peerGroup.Name} password 0 ${bgpAuthKey}\n  %endif\n    %endif\n  %endif\n%endfor\n%for peerGroup in mySC.BGPPeerGroups:\n  %for intf in peerGroup.NeighborIntfs:\n      %if peerGroup.EVPN:\n      neighbor ${intf.IPAddress} peer group ${peerGroup.Name}\n      neighbor ${intf.IPAddress} description ${intf.Host}\n    %endif\n\n  %endfor\n%endfor\n%if evpnEnabled:\n  address-family evpn\n  %if mplsSegmentRouting or mplsSRTE or mplsLdp or mplsRsvp:\n    neighbor default encapsulation mpls next-hop-self source-interface Loopback0\n  !\n  %endif\n  %for peerGroup in mySC.BGPPeerGroups:\n    %if peerGroup.EVPN:\n    neighbor ${peerGroup.Name} activate\n      %if mplsSRTE:\n        %if mySC.teEndPoints:\n        neighbor ${peerGroup.Name} route-map EVPN-COLORING in\n        %endif\n      %endif\n  !\n    %endif\n  %endfor\n  address-family ipv4\n  %for peerGroup in mySC.BGPPeerGroups:\n    %if peerGroup.EVPN:\n    no neighbor ${peerGroup.Name} activate\n  !\n    %endif\n  %endfor\n%endif\n%if l3vpnEnabled:\n  address-family vpn-ipv4\n  %if mplsSegmentRouting or mplsSRTE or mplsLdp or mplsRsvp:\n    neighbor default encapsulation mpls next-hop-self source-interface Loopback0\n    !\n  %endif\n  %for peerGroup in mySC.BGPPeerGroups:\n    %if peerGroup.EVPN:\n    neighbor ${peerGroup.Name} activate\n      %if mplsSRTE:\n        %if mySC.teEndPoints:\n        neighbor ${peerGroup.Name} route-map EVPN-COLORING in\n        %endif\n      %endif\n  !\n    %endif\n  %endfor\n  address-family ipv4\n  %for peerGroup in mySC.BGPPeerGroups:\n    %if peerGroup.EVPN:\n    no neighbor ${peerGroup.Name} activate\n  !\n    %endif\n  %endfor\n%endif\n%endif\n</%def>\n\n<%def name=\"rrBGPConfig()\">\n!-- BGP EVPN configuration\n!\n%if evpnEnabled or l3vpnEnabled:\n%if rrBGPDynamicNeighbors:\npeer-filter PE-AS-Range\n  10 match as-range 1-65535 result accept\n!\nrouter bgp ${mySC.ASN}\n%if mySC.Loopback0IP:\n  router-id ${mySC.Loopback0IP}\n  bgp cluster-id ${mySC.Loopback0IP}\n%endif\n%if mySC.Model != \"vEOS\" and mySC.Model != \"vEOS-lab\":\n%if mySC.Model != \"cEOSLab\":\n  update wait-for-convergence\n  update wait-install\n%endif\n%endif\n\n  bgp log-neighbor-changes\n  %if evpnEnabled or l3vpnEnabled:\n  neighbor iBGP-PE peer group\n  neighbor iBGP-PE send-community extended\n  neighbor iBGP-PE maximum-routes 0 warning-limit 12000\n  neighbor iBGP-PE update-source Loopback0\n  neighbor iBGP-PE route-reflector-client\n  %if bgpAuthKey:\n  neighbor iBGP-PE password 0 ${bgpAuthKey}\n  %endif\n  bgp route-reflector preserve-attributes always\n  %endif\n  %if evpnEnabled or l3vpnEnabled:\n  bgp listen range 0.0.0.0/0 peer-group iBGP-PE peer-filter pe-AS-Range\n  %endif\n  %if evpnEnabled:\n  address-family evpn\n    neighbor iBGP-PE activate\n    next-hop resolution disabled\n  !\n  address-family ipv4\n    no neighbor iBGP-PE activate\n  !\n  %endif\n  %if l3vpnEnabled:\n  address-family vpn-ipv4\n    neighbor iBGP-PE activate\n    next-hop resolution disabled\n  !\n  address-family ipv4\n    no neighbor iBGP-PE activate\n  !\n  %endif\n%else:\nrouter bgp ${mySC.ASN}\n  router-id ${mySC.Loopback0IP}\n  %if  evpnEnabled or l3vpnEnabled:\n  neighbor iBGP-PE peer group\n  neighbor iBGP-PE route-reflector-client\n  neighbor iBGP-PE update-source Loopback0\n  neighbor iBGP-PE send-community extended\n  neighbor iBGP-PE maximum-routes 0 warning-limit 12000\n  %endif\n  %for peerGroup in mySC.BGPPeerGroups:\n    %if peerGroup.EVPN:\n      %if evpnEnabled or l3vpnEnabled:\n  neighbor iBGP-PE remote-as ${peerGroup.NeighborASN}\n        %for intf in peerGroup.NeighborIntfs:\n  neighbor ${intf.IPAddress} peer group iBGP-PE\n        %endfor\n      %endif\n    %endif\n  %endfor\n  %if evpnEnabled:\n  address-family evpn\n    neighbor iBGP-PE activate\n        next-hop resolution disabled\n  !\n  address-family ipv4\n    no neighbor iBGP-PE activate\n  !\n  %endif\n  %if l3vpnEnabled:\n  address-family vpn-ipv4\n    neighbor iBGP-PE activate\n        next-hop resolution disabled\n  !\n  address-family ipv4\n    no neighbor iBGP-PE activate\n  !\n  %endif\n%endif\n%endif\n</%def>\n"
            input_schema:
                fields:
                    values:
                        mlagLinkSubnet:
                            id: mlagLinkSubnet
                            name: mlagLinkSubnet
                            label: 'Subnet of the MLAG peer link'
                            description: 'IP Subnet of the MLAG peer link'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: 169.254.0.0/31
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        internalVlan:
                            id: internalVlan
                            name: internalVlan
                            label: 'VLAN to use for the MLAG peer link'
                            description: 'VLAN to use for the MLAG peer link'
                            required: false
                            type: INPUT_FIELD_TYPE_INTEGER
                            integer_props:
                                default_value: '4094'
                                range: null
                                static_options: null
                                dynamic_options: null
                        mlagPortChannelId:
                            id: mlagPortChannelId
                            name: mlagPortChannelId
                            label: 'MLAG Port-Channel ID'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_INTEGER
                            integer_props:
                                default_value: '2000'
                                range: null
                                static_options: null
                                dynamic_options: null
                        virtualRouterMac:
                            id: virtualRouterMac
                            name: virtualRouterMac
                            label: 'Virtual Router MAC'
                            description: 'Virtual MAC for other hosts or switches to connect to for redundancy'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: '00:1c:73:00:00:99'
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        lacpMode:
                            id: lacpMode
                            name: lacpMode
                            label: 'LACP Mode'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: ACTIVE
                                static_options:
                                    values:
                                        - ACTIVE
                                        - ON
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        commonMlagConfig:
                            id: commonMlagConfig
                            name: commonMlagConfig
                            label: 'MLAG Configuration'
                            description: 'This configuration is only used when the MLAG Interface field is populated for the devices in a Edge-Router-Domain'
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - mlagLinkSubnet
                                        - internalVlan
                                        - mlagPortChannelId
                                        - virtualRouterMac
                                        - lacpMode
                        rrAS:
                            id: rrAS
                            name: rrAS
                            label: ASN
                            description: 'BGP ASN for the RRs'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        rrBGPDynamicNeighbors:
                            id: rrBGPDynamicNeighbors
                            name: rrBGPDynamicNeighbors
                            label: 'RR BGP Dynamic Neighbors'
                            description: 'Only YES is currently supported'
                            required: false
                            type: INPUT_FIELD_TYPE_BOOLEAN
                            boolean_props:
                                default_value: true
                        evpnEnabled:
                            id: evpnEnabled
                            name: evpnEnabled
                            label: 'BGP EVPN Enabled'
                            description: 'Only YES is currently supported'
                            required: false
                            type: INPUT_FIELD_TYPE_BOOLEAN
                            boolean_props:
                                default_value: false
                        l3vpnEnabled:
                            id: l3vpnEnabled
                            name: l3vpnEnabled
                            label: 'BGP L3VPN Enabled'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_BOOLEAN
                            boolean_props:
                                default_value: false
                        bgpAuthKey:
                            id: bgpAuthKey
                            name: bgpAuthKey
                            label: 'BGP Auth Key'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        commonBGPConfig:
                            id: commonBGPConfig
                            name: commonBGPConfig
                            label: 'Common iBGP Configuration'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - rrAS
                                        - rrBGPDynamicNeighbors
                                        - evpnEnabled
                                        - l3vpnEnabled
                                        - bgpAuthKey
                        rrLinkPeer:
                            id: rrLinkPeer
                            name: rrLinkPeer
                            label: 'Neighbor Hostname'
                            description: 'Hostname of the P or PE Router directly connected to this RR'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        rrLinkPeerInterface:
                            id: rrLinkPeerInterface
                            name: rrLinkPeerInterface
                            label: 'Neighbor Interface'
                            description: 'This field is only used for interface descriptions'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        rripAddress:
                            id: rripAddress
                            name: rripAddress
                            label: 'Local IP Address'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        rsubnetMask:
                            id: rsubnetMask
                            name: rrsubnetMask
                            label: 'Local Subnet Mask'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: '31'
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        rrNeighborParams:
                            id: rrNeighborParams
                            name: rrNeighborParams
                            label: 'Neighbor Parameters'
                            description: null
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - rrLinkPeer
                                        - rrLinkPeerInterface
                                        - rripAddress
                                        - rsubnetMask
                        rrDownlink:
                            id: rrDownlink
                            name: rrDownlink
                            label: 'RR Downlink interface'
                            description: 'To directly connected P or PE routers'
                            required: false
                            type: INPUT_FIELD_TYPE_RESOLVER
                            resolver_props:
                                base_field_id: rrNeighborParams
                                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_INTERFACE_TAG
                                input_tag_label: interface
                                tag_filter_query: null
                        loopback0Address:
                            id: loopback0Address
                            name: loopback0Address
                            label: 'Loopback0 Address'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        rrInterfaceParams:
                            id: rrInterfaceParams
                            name: rrInterfaceParams
                            label: 'Fabric link Interface Parameters'
                            description: null
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - rrDownlink
                                        - loopback0Address
                        rrs:
                            id: rrs
                            name: rrs
                            label: 'RR Devices'
                            description: 'Used for overlay networks'
                            required: false
                            type: INPUT_FIELD_TYPE_RESOLVER
                            resolver_props:
                                base_field_id: rrInterfaceParams
                                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_DEVICE_TAG
                                input_tag_label: device
                                tag_filter_query: 'Role:RR'
                        asNumber:
                            id: asNumber
                            name: asNumber
                            label: 'AS Number'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_INTEGER
                            integer_props:
                                default_value: '65100'
                                range: null
                                static_options: null
                                dynamic_options: null
                        peMLAGInterface1:
                            id: peMLAGInterface1
                            name: peMLAGInterface1
                            label: 'MLAG Interface #1'
                            description: 'Populating these fields enables MLAG. ISIS or OSPF between the MLAG peers will also be configured.'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peMLAGInterface2:
                            id: peMLAGInterface2
                            name: peMLAGInterface2
                            label: 'MLAG Interface#2'
                            description: 'Populating these fields enables MLAG'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        pehostName:
                            id: pehostName
                            name: pehostName
                            label: 'Neighbor Host Name'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peinterface:
                            id: peinterface
                            name: peinterface
                            label: 'Neighbors''s Interface'
                            description: 'This field is only used for interface descriptions'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peipAddress:
                            id: peipAddress
                            name: peipAddress
                            label: 'Local IP Address'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        pesubnetMask:
                            id: pesubnetMask
                            name: pesubnetMask
                            label: 'Subnet Mask'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: '31'
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        peneighborDetails:
                            id: peneighborDetails
                            name: peneighborDetails
                            label: 'Neighbor Details'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - pehostName
                                        - peinterface
                                        - peipAddress
                                        - pesubnetMask
                        peneighbors:
                            id: peneighbors
                            name: peneighbors
                            label: Neighbors
                            description: 'Add Interface details if a Edge or Core router is directly connected'
                            required: false
                            type: INPUT_FIELD_TYPE_RESOLVER
                            resolver_props:
                                base_field_id: peneighborDetails
                                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_INTERFACE_TAG
                                input_tag_label: interface
                                tag_filter_query: null
                        peloopback0Address:
                            id: peloopback0Address
                            name: loopback0Address
                            label: 'Loopback0 Address'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        loopback1Address:
                            id: loopback1Address
                            name: loopback1Address
                            label: 'Loopback1 Address'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        fpenodeSegmentIndex:
                            id: fpenodeSegmentIndex
                            name: penodeSegmentIndex
                            label: 'Node Segment Index'
                            description: 'Segment Routing Index'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        tename:
                            id: tename
                            name: name
                            label: Name
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        tedescription:
                            id: tedescription
                            name: description
                            label: Description
                            description: 'Can contain spaces'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        color:
                            id: color
                            name: color
                            label: Color
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        rtValue:
                            id: rtValue
                            name: rtValue
                            label: RT
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        rt:
                            id: rt
                            name: rt
                            label: RT
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - rtValue
                        rTs:
                            id: rTs
                            name: rTs
                            label: RTs
                            description: 'Default is to match no routes. Add RTs to apply this policy.'
                            required: false
                            type: INPUT_FIELD_TYPE_COLLECTION
                            collection_props:
                                base_field_id: rt
                                key: ""
                        bindingId:
                            id: bindingId
                            name: bindingId
                            label: 'Binding ID'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: '1000000'
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        preference:
                            id: preference
                            name: preference
                            label: Preference
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: '100'
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        segmentList:
                            id: segmentList
                            name: segmentList
                            label: 'Segment List'
                            description: 'add space separated hostnames'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        pgpvalue:
                            id: pgpvalue
                            name: value
                            label: 'Path Preference Group'
                            description: 'Group of members for Path Preference'
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - preference
                                        - segmentList
                        pathPreference:
                            id: pathPreference
                            name: pathPreference
                            label: 'Path Preference'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_COLLECTION
                            collection_props:
                                base_field_id: pgpvalue
                                key: preference
                        matchAllRTs:
                            id: matchAllRTs
                            name: matchAllRTs
                            label: 'Match all RTs'
                            description: 'or specify RTs in the list below'
                            required: false
                            type: INPUT_FIELD_TYPE_BOOLEAN
                            boolean_props:
                                default_value: false
                        polvalue:
                            id: polvalue
                            name: value
                            label: 'Policy Group'
                            description: 'Group of members for Policy'
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - tename
                                        - tedescription
                                        - color
                                        - rTs
                                        - bindingId
                                        - pathPreference
                                        - matchAllRTs
                        tepol:
                            id: tepol
                            name: policy
                            label: Policy
                            description: 'Policy is applied "in" from routes sent by the RRs. Add Policy Name without spaces'
                            required: false
                            type: INPUT_FIELD_TYPE_COLLECTION
                            collection_props:
                                base_field_id: polvalue
                                key: tename
                        tepolname:
                            id: tepolname
                            name: name
                            label: 'Host Name'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        endPoint:
                            id: endPoint
                            name: endPoint
                            label: 'End Point'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - tepol
                                        - tepolname
                        teEndPoints:
                            id: teEndPoints
                            name: teEndPoints
                            label: 'SR TE End Points'
                            description: 'Add Hostname of TE End Point'
                            required: false
                            type: INPUT_FIELD_TYPE_COLLECTION
                            collection_props:
                                base_field_id: endPoint
                                key: tepolname
                        rrHostname:
                            id: rrHostname
                            name: rrHostname
                            label: 'RR Hostname'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        rrInterface:
                            id: rrInterface
                            name: rrInterface
                            label: 'RR Interface'
                            description: 'Interface description if directly to RR'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        localInterface:
                            id: localInterface
                            name: localInterface
                            label: 'Local Interface'
                            description: 'optional: used only if directly to RR'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        localIpAddress:
                            id: localIpAddress
                            name: localIpAddress
                            label: 'Local IP  Address'
                            description: 'optional: used only if directly to RR'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        localSubnetMask:
                            id: localSubnetMask
                            name: localSubnetMask
                            label: 'Local Subnet Mask'
                            description: 'optional: used only if directly to RR'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: '31'
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        rrHostnameGroup:
                            id: rrHostnameGroup
                            name: rrHostnameGroup
                            label: 'RR Hostname Group'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - rrHostname
                                        - rrInterface
                                        - localInterface
                                        - localIpAddress
                                        - localSubnetMask
                        rrHostnames:
                            id: rrHostnames
                            name: rrHostnames
                            label: 'RR Hostnames'
                            description: 'Only RR hostname required unless the RR is directly connected'
                            required: false
                            type: INPUT_FIELD_TYPE_COLLECTION
                            collection_props:
                                base_field_id: rrHostnameGroup
                                key: rrHostname
                        peLinkDetails:
                            id: peLinkDetails
                            name: peLinkDetails
                            label: 'PE Link Details'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - peMLAGInterface1
                                        - peMLAGInterface2
                                        - peneighbors
                                        - peloopback0Address
                                        - loopback1Address
                                        - fpenodeSegmentIndex
                                        - teEndPoints
                                        - rrHostnames
                        peDetails:
                            id: peDetails
                            name: peDetails
                            label: 'Edge Router Domain Members'
                            description: 'Single Device or MLAG Pair'
                            required: false
                            type: INPUT_FIELD_TYPE_RESOLVER
                            resolver_props:
                                base_field_id: peLinkDetails
                                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_DEVICE_TAG
                                input_tag_label: device
                                tag_filter_query: null
                        peDomain:
                            id: peDomain
                            name: peDomain
                            label: 'Edge Router Domain'
                            description: 'Single Device or MLAG Pair'
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - asNumber
                                        - peDetails
                        peDomains:
                            id: peDomains
                            name: peDomains
                            label: 'Edge Router Domains'
                            description: 'Single Device or MLAG Pair'
                            required: false
                            type: INPUT_FIELD_TYPE_RESOLVER
                            resolver_props:
                                base_field_id: peDomain
                                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_DEVICE_TAG
                                input_tag_label: Edge-Router-Domain
                                tag_filter_query: null
                        prrhostName:
                            id: prrhostName
                            name: prrhostName
                            label: 'RR Host Name'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        prrinterface:
                            id: prrinterface
                            name: prrinterface
                            label: 'RR Interface'
                            description: 'This field is only used for interface descriptions'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        prripAddress:
                            id: prripAddress
                            name: prripAddress
                            label: 'Local IP Address'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        prrsubnetMask:
                            id: prrsubnetMask
                            name: prrsubnetMask
                            label: 'Local Subnet Mask'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: '31'
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        prrDetails:
                            id: prrDetails
                            name: prrDetails
                            label: 'RR Details'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - prrhostName
                                        - prrinterface
                                        - prripAddress
                                        - prrsubnetMask
                        rRs:
                            id: rRs
                            name: rRs
                            label: RRs
                            description: 'Only required if a RR is directly connected to this P Router'
                            required: false
                            type: INPUT_FIELD_TYPE_RESOLVER
                            resolver_props:
                                base_field_id: prrDetails
                                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_INTERFACE_TAG
                                input_tag_label: interface
                                tag_filter_query: null
                        phostName:
                            id: phostName
                            name: phostName
                            label: 'Neighbor Host Name'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        pinterface:
                            id: pinterface
                            name: pinterface
                            label: 'Neighbor Interface'
                            description: 'This field is only used for interface descriptions'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        ipAddress:
                            id: ipAddress
                            name: pipAddress
                            label: 'Local IP Address'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        psubnetMask:
                            id: psubnetMask
                            name: psubnetMask
                            label: 'Subnet Mask'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: '31'
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        pneighborDetails:
                            id: pneighborDetails
                            name: pneighborDetails
                            label: 'Neighbor Details'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - phostName
                                        - pinterface
                                        - ipAddress
                                        - psubnetMask
                        pneighbor:
                            id: pneighbor
                            name: pneighbor
                            label: Neighbors
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_RESOLVER
                            resolver_props:
                                base_field_id: pneighborDetails
                                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_INTERFACE_TAG
                                input_tag_label: interface
                                tag_filter_query: null
                        ploopback0Address:
                            id: ploopback0Address
                            name: loopback0Address
                            label: 'Loopback0 Address'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        pnodeSegmentIndex:
                            id: pnodeSegmentIndex
                            name: pnodeSegmentIndex
                            label: 'Node Segment Index'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        pLinkDetails:
                            id: pLinkDetails
                            name: pLinkDetails
                            label: 'P Link Details'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - rRs
                                        - pneighbor
                                        - ploopback0Address
                                        - pnodeSegmentIndex
                        pRouters:
                            id: pRouters
                            name: pRouters
                            label: 'Core Routers'
                            description: 'These are P Routers if EVPN or L3VPN is enabled.'
                            required: false
                            type: INPUT_FIELD_TYPE_RESOLVER
                            resolver_props:
                                base_field_id: pLinkDetails
                                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_DEVICE_TAG
                                input_tag_label: device
                                tag_filter_query: 'Role:Core-Router'
                        igp:
                            id: igp
                            name: igp
                            label: IGP
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: ISIS
                                static_options:
                                    values:
                                        - OSPF
                                        - ISIS
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        mpls:
                            id: mpls
                            name: mpls
                            label: 'MPLS Labeling Type or VXLAN'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: NONE
                                static_options:
                                    values:
                                        - SR
                                        - LDP
                                        - RSVP
                                        - VXLAN
                                        - SR-TE
                                        - NONE
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        srTiFla:
                            id: srTiFla
                            name: srTiFla
                            label: 'SR TI-LFA'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: NOT-ENABLED
                                static_options:
                                    values:
                                        - ENABLED
                                        - NOT-ENABLED
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        isisAuthKey:
                            id: isisAuthKey
                            name: isisAuthKey
                            label: 'ISIS Auth Key'
                            description: optional
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        ospfAuthKey:
                            id: ospfAuthKey
                            name: ospfAuthKey
                            label: 'OSPF Auth Key'
                            description: optional
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        redistributeConnected:
                            id: redistributeConnected
                            name: redistributeConnected
                            label: 'Redistribute Connected'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: NOT-ENABLED
                                static_options:
                                    values:
                                        - NOT-ENABLED
                                        - ENABLED
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        pod:
                            id: pod
                            name: pod
                            label: 'Network Name'
                            description: 'A single pe-rr fabric instance'
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - commonMlagConfig
                                        - commonBGPConfig
                                        - rrs
                                        - peDomains
                                        - pRouters
                                        - igp
                                        - mpls
                                        - srTiFla
                                        - isisAuthKey
                                        - ospfAuthKey
                                        - redistributeConnected
                        pods:
                            id: pods
                            name: pods
                            label: 'Network Name'
                            description: 'Tags to use:  Network: "name" , RR-Number, Edge-Router-Domain: , Edge-Router-Number:, Core-Router-Number: To use MLAG between 2 Edge Routers in the same Edge Router Domain the Edge-Router-Number tag must be consecutive odd and even numbers.'
                            required: false
                            type: INPUT_FIELD_TYPE_RESOLVER
                            resolver_props:
                                base_field_id: pod
                                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_DEVICE_TAG
                                input_tag_label: Network
                                tag_filter_query: null
                        root:
                            id: root
                            name: ""
                            label: ""
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - pods
                layout:
                    value: '{"pod":{"key":"pod","type":"INPUT","order":["rrs","peDomains","pRouters","commonBGPConfig","igp","redistributeConnected","isisAuthKey","ospfAuthKey","mpls","srTiFla","commonMlagConfig"]},"pods":{"key":"pods","isPageLayout":true,"type":"INPUT","showDefaultRow":false},"rrInterfaceParams":{"key":"rrInterfaceParams","type":"INPUT","order":["loopback0Address","rrDownlink"]},"peLinkDetails":{"key":"peLinkDetails","type":"INPUT","order":["teEndPoints","peloopback0Address","fpenodeSegmentIndex","loopback1Address","rrHostnames","peneighbors","peMLAGInterface1","peMLAGInterface2"]},"asNumber":{"key":"asNumber","type":"INPUT","dependency":{"asNumber":{"value":["65100"],"mode":"HIDE"}}},"peDetails":{"key":"peDetails","isPageLayout":true,"type":"INPUT","showDefaultRow":false},"peMLAGInterface1":{"key":"peMLAGInterface1","type":"INPUT","dependency":{"peMLAGInterface2":{"value":["dummy"],"mode":"HIDE"}}},"peMLAGInterface2":{"key":"peMLAGInterface2","type":"INPUT","dependency":{}},"mlagLinkSubnet":{"key":"mlagLinkSubnet","type":"INPUT","dependency":{}},"internalVlan":{"key":"internalVlan","type":"INPUT","dependency":{}},"mlagPortChannelId":{"key":"mlagPortChannelId","type":"INPUT","dependency":{}},"virtualRouterMac":{"key":"virtualRouterMac","type":"INPUT","dependency":{}},"peASbase":{"key":"peASbase","type":"INPUT","dependency":{}},"pLinkDetails":{"key":"pLinkDetails","type":"INPUT","order":["ploopback0Address","pnodeSegmentIndex","rRs","pneighbor"]},"fabricLinksSubnet":{"key":"fabricLinksSubnet","type":"INPUT","dependency":{}},"fabricSubnetMask":{"key":"fabricSubnetMask","type":"INPUT","dependency":{}},"peLoopback1Subnet":{"key":"peLoopback1Subnet","type":"INPUT","dependency":{"mpls":{"value":["SR","LDP","NONE","SR-TE","RSVP"],"mode":"HIDE"}}},"3bb4bb4d-3ffa-49ab-8318-e588edddf4ee":{"key":"3bb4bb4d-3ffa-49ab-8318-e588edddf4ee","type":"INPUT","dependency":{"igp":{"value":["OSPF"],"mode":"HIDE"}}},"4d1b8f45-0f26-4049-82d3-4dddd16480b4":{"key":"4d1b8f45-0f26-4049-82d3-4dddd16480b4","type":"INPUT","dependency":{"igp":{"value":["OSPF"],"mode":"HIDE"}}},"4e6cd56c-54c3-420c-bd74-96fbf3c8010a":{"key":"4e6cd56c-54c3-420c-bd74-96fbf3c8010a","type":"INPUT","dependency":{"igp":{"value":["OSPF"],"mode":"HIDE"}}},"rrs":{"key":"rrs","isPageLayout":true,"type":"INPUT","showDefaultRow":false},"peLoopback0Subnet":{"key":"peLoopback0Subnet","type":"INPUT","dependency":{}},"rrLoopback0Subnet":{"key":"rrLoopback0Subnet","type":"INPUT","dependency":{}},"loopback1Address":{"key":"loopback1Address","dependency":{"mpls":{"value":["VXLAN"],"mode":"SHOW"}},"type":"INPUT"},"fpenodeSegmentIndex":{"key":"fpenodeSegmentIndex","type":"INPUT","dependency":{"mpls":{"value":["LDP","RSVP","NONE","VXLAN"],"mode":"HIDE"}}},"pnodeSegmentIndex":{"key":"pnodeSegmentIndex","type":"INPUT","dependency":{"mpls":{"value":["LDP","RSVP","NONE","VXLAN"],"mode":"HIDE"}}},"srTiFla":{"key":"srTiFla","valueToLabelMap":{"YES":"OK","NO":"NO","ENABLED":"ENABLED","NOT-ENABLED":"NOT-ENABLED"},"dependency":{"mpls":{"value":["NONE","VXLAN","RSVP","LDP"],"mode":"HIDE"}},"type":"INPUT"},"557303b1-6ee1-48cf-858a-254ee3c0f2c7":{"key":"557303b1-6ee1-48cf-858a-254ee3c0f2c7","type":"INPUT","dependency":{"mpls":{"value":["VXLAN","RSVP","LDP","SR"],"mode":"HIDE"}}},"2be1fb95-d687-47fd-8c26-e23068f12783":{"key":"2be1fb95-d687-47fd-8c26-e23068f12783","type":"INPUT","dependency":{"mpls":{"value":["VXLAN","RSVP","LDP","SR"],"mode":"HIDE"}}},"0d68c481-d05c-4068-9547-5706d2600697":{"key":"0d68c481-d05c-4068-9547-5706d2600697","type":"INPUT","dependency":{"mpls":{"value":["VXLAN","RSVP","LDP","SR"],"mode":"HIDE"}}},"15d6861b-c312-49bc-95a6-1cf0a68e5318":{"key":"15d6861b-c312-49bc-95a6-1cf0a68e5318","dependency":{"mpls":{"value":["VXLAN","RSVP","SR","LDP"],"mode":"HIDE"}},"type":"INPUT"},"d0ae26fb-34cd-4322-8775-4058b6b30d32":{"key":"d0ae26fb-34cd-4322-8775-4058b6b30d32","type":"INPUT","dependency":{"mpls":{"value":["VXLAN","RSVP","LDP","SR"],"mode":"HIDE"}}},"fe5eb0d2-6796-4487-b3be-e3914a66ae23":{"key":"fe5eb0d2-6796-4487-b3be-e3914a66ae23","type":"INPUT","dependency":{"mpls":{"value":["VXLAN","RSVP","LDP","SR"],"mode":"HIDE"}}},"3ee8cb8c-9693-44c5-88e5-06c6f6c2fb5e":{"key":"3ee8cb8c-9693-44c5-88e5-06c6f6c2fb5e","type":"INPUT","dependency":{"mpls":{"value":["VXLAN","RSVP","LDP","SR"],"mode":"HIDE"}}},"0d9e30e5-5032-44ec-ae17-03180f1c2244":{"key":"0d9e30e5-5032-44ec-ae17-03180f1c2244","type":"INPUT","order":["557303b1-6ee1-48cf-858a-254ee3c0f2c7","1b0abd50-9227-4ce5-a317-4012bbdfa0c0","2be1fb95-d687-47fd-8c26-e23068f12783","0d68c481-d05c-4068-9547-5706d2600697","fe5eb0d2-6796-4487-b3be-e3914a66ae23","d0ae26fb-34cd-4322-8775-4058b6b30d32","15d6861b-c312-49bc-95a6-1cf0a68e5318","3ee8cb8c-9693-44c5-88e5-06c6f6c2fb5e"]},"1b0abd50-9227-4ce5-a317-4012bbdfa0c0":{"key":"1b0abd50-9227-4ce5-a317-4012bbdfa0c0","type":"INPUT","dependency":{"mpls":{"value":["VXLAN","RSVP","LDP","SR"],"mode":"HIDE"}}},"endPoint":{"key":"endPoint","type":"INPUT","order":["tepolname","tepol"]},"tepol":{"key":"tepol","type":"INPUT","isPageLayout":true},"tepolname":{"key":"tepolname","dependency":{"mpls":{"value":["SR-TE"],"mode":"SHOW"}},"type":"INPUT"},"tename":{"key":"tename","dependency":{"mpls":{"value":["SR-TE"],"mode":"SHOW"}},"type":"INPUT"},"tedescription":{"key":"tedescription","dependency":{"mpls":{"value":["SR-TE"],"mode":"SHOW"}},"type":"INPUT"},"color":{"key":"color","dependency":{"mpls":{"value":["SR-TE"],"mode":"SHOW"}},"type":"INPUT"},"matchAllRTs":{"key":"matchAllRTs","type":"INPUT","dependency":{"mpls":{"value":["VXLAN","NONE","RSVP","LDP","SR"],"mode":"HIDE"}}},"5c1af054-423b-4fe7-9c6c-c8f4df405184":{"key":"5c1af054-423b-4fe7-9c6c-c8f4df405184","dependency":{"mpls":{"value":["VXLAN","RSVP","LDP","SR"],"mode":"HIDE"}},"type":"INPUT"},"a0bb1533-b410-4c5f-8642-7e9c4b1bc28b":{"key":"a0bb1533-b410-4c5f-8642-7e9c4b1bc28b","dependency":{"mpls":{"value":["VXLAN","RSVP","LDP","SR"],"mode":"HIDE"}},"type":"INPUT"},"rtValue":{"key":"rtValue","type":"INPUT","dependency":{"mpls":{"value":["VXLAN","NONE","RSVP","LDP","SR"],"mode":"HIDE"}}},"bindingId":{"key":"bindingId","type":"INPUT","dependency":{"mpls":{"value":["VXLAN","NONE","RSVP","LDP","SR"],"mode":"HIDE"}}},"teEndPoints":{"key":"teEndPoints","type":"INPUT","isPageLayout":true},"polvalue":{"key":"polvalue","type":"INPUT","order":["tename","tedescription","color","pathPreference","matchAllRTs","rTs","bindingId"]},"preference":{"key":"preference","dependency":{"mpls":{"value":["SR-TE"],"mode":"SHOW"}},"type":"INPUT"},"segmentList":{"key":"segmentList","dependency":{"mpls":{"value":["SR-TE"],"mode":"SHOW"}},"type":"INPUT"},"peDomains":{"key":"peDomains","type":"INPUT","showDefaultRow":false},"pRouters":{"key":"pRouters","type":"INPUT","showDefaultRow":false},"isisAuthKey":{"key":"isisAuthKey","type":"INPUT","dependency":{"igp":{"value":["OSPF"],"mode":"HIDE"}}},"ospfAuthKey":{"key":"ospfAuthKey","type":"INPUT","dependency":{"igp":{"value":["ISIS"],"mode":"HIDE"}}},"peneighbors":{"key":"peneighbors","type":"INPUT","showDefaultRow":false},"rRs":{"key":"rRs","type":"INPUT","showDefaultRow":false},"pneighbor":{"key":"pneighbor","type":"INPUT","showDefaultRow":false},"rrBGPDynamicNeighbors":{"key":"rrBGPDynamicNeighbors","dependency":{"rrAS":{"value":[],"mode":"HIDE"}},"type":"INPUT"},"evpnEnabled":{"key":"evpnEnabled","dependency":{"rrAS":{"value":[],"mode":"HIDE"}},"type":"INPUT"},"l3vpnEnabled":{"key":"l3vpnEnabled","dependency":{"rrAS":{"value":[],"mode":"HIDE"}},"type":"INPUT"},"bgpAuthKey":{"key":"bgpAuthKey","dependency":{"rrAS":{"value":[],"mode":"HIDE"}},"type":"INPUT"}}'
